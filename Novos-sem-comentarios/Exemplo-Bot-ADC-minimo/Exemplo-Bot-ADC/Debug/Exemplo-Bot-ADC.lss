
Exemplo-Bot-ADC.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006ebc  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00406ebc  00406ebc  00016ebc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c0  20000000  00406ec4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000004d4  200009c0  00407884  000209c0  2**2
                  ALLOC
  4 .stack        00003004  20000e94  00407d58  000209c0  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000209c0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209ea  2**0
                  CONTENTS, READONLY
  7 .debug_info   000156db  00000000  00000000  00020a43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002cac  00000000  00000000  0003611e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00005ef9  00000000  00000000  00038dca  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000009f8  00000000  00000000  0003ecc3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000a60  00000000  00000000  0003f6bb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000752f  00000000  00000000  0004011b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000c568  00000000  00000000  0004764a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00059c72  00000000  00000000  00053bb2  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000021f8  00000000  00000000  000ad824  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	98 3e 00 20 71 15 40 00 6d 15 40 00 6d 15 40 00     .>. q.@.m.@.m.@.
  400010:	6d 15 40 00 6d 15 40 00 6d 15 40 00 00 00 00 00     m.@.m.@.m.@.....
	...
  40002c:	6d 15 40 00 6d 15 40 00 00 00 00 00 6d 15 40 00     m.@.m.@.....m.@.
  40003c:	6d 15 40 00 6d 15 40 00 6d 15 40 00 6d 15 40 00     m.@.m.@.m.@.m.@.
  40004c:	6d 15 40 00 6d 15 40 00 6d 15 40 00 6d 15 40 00     m.@.m.@.m.@.m.@.
  40005c:	6d 15 40 00 6d 15 40 00 6d 15 40 00 00 00 00 00     m.@.m.@.m.@.....
  40006c:	d1 10 40 00 e5 10 40 00 f9 10 40 00 6d 15 40 00     ..@...@...@.m.@.
  40007c:	6d 15 40 00 00 00 00 00 00 00 00 00 6d 15 40 00     m.@.........m.@.
  40008c:	6d 15 40 00 6d 15 40 00 6d 15 40 00 6d 15 40 00     m.@.m.@.m.@.m.@.
  40009c:	b9 18 40 00 6d 15 40 00 6d 15 40 00 6d 15 40 00     ..@.m.@.m.@.m.@.
  4000ac:	6d 15 40 00 6d 15 40 00 0d 18 40 00 6d 15 40 00     m.@.m.@...@.m.@.
  4000bc:	6d 15 40 00 6d 15 40 00 6d 15 40 00 6d 15 40 00     m.@.m.@.m.@.m.@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200009c0 	.word	0x200009c0
  4000e8:	00000000 	.word	0x00000000
  4000ec:	00406ec4 	.word	0x00406ec4

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	00406ec4 	.word	0x00406ec4
  40012c:	200009c4 	.word	0x200009c4
  400130:	00406ec4 	.word	0x00406ec4
  400134:	00000000 	.word	0x00000000

00400138 <aat31xx_set_backlight>:
 * \param ul_level backlight level.
 *
 * \note pin BOARD_AAT31XX_SET_GPIO must be configured before calling aat31xx_set_backlight.
 */
void aat31xx_set_backlight(uint32_t ul_level)
{
  400138:	b4f0      	push	{r4, r5, r6, r7}
  40013a:	b082      	sub	sp, #8
	volatile uint32_t ul_delay;
	uint32_t i;

#ifdef CONF_BOARD_AAT3155
	ul_level = AAT31XX_MAX_BACKLIGHT_LEVEL - ul_level + 1;
  40013c:	f1c0 0011 	rsb	r0, r0, #17
#ifdef CONF_BOARD_AAT3193
	ul_level = AAT31XX_MAX_BACKLIGHT_LEVEL - ul_level + 1;
#endif

	/* Ensure valid level */
	ul_level = (ul_level > AAT31XX_MAX_BACKLIGHT_LEVEL) ? AAT31XX_MAX_BACKLIGHT_LEVEL : ul_level;
  400140:	2810      	cmp	r0, #16
  400142:	bf28      	it	cs
  400144:	2010      	movcs	r0, #16
	ul_level = (ul_level < AAT31XX_MIN_BACKLIGHT_LEVEL) ? AAT31XX_MIN_BACKLIGHT_LEVEL : ul_level;
  400146:	2800      	cmp	r0, #0
  400148:	bf08      	it	eq
  40014a:	2001      	moveq	r0, #1
{
  40014c:	2100      	movs	r1, #0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  40014e:	4d10      	ldr	r5, [pc, #64]	; (400190 <aat31xx_set_backlight+0x58>)
  400150:	f44f 5600 	mov.w	r6, #8192	; 0x2000
  400154:	4637      	mov	r7, r6

	/* Set new backlight level */
	for (i = 0; i < ul_level; i++) {
		ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_LOW);
		ul_delay = DELAY_PULSE;
  400156:	2418      	movs	r4, #24
  400158:	636f      	str	r7, [r5, #52]	; 0x34
  40015a:	9401      	str	r4, [sp, #4]
		while (ul_delay--) {
  40015c:	9b01      	ldr	r3, [sp, #4]
  40015e:	1e5a      	subs	r2, r3, #1
  400160:	9201      	str	r2, [sp, #4]
  400162:	2b00      	cmp	r3, #0
  400164:	d1fa      	bne.n	40015c <aat31xx_set_backlight+0x24>
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400166:	632e      	str	r6, [r5, #48]	; 0x30
		}

		ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_HIGH);

		ul_delay = DELAY_PULSE;
  400168:	9401      	str	r4, [sp, #4]
		while (ul_delay--) {
  40016a:	9b01      	ldr	r3, [sp, #4]
  40016c:	1e5a      	subs	r2, r3, #1
  40016e:	9201      	str	r2, [sp, #4]
  400170:	2b00      	cmp	r3, #0
  400172:	d1fa      	bne.n	40016a <aat31xx_set_backlight+0x32>
	for (i = 0; i < ul_level; i++) {
  400174:	3101      	adds	r1, #1
  400176:	4281      	cmp	r1, r0
  400178:	d3ee      	bcc.n	400158 <aat31xx_set_backlight+0x20>
		}
	}

	ul_delay = DELAY_ENABLE;
  40017a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  40017e:	9301      	str	r3, [sp, #4]
	while (ul_delay--) {
  400180:	9b01      	ldr	r3, [sp, #4]
  400182:	1e5a      	subs	r2, r3, #1
  400184:	9201      	str	r2, [sp, #4]
  400186:	2b00      	cmp	r3, #0
  400188:	d1fa      	bne.n	400180 <aat31xx_set_backlight+0x48>
	}
}
  40018a:	b002      	add	sp, #8
  40018c:	bcf0      	pop	{r4, r5, r6, r7}
  40018e:	4770      	bx	lr
  400190:	400e1200 	.word	0x400e1200

00400194 <aat31xx_disable_backlight>:

/**
 * \brief Switch off backlight.
 */
void aat31xx_disable_backlight(void)
{
  400194:	b082      	sub	sp, #8
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400196:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  40019a:	4b06      	ldr	r3, [pc, #24]	; (4001b4 <aat31xx_disable_backlight+0x20>)
  40019c:	635a      	str	r2, [r3, #52]	; 0x34
	volatile uint32_t ul_delay;

	ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_LOW);

	ul_delay = DELAY_DISABLE;
  40019e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  4001a2:	9301      	str	r3, [sp, #4]
	while (ul_delay--) {
  4001a4:	9b01      	ldr	r3, [sp, #4]
  4001a6:	1e5a      	subs	r2, r3, #1
  4001a8:	9201      	str	r2, [sp, #4]
  4001aa:	2b00      	cmp	r3, #0
  4001ac:	d1fa      	bne.n	4001a4 <aat31xx_disable_backlight+0x10>
	}
}
  4001ae:	b002      	add	sp, #8
  4001b0:	4770      	bx	lr
  4001b2:	bf00      	nop
  4001b4:	400e1200 	.word	0x400e1200

004001b8 <smc_set_setup_timing>:
 * \param ul_setup_timing Setup timing for NWE, NCS, NRD.
 */
void smc_set_setup_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_setup_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_SETUP = ul_setup_timing;
  4001b8:	0109      	lsls	r1, r1, #4
  4001ba:	5042      	str	r2, [r0, r1]
  4001bc:	4770      	bx	lr

004001be <smc_set_pulse_timing>:
 * \param ul_pulse_timing Pulse timing for NWE,NCS,NRD.
 */
void smc_set_pulse_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_pulse_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_PULSE = ul_pulse_timing;
  4001be:	eb00 1101 	add.w	r1, r0, r1, lsl #4
  4001c2:	604a      	str	r2, [r1, #4]
  4001c4:	4770      	bx	lr

004001c6 <smc_set_cycle_timing>:
 * \param ul_cycle_timing Cycle timing for NWE and NRD.
 */
void smc_set_cycle_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_cycle_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_CYCLE = ul_cycle_timing;
  4001c6:	eb00 1101 	add.w	r1, r0, r1, lsl #4
  4001ca:	608a      	str	r2, [r1, #8]
  4001cc:	4770      	bx	lr

004001ce <smc_set_mode>:
 * \param ul_cs Chip select number to be set.
 * \param ul_mode SMC mode.
 */
void smc_set_mode(Smc *p_smc, uint32_t ul_cs, uint32_t ul_mode)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_MODE = ul_mode;
  4001ce:	eb00 1101 	add.w	r1, r0, r1, lsl #4
  4001d2:	60ca      	str	r2, [r1, #12]
  4001d4:	4770      	bx	lr
	...

004001d8 <ili93xx_write_ram_prepare>:
/**
 * \brief Prepare to write GRAM data for ili93xx.
 */
static void ili93xx_write_ram_prepare(void)
{
	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  4001d8:	4b0b      	ldr	r3, [pc, #44]	; (400208 <ili93xx_write_ram_prepare+0x30>)
  4001da:	781b      	ldrb	r3, [r3, #0]
  4001dc:	2b01      	cmp	r3, #1
  4001de:	d002      	beq.n	4001e6 <ili93xx_write_ram_prepare+0xe>
		/** Write Data to GRAM (R22h) */
		LCD_IR(0);
		LCD_IR(ILI9325_GRAM_DATA_REG);
	} else if (g_uc_device_type == DEVICE_TYPE_ILI9341) {
  4001e0:	2b02      	cmp	r3, #2
  4001e2:	d007      	beq.n	4001f4 <ili93xx_write_ram_prepare+0x1c>
  4001e4:	4770      	bx	lr
/** Define EBI access for ILI93xx 8-bit System Interface.*/
#if defined(BOARD_ILI93XX_ADDR) && defined (BOARD_ILI93XX_RS)
static inline void LCD_IR(uint8_t lcd_index)
{
	/** ILI93XX index register address */
	*((volatile uint8_t *)(BOARD_ILI93XX_ADDR)) = lcd_index;
  4001e6:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  4001ea:	2200      	movs	r2, #0
  4001ec:	701a      	strb	r2, [r3, #0]
  4001ee:	2222      	movs	r2, #34	; 0x22
  4001f0:	701a      	strb	r2, [r3, #0]
  4001f2:	4770      	bx	lr
  4001f4:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  4001f8:	222c      	movs	r2, #44	; 0x2c
  4001fa:	701a      	strb	r2, [r3, #0]
  4001fc:	2200      	movs	r2, #0
  4001fe:	701a      	strb	r2, [r3, #0]
  400200:	223c      	movs	r2, #60	; 0x3c
  400202:	701a      	strb	r2, [r3, #0]
		/** memory write command (R2Ch)*/
		LCD_IR(ILI9341_CMD_MEMORY_WRITE);
		LCD_IR(0);
		LCD_IR(ILI9341_CMD_WRITE_MEMORY_CONTINUE);
	}
}
  400204:	e7ee      	b.n	4001e4 <ili93xx_write_ram_prepare+0xc>
  400206:	bf00      	nop
  400208:	200009dc 	.word	0x200009dc

0040020c <ili93xx_write_ram>:
 *
 * \param ul_color 24-bits RGB color.
 */
static void ili93xx_write_ram(ili93xx_color_t ul_color)
{
	LCD_WD((ul_color >> 16) & 0xFF);
  40020c:	f3c0 4207 	ubfx	r2, r0, #16, #8
}

static inline void LCD_WD(uint8_t lcd_data)
{
	*((volatile uint8_t *)((BOARD_ILI93XX_ADDR) | (BOARD_ILI93XX_RS))) =
  400210:	4b03      	ldr	r3, [pc, #12]	; (400220 <ili93xx_write_ram+0x14>)
  400212:	701a      	strb	r2, [r3, #0]
	LCD_WD((ul_color >> 8) & 0xFF);
  400214:	f3c0 2207 	ubfx	r2, r0, #8, #8
  400218:	701a      	strb	r2, [r3, #0]
	LCD_WD(ul_color & 0xFF);
  40021a:	b2c0      	uxtb	r0, r0
  40021c:	7018      	strb	r0, [r3, #0]
  40021e:	4770      	bx	lr
  400220:	61000002 	.word	0x61000002

00400224 <ili93xx_write_ram_buffer>:
 * \param p_ul_buf data buffer.
 * \param ul_size size in pixels.
 */
static void ili93xx_write_ram_buffer(const ili93xx_color_t *p_ul_buf,
		uint32_t ul_size)
{
  400224:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400228:	4607      	mov	r7, r0
  40022a:	4688      	mov	r8, r1
	uint32_t ul_addr;
	for (ul_addr = 0; ul_addr < (ul_size - ul_size % 8); ul_addr += 8) {
  40022c:	f031 0907 	bics.w	r9, r1, #7
  400230:	d023      	beq.n	40027a <ili93xx_write_ram_buffer+0x56>
  400232:	4604      	mov	r4, r0
  400234:	2600      	movs	r6, #0
		ili93xx_write_ram(p_ul_buf[ul_addr]);
  400236:	4d12      	ldr	r5, [pc, #72]	; (400280 <ili93xx_write_ram_buffer+0x5c>)
  400238:	6820      	ldr	r0, [r4, #0]
  40023a:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 1]);
  40023c:	6860      	ldr	r0, [r4, #4]
  40023e:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 2]);
  400240:	68a0      	ldr	r0, [r4, #8]
  400242:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 3]);
  400244:	68e0      	ldr	r0, [r4, #12]
  400246:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 4]);
  400248:	6920      	ldr	r0, [r4, #16]
  40024a:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 5]);
  40024c:	6960      	ldr	r0, [r4, #20]
  40024e:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 6]);
  400250:	69a0      	ldr	r0, [r4, #24]
  400252:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 7]);
  400254:	69e0      	ldr	r0, [r4, #28]
  400256:	47a8      	blx	r5
	for (ul_addr = 0; ul_addr < (ul_size - ul_size % 8); ul_addr += 8) {
  400258:	3608      	adds	r6, #8
  40025a:	3420      	adds	r4, #32
  40025c:	454e      	cmp	r6, r9
  40025e:	d3eb      	bcc.n	400238 <ili93xx_write_ram_buffer+0x14>
	}
	for (; ul_addr < ul_size; ul_addr++) {
  400260:	4546      	cmp	r6, r8
  400262:	d208      	bcs.n	400276 <ili93xx_write_ram_buffer+0x52>
  400264:	eb07 0786 	add.w	r7, r7, r6, lsl #2
		ili93xx_write_ram(p_ul_buf[ul_addr]);
  400268:	4d05      	ldr	r5, [pc, #20]	; (400280 <ili93xx_write_ram_buffer+0x5c>)
  40026a:	f857 0b04 	ldr.w	r0, [r7], #4
  40026e:	47a8      	blx	r5
	for (; ul_addr < ul_size; ul_addr++) {
  400270:	3601      	adds	r6, #1
  400272:	45b0      	cmp	r8, r6
  400274:	d1f9      	bne.n	40026a <ili93xx_write_ram_buffer+0x46>
  400276:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	for (ul_addr = 0; ul_addr < (ul_size - ul_size % 8); ul_addr += 8) {
  40027a:	464e      	mov	r6, r9
  40027c:	e7f0      	b.n	400260 <ili93xx_write_ram_buffer+0x3c>
  40027e:	bf00      	nop
  400280:	0040020d 	.word	0x0040020d

00400284 <ili93xx_write_register_word>:
	*((volatile uint8_t *)(BOARD_ILI93XX_ADDR)) = lcd_index;
  400284:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  400288:	2200      	movs	r2, #0
  40028a:	701a      	strb	r2, [r3, #0]
  40028c:	7018      	strb	r0, [r3, #0]
 */
static void ili93xx_write_register_word(uint8_t uc_reg, uint16_t us_data)
{
	LCD_IR(0);
	LCD_IR(uc_reg);
	LCD_WD((us_data >> 8) & 0xFF);
  40028e:	0a0a      	lsrs	r2, r1, #8
	*((volatile uint8_t *)((BOARD_ILI93XX_ADDR) | (BOARD_ILI93XX_RS))) =
  400290:	3302      	adds	r3, #2
  400292:	701a      	strb	r2, [r3, #0]
	LCD_WD(us_data & 0xFF);
  400294:	b2c9      	uxtb	r1, r1
  400296:	7019      	strb	r1, [r3, #0]
  400298:	4770      	bx	lr
	...

0040029c <ili93xx_write_register>:
 * \param uc_reg register address.
 * \param us_data data to be written.
 */
static void ili93xx_write_register(uint8_t uc_reg, uint8_t *p_data,
		uint8_t uc_datacnt)
{
  40029c:	b410      	push	{r4}
	*((volatile uint8_t *)(BOARD_ILI93XX_ADDR)) = lcd_index;
  40029e:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  4002a2:	2400      	movs	r4, #0
  4002a4:	701c      	strb	r4, [r3, #0]
  4002a6:	7018      	strb	r0, [r3, #0]
	LCD_IR(0);
	LCD_IR(uc_reg);
	for (uint8_t i = 0; i < uc_datacnt; i++) {
  4002a8:	b14a      	cbz	r2, 4002be <ili93xx_write_register+0x22>
  4002aa:	1e4b      	subs	r3, r1, #1
  4002ac:	1e50      	subs	r0, r2, #1
  4002ae:	fa51 f180 	uxtab	r1, r1, r0
	*((volatile uint8_t *)((BOARD_ILI93XX_ADDR) | (BOARD_ILI93XX_RS))) =
  4002b2:	4804      	ldr	r0, [pc, #16]	; (4002c4 <ili93xx_write_register+0x28>)
		LCD_WD(p_data[i]);
  4002b4:	f813 2f01 	ldrb.w	r2, [r3, #1]!
  4002b8:	7002      	strb	r2, [r0, #0]
	for (uint8_t i = 0; i < uc_datacnt; i++) {
  4002ba:	428b      	cmp	r3, r1
  4002bc:	d1fa      	bne.n	4002b4 <ili93xx_write_register+0x18>
	}
}
  4002be:	bc10      	pop	{r4}
  4002c0:	4770      	bx	lr
  4002c2:	bf00      	nop
  4002c4:	61000002 	.word	0x61000002

004002c8 <ili93xx_delay>:

/**
 * \brief Delay function.
 */
static void ili93xx_delay(uint32_t ul_ms)
{
  4002c8:	b082      	sub	sp, #8
	volatile uint32_t i;

	for (i = 0; i < ul_ms; i++) {
  4002ca:	2300      	movs	r3, #0
  4002cc:	9301      	str	r3, [sp, #4]
  4002ce:	9b01      	ldr	r3, [sp, #4]
  4002d0:	4298      	cmp	r0, r3
  4002d2:	d911      	bls.n	4002f8 <ili93xx_delay+0x30>
		for (i = 0; i < 100000; i++) {
  4002d4:	2100      	movs	r1, #0
  4002d6:	4a09      	ldr	r2, [pc, #36]	; (4002fc <ili93xx_delay+0x34>)
  4002d8:	9101      	str	r1, [sp, #4]
  4002da:	9b01      	ldr	r3, [sp, #4]
  4002dc:	4293      	cmp	r3, r2
  4002de:	d805      	bhi.n	4002ec <ili93xx_delay+0x24>
  4002e0:	9b01      	ldr	r3, [sp, #4]
  4002e2:	3301      	adds	r3, #1
  4002e4:	9301      	str	r3, [sp, #4]
  4002e6:	9b01      	ldr	r3, [sp, #4]
  4002e8:	4293      	cmp	r3, r2
  4002ea:	d9f9      	bls.n	4002e0 <ili93xx_delay+0x18>
	for (i = 0; i < ul_ms; i++) {
  4002ec:	9b01      	ldr	r3, [sp, #4]
  4002ee:	3301      	adds	r3, #1
  4002f0:	9301      	str	r3, [sp, #4]
  4002f2:	9b01      	ldr	r3, [sp, #4]
  4002f4:	4283      	cmp	r3, r0
  4002f6:	d3ef      	bcc.n	4002d8 <ili93xx_delay+0x10>
		}
	}
}
  4002f8:	b002      	add	sp, #8
  4002fa:	4770      	bx	lr
  4002fc:	0001869f 	.word	0x0001869f

00400300 <ili93xx_check_box_coordinates>:
 * \param p_ul_x2 X coordinate of lower-right corner on LCD.
 * \param p_ul_y2 Y coordinate of lower-right corner on LCD.
 */
static void ili93xx_check_box_coordinates(uint32_t *p_ul_x1, uint32_t *p_ul_y1,
		uint32_t *p_ul_x2, uint32_t *p_ul_y2)
{
  400300:	b430      	push	{r4, r5}
	uint32_t dw;

	if (*p_ul_x1 >= g_ul_lcd_x_length) {
  400302:	4c15      	ldr	r4, [pc, #84]	; (400358 <ili93xx_check_box_coordinates+0x58>)
  400304:	6824      	ldr	r4, [r4, #0]
  400306:	6805      	ldr	r5, [r0, #0]
  400308:	42a5      	cmp	r5, r4
		*p_ul_x1 = g_ul_lcd_x_length - 1;
  40030a:	bf24      	itt	cs
  40030c:	f104 35ff 	addcs.w	r5, r4, #4294967295
  400310:	6005      	strcs	r5, [r0, #0]
	}

	if (*p_ul_x2 >= g_ul_lcd_x_length) {
  400312:	6815      	ldr	r5, [r2, #0]
  400314:	42ac      	cmp	r4, r5
		*p_ul_x2 = g_ul_lcd_x_length - 1;
  400316:	bf9c      	itt	ls
  400318:	f104 34ff 	addls.w	r4, r4, #4294967295
  40031c:	6014      	strls	r4, [r2, #0]
	}

	if (*p_ul_y1 >= g_ul_lcd_y_length) {
  40031e:	4c0f      	ldr	r4, [pc, #60]	; (40035c <ili93xx_check_box_coordinates+0x5c>)
  400320:	6824      	ldr	r4, [r4, #0]
  400322:	680d      	ldr	r5, [r1, #0]
  400324:	42a5      	cmp	r5, r4
		*p_ul_y1 = g_ul_lcd_y_length - 1;
  400326:	bf24      	itt	cs
  400328:	f104 35ff 	addcs.w	r5, r4, #4294967295
  40032c:	600d      	strcs	r5, [r1, #0]
	}

	if (*p_ul_y2 >= g_ul_lcd_y_length) {
  40032e:	681d      	ldr	r5, [r3, #0]
  400330:	42ac      	cmp	r4, r5
		*p_ul_y2 = g_ul_lcd_y_length - 1;
  400332:	bf9c      	itt	ls
  400334:	f104 34ff 	addls.w	r4, r4, #4294967295
  400338:	601c      	strls	r4, [r3, #0]
	}

	if (*p_ul_x1 > *p_ul_x2) {
  40033a:	6804      	ldr	r4, [r0, #0]
  40033c:	6815      	ldr	r5, [r2, #0]
  40033e:	42ac      	cmp	r4, r5
		dw = *p_ul_x1;
		*p_ul_x1 = *p_ul_x2;
  400340:	bf84      	itt	hi
  400342:	6005      	strhi	r5, [r0, #0]
		*p_ul_x2 = dw;
  400344:	6014      	strhi	r4, [r2, #0]
	}

	if (*p_ul_y1 > *p_ul_y2) {
  400346:	680a      	ldr	r2, [r1, #0]
  400348:	6818      	ldr	r0, [r3, #0]
  40034a:	4282      	cmp	r2, r0
		dw = *p_ul_y1;
		*p_ul_y1 = *p_ul_y2;
  40034c:	bf84      	itt	hi
  40034e:	6008      	strhi	r0, [r1, #0]
		*p_ul_y2 = dw;
  400350:	601a      	strhi	r2, [r3, #0]
	}
}
  400352:	bc30      	pop	{r4, r5}
  400354:	4770      	bx	lr
  400356:	bf00      	nop
  400358:	20000000 	.word	0x20000000
  40035c:	20000004 	.word	0x20000004

00400360 <ili93xx_device_type_identify>:
 *        ILI9341 device ID locates in Read ID4 (RD3h) register.
 *
 * \return 0 if secceed in identifying device; otherwise fails.
 */
uint8_t ili93xx_device_type_identify(void)
{
  400360:	b082      	sub	sp, #8
	*((volatile uint8_t *)(BOARD_ILI93XX_ADDR)) = lcd_index;
  400362:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  400366:	2200      	movs	r2, #0
  400368:	701a      	strb	r2, [r3, #0]
  40036a:	22d3      	movs	r2, #211	; 0xd3
  40036c:	701a      	strb	r2, [r3, #0]
																lcd_data;
}

static inline uint8_t LCD_RD(void)
{
	return *((volatile uint8_t *)((BOARD_ILI93XX_ADDR) |(BOARD_ILI93XX_RS)));
  40036e:	491a      	ldr	r1, [pc, #104]	; (4003d8 <ili93xx_device_type_identify+0x78>)
  400370:	780b      	ldrb	r3, [r1, #0]
		p_data[i] = LCD_RD();
  400372:	f88d 3000 	strb.w	r3, [sp]
  400376:	780b      	ldrb	r3, [r1, #0]
  400378:	f88d 3001 	strb.w	r3, [sp, #1]
  40037c:	780b      	ldrb	r3, [r1, #0]
  40037e:	b2da      	uxtb	r2, r3
  400380:	f88d 2002 	strb.w	r2, [sp, #2]
  400384:	780b      	ldrb	r3, [r1, #0]
  400386:	b2db      	uxtb	r3, r3
  400388:	f88d 3003 	strb.w	r3, [sp, #3]
	uint8_t paratable[6];
	uint16_t chipid;

	/** Read ID4 (RD4h) register to get device code for ILI9341*/
	ili93xx_read_register(ILI9341_CMD_READ_ID4, paratable, 4);
	chipid = ((uint16_t)paratable[2] << 8) + paratable[3];
  40038c:	eb03 2302 	add.w	r3, r3, r2, lsl #8

	if (chipid == ILI9341_DEVICE_CODE) {
  400390:	b29b      	uxth	r3, r3
  400392:	f249 3241 	movw	r2, #37697	; 0x9341
  400396:	4293      	cmp	r3, r2
  400398:	d014      	beq.n	4003c4 <ili93xx_device_type_identify+0x64>
	*((volatile uint8_t *)(BOARD_ILI93XX_ADDR)) = lcd_index;
  40039a:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  40039e:	2200      	movs	r2, #0
  4003a0:	701a      	strb	r2, [r3, #0]
  4003a2:	701a      	strb	r2, [r3, #0]
	return *((volatile uint8_t *)((BOARD_ILI93XX_ADDR) |(BOARD_ILI93XX_RS)));
  4003a4:	490c      	ldr	r1, [pc, #48]	; (4003d8 <ili93xx_device_type_identify+0x78>)
  4003a6:	780b      	ldrb	r3, [r1, #0]
  4003a8:	b2da      	uxtb	r2, r3
		p_data[i] = LCD_RD();
  4003aa:	f88d 2000 	strb.w	r2, [sp]
  4003ae:	780b      	ldrb	r3, [r1, #0]
		return 0;
	}

	/** Driver Code Read (R00h) for ILI9325*/
	ili93xx_read_register(ILI9325_DEVICE_CODE_REG, paratable, 2);
	chipid = ((uint16_t)paratable[0] << 8) + paratable[1];
  4003b0:	eb03 2302 	add.w	r3, r3, r2, lsl #8
	if (chipid == ILI9325_DEVICE_CODE) {
  4003b4:	b29b      	uxth	r3, r3
  4003b6:	f249 3225 	movw	r2, #37669	; 0x9325
  4003ba:	4293      	cmp	r3, r2
  4003bc:	d007      	beq.n	4003ce <ili93xx_device_type_identify+0x6e>
		g_uc_device_type = DEVICE_TYPE_ILI9325;
		return 0;
	}

	return 1;
  4003be:	2001      	movs	r0, #1
}
  4003c0:	b002      	add	sp, #8
  4003c2:	4770      	bx	lr
		g_uc_device_type = DEVICE_TYPE_ILI9341;
  4003c4:	2202      	movs	r2, #2
  4003c6:	4b05      	ldr	r3, [pc, #20]	; (4003dc <ili93xx_device_type_identify+0x7c>)
  4003c8:	701a      	strb	r2, [r3, #0]
		return 0;
  4003ca:	2000      	movs	r0, #0
  4003cc:	e7f8      	b.n	4003c0 <ili93xx_device_type_identify+0x60>
		g_uc_device_type = DEVICE_TYPE_ILI9325;
  4003ce:	2201      	movs	r2, #1
  4003d0:	4b02      	ldr	r3, [pc, #8]	; (4003dc <ili93xx_device_type_identify+0x7c>)
  4003d2:	701a      	strb	r2, [r3, #0]
		return 0;
  4003d4:	2000      	movs	r0, #0
  4003d6:	e7f3      	b.n	4003c0 <ili93xx_device_type_identify+0x60>
  4003d8:	61000002 	.word	0x61000002
  4003dc:	200009dc 	.word	0x200009dc

004003e0 <ili93xx_display_on>:

/**
 * \brief Turn on the LCD.
 */
void ili93xx_display_on(void)
{
  4003e0:	b508      	push	{r3, lr}
	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  4003e2:	4b09      	ldr	r3, [pc, #36]	; (400408 <ili93xx_display_on+0x28>)
  4003e4:	781b      	ldrb	r3, [r3, #0]
  4003e6:	2b01      	cmp	r3, #1
  4003e8:	d002      	beq.n	4003f0 <ili93xx_display_on+0x10>
		ili93xx_write_register_word(ILI9325_DISP_CTRL1,
				ILI9325_DISP_CTRL1_BASEE |
				ILI9325_DISP_CTRL1_GON |
				ILI9325_DISP_CTRL1_DTE |
				ILI9325_DISP_CTRL1_D(0x03));
	} else if (g_uc_device_type == DEVICE_TYPE_ILI9341) {
  4003ea:	2b02      	cmp	r3, #2
  4003ec:	d006      	beq.n	4003fc <ili93xx_display_on+0x1c>
  4003ee:	bd08      	pop	{r3, pc}
		ili93xx_write_register_word(ILI9325_DISP_CTRL1,
  4003f0:	f240 1133 	movw	r1, #307	; 0x133
  4003f4:	2007      	movs	r0, #7
  4003f6:	4b05      	ldr	r3, [pc, #20]	; (40040c <ili93xx_display_on+0x2c>)
  4003f8:	4798      	blx	r3
  4003fa:	bd08      	pop	{r3, pc}
		ili93xx_write_register(ILI9341_CMD_DISPLAY_ON, NULL, 0);
  4003fc:	2200      	movs	r2, #0
  4003fe:	4611      	mov	r1, r2
  400400:	2029      	movs	r0, #41	; 0x29
  400402:	4b03      	ldr	r3, [pc, #12]	; (400410 <ili93xx_display_on+0x30>)
  400404:	4798      	blx	r3
	}
}
  400406:	e7f2      	b.n	4003ee <ili93xx_display_on+0xe>
  400408:	200009dc 	.word	0x200009dc
  40040c:	00400285 	.word	0x00400285
  400410:	0040029d 	.word	0x0040029d

00400414 <ili93xx_set_foreground_color>:
 * \brief Set foreground color.
 *
 * \param ul_color foreground color.
 */
void ili93xx_set_foreground_color(ili93xx_color_t ul_color)
{
  400414:	4a04      	ldr	r2, [pc, #16]	; (400428 <ili93xx_set_foreground_color+0x14>)
  400416:	1f13      	subs	r3, r2, #4
  400418:	f502 726f 	add.w	r2, r2, #956	; 0x3bc
	uint32_t i;

	/** Fill the cache with selected color */
	for (i = 0; i < LCD_DATA_CACHE_SIZE; ++i) {
		g_ul_pixel_cache[i] = ul_color;
  40041c:	f843 0f04 	str.w	r0, [r3, #4]!
	for (i = 0; i < LCD_DATA_CACHE_SIZE; ++i) {
  400420:	4293      	cmp	r3, r2
  400422:	d1fb      	bne.n	40041c <ili93xx_set_foreground_color+0x8>
	}
}
  400424:	4770      	bx	lr
  400426:	bf00      	nop
  400428:	200009e0 	.word	0x200009e0

0040042c <ili93xx_set_window>:
 * \param ul_width The width of the window.
 * \param ul_height The height of the window.
 */
void ili93xx_set_window(uint32_t ul_x, uint32_t ul_y, uint32_t ul_width,
		uint32_t ul_height)
{
  40042c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400430:	b082      	sub	sp, #8
  400432:	460c      	mov	r4, r1
  400434:	4617      	mov	r7, r2
  400436:	461e      	mov	r6, r3
	Assert(ul_x <= (g_ul_lcd_x_length - 1));
	Assert(ul_y <= (g_ul_lcd_y_length - 1));
	Assert(ul_width <= (g_ul_lcd_x_length - ul_x));
	Assert(ul_height <= (g_ul_lcd_y_length - ul_y));
	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  400438:	4b23      	ldr	r3, [pc, #140]	; (4004c8 <ili93xx_set_window+0x9c>)
  40043a:	781b      	ldrb	r3, [r3, #0]
  40043c:	2b01      	cmp	r3, #1
  40043e:	d004      	beq.n	40044a <ili93xx_set_window+0x1e>
				(uint16_t)ul_y);

		/** Set Vertical Address End Position */
		ili93xx_write_register_word(ILI9325_VERTICAL_ADDR_END,
				(uint16_t)(ul_y + ul_height - 1));
	} else if (g_uc_device_type == DEVICE_TYPE_ILI9341) {
  400440:	2b02      	cmp	r3, #2
  400442:	d017      	beq.n	400474 <ili93xx_set_window+0x48>
		paratable[2] = ((ul_y + ul_height - 1) >> 8) & 0xFF;
		paratable[3] = (ul_y + ul_height - 1) & 0xFF;
		ili93xx_write_register(ILI9341_CMD_PAGE_ADDRESS_SET,
				       paratable, 4);
	}
}
  400444:	b002      	add	sp, #8
  400446:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		ili93xx_write_register_word(ILI9325_HORIZONTAL_ADDR_START,
  40044a:	b285      	uxth	r5, r0
  40044c:	4629      	mov	r1, r5
  40044e:	2050      	movs	r0, #80	; 0x50
  400450:	f8df 807c 	ldr.w	r8, [pc, #124]	; 4004d0 <ili93xx_set_window+0xa4>
  400454:	47c0      	blx	r8
		ili93xx_write_register_word(ILI9325_HORIZONTAL_ADDR_END,
  400456:	1e78      	subs	r0, r7, #1
  400458:	4428      	add	r0, r5
  40045a:	b281      	uxth	r1, r0
  40045c:	2051      	movs	r0, #81	; 0x51
  40045e:	47c0      	blx	r8
		ili93xx_write_register_word(ILI9325_VERTICAL_ADDR_START,
  400460:	b2a4      	uxth	r4, r4
  400462:	4621      	mov	r1, r4
  400464:	2052      	movs	r0, #82	; 0x52
  400466:	47c0      	blx	r8
		ili93xx_write_register_word(ILI9325_VERTICAL_ADDR_END,
  400468:	3e01      	subs	r6, #1
  40046a:	4434      	add	r4, r6
  40046c:	b2a1      	uxth	r1, r4
  40046e:	2053      	movs	r0, #83	; 0x53
  400470:	47c0      	blx	r8
  400472:	e7e7      	b.n	400444 <ili93xx_set_window+0x18>
		paratable[0] = (ul_x >> 8) & 0xFF;
  400474:	0a03      	lsrs	r3, r0, #8
  400476:	f88d 3004 	strb.w	r3, [sp, #4]
		paratable[1] = ul_x & 0xFF;
  40047a:	b2c2      	uxtb	r2, r0
  40047c:	f88d 2005 	strb.w	r2, [sp, #5]
		paratable[2] = ((ul_x + ul_width - 1) >> 8) & 0xFF;
  400480:	1e7b      	subs	r3, r7, #1
  400482:	4418      	add	r0, r3
  400484:	0a00      	lsrs	r0, r0, #8
  400486:	f88d 0006 	strb.w	r0, [sp, #6]
		paratable[3] = (ul_x + ul_width - 1) & 0xFF;
  40048a:	461f      	mov	r7, r3
  40048c:	4417      	add	r7, r2
  40048e:	f88d 7007 	strb.w	r7, [sp, #7]
		ili93xx_write_register(ILI9341_CMD_COLUMN_ADDRESS_SET,
  400492:	2204      	movs	r2, #4
  400494:	eb0d 0102 	add.w	r1, sp, r2
  400498:	202a      	movs	r0, #42	; 0x2a
  40049a:	4d0c      	ldr	r5, [pc, #48]	; (4004cc <ili93xx_set_window+0xa0>)
  40049c:	47a8      	blx	r5
		paratable[0] = (ul_y >> 8) & 0xFF;
  40049e:	0a23      	lsrs	r3, r4, #8
  4004a0:	f88d 3004 	strb.w	r3, [sp, #4]
		paratable[1] = ul_y & 0xFF;
  4004a4:	b2e2      	uxtb	r2, r4
  4004a6:	f88d 2005 	strb.w	r2, [sp, #5]
		paratable[2] = ((ul_y + ul_height - 1) >> 8) & 0xFF;
  4004aa:	1e73      	subs	r3, r6, #1
  4004ac:	441c      	add	r4, r3
  4004ae:	0a24      	lsrs	r4, r4, #8
  4004b0:	f88d 4006 	strb.w	r4, [sp, #6]
		paratable[3] = (ul_y + ul_height - 1) & 0xFF;
  4004b4:	461e      	mov	r6, r3
  4004b6:	4416      	add	r6, r2
  4004b8:	f88d 6007 	strb.w	r6, [sp, #7]
		ili93xx_write_register(ILI9341_CMD_PAGE_ADDRESS_SET,
  4004bc:	2204      	movs	r2, #4
  4004be:	eb0d 0102 	add.w	r1, sp, r2
  4004c2:	202b      	movs	r0, #43	; 0x2b
  4004c4:	47a8      	blx	r5
}
  4004c6:	e7bd      	b.n	400444 <ili93xx_set_window+0x18>
  4004c8:	200009dc 	.word	0x200009dc
  4004cc:	0040029d 	.word	0x0040029d
  4004d0:	00400285 	.word	0x00400285

004004d4 <ili93xx_set_cursor_position>:
 *
 * \param us_x X coordinate of upper-left corner on LCD.
 * \param us_y Y coordinate of upper-left corner on LCD.
 */
void ili93xx_set_cursor_position(uint16_t us_x, uint16_t us_y)
{
  4004d4:	b538      	push	{r3, r4, r5, lr}
	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  4004d6:	4b07      	ldr	r3, [pc, #28]	; (4004f4 <ili93xx_set_cursor_position+0x20>)
  4004d8:	781b      	ldrb	r3, [r3, #0]
  4004da:	2b01      	cmp	r3, #1
  4004dc:	d000      	beq.n	4004e0 <ili93xx_set_cursor_position+0xc>
  4004de:	bd38      	pop	{r3, r4, r5, pc}
  4004e0:	460c      	mov	r4, r1
  4004e2:	4601      	mov	r1, r0
		/** GRAM Horizontal/Vertical Address Set (R20h, R21h) */
		ili93xx_write_register_word(ILI9325_HORIZONTAL_GRAM_ADDR_SET, us_x);
  4004e4:	2020      	movs	r0, #32
  4004e6:	4d04      	ldr	r5, [pc, #16]	; (4004f8 <ili93xx_set_cursor_position+0x24>)
  4004e8:	47a8      	blx	r5
		ili93xx_write_register_word(ILI9325_VERTICAL_GRAM_ADDR_SET, us_y);
  4004ea:	4621      	mov	r1, r4
  4004ec:	2021      	movs	r0, #33	; 0x21
  4004ee:	47a8      	blx	r5
	} else if (g_uc_device_type == DEVICE_TYPE_ILI9341) {
		/** There is no corresponding operation for ILI9341. */
	}
}
  4004f0:	e7f5      	b.n	4004de <ili93xx_set_cursor_position+0xa>
  4004f2:	bf00      	nop
  4004f4:	200009dc 	.word	0x200009dc
  4004f8:	00400285 	.word	0x00400285

004004fc <ili93xx_init>:
{
  4004fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  400500:	b083      	sub	sp, #12
  400502:	4606      	mov	r6, r0
	if (ili93xx_device_type_identify() != 0) {
  400504:	4bac      	ldr	r3, [pc, #688]	; (4007b8 <ili93xx_init+0x2bc>)
  400506:	4798      	blx	r3
  400508:	2800      	cmp	r0, #0
  40050a:	f040 8152 	bne.w	4007b2 <ili93xx_init+0x2b6>
	g_ul_lcd_x_length = ILI93XX_LCD_WIDTH;
  40050e:	22f0      	movs	r2, #240	; 0xf0
  400510:	4baa      	ldr	r3, [pc, #680]	; (4007bc <ili93xx_init+0x2c0>)
  400512:	601a      	str	r2, [r3, #0]
	g_ul_lcd_y_length = ILI93XX_LCD_HEIGHT;
  400514:	f44f 72a0 	mov.w	r2, #320	; 0x140
  400518:	4ba9      	ldr	r3, [pc, #676]	; (4007c0 <ili93xx_init+0x2c4>)
  40051a:	601a      	str	r2, [r3, #0]
	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  40051c:	4ba9      	ldr	r3, [pc, #676]	; (4007c4 <ili93xx_init+0x2c8>)
  40051e:	781b      	ldrb	r3, [r3, #0]
  400520:	2b01      	cmp	r3, #1
  400522:	d006      	beq.n	400532 <ili93xx_init+0x36>
	} else if (g_uc_device_type == DEVICE_TYPE_ILI9341) {
  400524:	2b02      	cmp	r3, #2
  400526:	f000 80b5 	beq.w	400694 <ili93xx_init+0x198>
		return 1;
  40052a:	2001      	movs	r0, #1
}
  40052c:	b003      	add	sp, #12
  40052e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		ili93xx_write_register_word(ILI9325_DISP_CTRL1, ILI9325_DISP_CTRL1_GON |
  400532:	2133      	movs	r1, #51	; 0x33
  400534:	2007      	movs	r0, #7
  400536:	4ca4      	ldr	r4, [pc, #656]	; (4007c8 <ili93xx_init+0x2cc>)
  400538:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_POWER_CTRL1, 0x0000);
  40053a:	2100      	movs	r1, #0
  40053c:	2010      	movs	r0, #16
  40053e:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_START_OSC_CTRL,
  400540:	2101      	movs	r1, #1
  400542:	2000      	movs	r0, #0
  400544:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_DRIVER_OUTPUT_CTRL1,
  400546:	f44f 7180 	mov.w	r1, #256	; 0x100
  40054a:	2001      	movs	r0, #1
  40054c:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_LCD_DRIVING_CTRL,
  40054e:	f44f 61e0 	mov.w	r1, #1792	; 0x700
  400552:	2002      	movs	r0, #2
  400554:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_RESIZE_CTRL, 0x0000);
  400556:	2100      	movs	r1, #0
  400558:	2004      	movs	r0, #4
  40055a:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_DISP_CTRL2,
  40055c:	f240 2107 	movw	r1, #519	; 0x207
  400560:	2008      	movs	r0, #8
  400562:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_DISP_CTRL3, 0x0000);
  400564:	2100      	movs	r1, #0
  400566:	2009      	movs	r0, #9
  400568:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_DISP_CTRL4, 0x0000);
  40056a:	2100      	movs	r1, #0
  40056c:	200a      	movs	r0, #10
  40056e:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_RGB_DISP_INTERFACE_CTRL1,
  400570:	2100      	movs	r1, #0
  400572:	200c      	movs	r0, #12
  400574:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_FRAME_MAKER_POS, 0x0000);
  400576:	2100      	movs	r1, #0
  400578:	200d      	movs	r0, #13
  40057a:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_RGB_DISP_INTERFACE_CTRL2,
  40057c:	2100      	movs	r1, #0
  40057e:	200f      	movs	r0, #15
  400580:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_POWER_CTRL1, 0x0000);
  400582:	2100      	movs	r1, #0
  400584:	2010      	movs	r0, #16
  400586:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_POWER_CTRL2, 0x0000);
  400588:	2100      	movs	r1, #0
  40058a:	2011      	movs	r0, #17
  40058c:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_POWER_CTRL3, 0x0000);
  40058e:	2100      	movs	r1, #0
  400590:	2012      	movs	r0, #18
  400592:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_POWER_CTRL4, 0x0000);
  400594:	2100      	movs	r1, #0
  400596:	2013      	movs	r0, #19
  400598:	47a0      	blx	r4
		ili93xx_delay(200);
  40059a:	20c8      	movs	r0, #200	; 0xc8
  40059c:	4d8b      	ldr	r5, [pc, #556]	; (4007cc <ili93xx_init+0x2d0>)
  40059e:	47a8      	blx	r5
		ili93xx_write_register_word(ILI9325_POWER_CTRL1,
  4005a0:	f241 2190 	movw	r1, #4752	; 0x1290
  4005a4:	2010      	movs	r0, #16
  4005a6:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_POWER_CTRL2,
  4005a8:	f240 2127 	movw	r1, #551	; 0x227
  4005ac:	2011      	movs	r0, #17
  4005ae:	47a0      	blx	r4
		ili93xx_delay(50);
  4005b0:	2032      	movs	r0, #50	; 0x32
  4005b2:	47a8      	blx	r5
		ili93xx_write_register_word(ILI9325_POWER_CTRL3,
  4005b4:	211b      	movs	r1, #27
  4005b6:	2012      	movs	r0, #18
  4005b8:	47a0      	blx	r4
		ili93xx_delay(50);
  4005ba:	2032      	movs	r0, #50	; 0x32
  4005bc:	47a8      	blx	r5
		ili93xx_write_register_word(ILI9325_POWER_CTRL4,
  4005be:	f44f 5188 	mov.w	r1, #4352	; 0x1100
  4005c2:	2013      	movs	r0, #19
  4005c4:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_POWER_CTRL7,
  4005c6:	2119      	movs	r1, #25
  4005c8:	2029      	movs	r0, #41	; 0x29
  4005ca:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_FRAME_RATE_AND_COLOR_CTRL,
  4005cc:	210d      	movs	r1, #13
  4005ce:	202b      	movs	r0, #43	; 0x2b
  4005d0:	47a0      	blx	r4
		ili93xx_delay(50);
  4005d2:	2032      	movs	r0, #50	; 0x32
  4005d4:	47a8      	blx	r5
		ili93xx_write_register_word(ILI9325_GAMMA_CTL1, 0x0000);
  4005d6:	2100      	movs	r1, #0
  4005d8:	2030      	movs	r0, #48	; 0x30
  4005da:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL2,
  4005dc:	f44f 7101 	mov.w	r1, #516	; 0x204
  4005e0:	2031      	movs	r0, #49	; 0x31
  4005e2:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL3,
  4005e4:	f44f 7100 	mov.w	r1, #512	; 0x200
  4005e8:	2032      	movs	r0, #50	; 0x32
  4005ea:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL4,
  4005ec:	2107      	movs	r1, #7
  4005ee:	2035      	movs	r0, #53	; 0x35
  4005f0:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL5,
  4005f2:	f241 4104 	movw	r1, #5124	; 0x1404
  4005f6:	2036      	movs	r0, #54	; 0x36
  4005f8:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL6,
  4005fa:	f240 7105 	movw	r1, #1797	; 0x705
  4005fe:	2037      	movs	r0, #55	; 0x37
  400600:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL7,
  400602:	f240 3105 	movw	r1, #773	; 0x305
  400606:	2038      	movs	r0, #56	; 0x38
  400608:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL8,
  40060a:	f240 7107 	movw	r1, #1799	; 0x707
  40060e:	2039      	movs	r0, #57	; 0x39
  400610:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL9,
  400612:	f240 7101 	movw	r1, #1793	; 0x701
  400616:	203c      	movs	r0, #60	; 0x3c
  400618:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL10,
  40061a:	210e      	movs	r1, #14
  40061c:	203d      	movs	r0, #61	; 0x3d
  40061e:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_ENTRY_MODE,
  400620:	f24d 0110 	movw	r1, #53264	; 0xd010
  400624:	2003      	movs	r0, #3
  400626:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_DRIVER_OUTPUT_CTRL2,
  400628:	f44f 4127 	mov.w	r1, #42752	; 0xa700
  40062c:	2060      	movs	r0, #96	; 0x60
  40062e:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_BASE_IMG_DISP_CTRL,
  400630:	2101      	movs	r1, #1
  400632:	2061      	movs	r0, #97	; 0x61
  400634:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_VERTICAL_SCROLL_CTRL,
  400636:	2100      	movs	r1, #0
  400638:	206a      	movs	r0, #106	; 0x6a
  40063a:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_PARTIAL_IMG1_DISP_POS,
  40063c:	2100      	movs	r1, #0
  40063e:	2080      	movs	r0, #128	; 0x80
  400640:	47a0      	blx	r4
		ili93xx_write_register_word(
  400642:	2100      	movs	r1, #0
  400644:	2081      	movs	r0, #129	; 0x81
  400646:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_PARTIAL_IMG1_AREA_END_LINE,
  400648:	2100      	movs	r1, #0
  40064a:	2082      	movs	r0, #130	; 0x82
  40064c:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_PARTIAL_IMG2_DISP_POS,
  40064e:	2100      	movs	r1, #0
  400650:	2083      	movs	r0, #131	; 0x83
  400652:	47a0      	blx	r4
		ili93xx_write_register_word(
  400654:	2100      	movs	r1, #0
  400656:	2084      	movs	r0, #132	; 0x84
  400658:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_PARTIAL_IMG2_AREA_END_LINE,
  40065a:	2100      	movs	r1, #0
  40065c:	2085      	movs	r0, #133	; 0x85
  40065e:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_PANEL_INTERFACE_CTRL1,
  400660:	2110      	movs	r1, #16
  400662:	2090      	movs	r0, #144	; 0x90
  400664:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_PANEL_INTERFACE_CTRL2,
  400666:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  40066a:	2092      	movs	r0, #146	; 0x92
  40066c:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_PANEL_INTERFACE_CTRL4,
  40066e:	f44f 7188 	mov.w	r1, #272	; 0x110
  400672:	2095      	movs	r0, #149	; 0x95
  400674:	47a0      	blx	r4
		ili93xx_set_window(0, 0, p_opt->ul_width, p_opt->ul_height);
  400676:	6873      	ldr	r3, [r6, #4]
  400678:	6832      	ldr	r2, [r6, #0]
  40067a:	2100      	movs	r1, #0
  40067c:	4608      	mov	r0, r1
  40067e:	4c54      	ldr	r4, [pc, #336]	; (4007d0 <ili93xx_init+0x2d4>)
  400680:	47a0      	blx	r4
		ili93xx_set_foreground_color(p_opt->foreground_color);
  400682:	68b0      	ldr	r0, [r6, #8]
  400684:	4b53      	ldr	r3, [pc, #332]	; (4007d4 <ili93xx_init+0x2d8>)
  400686:	4798      	blx	r3
		ili93xx_set_cursor_position(0, 0);
  400688:	2100      	movs	r1, #0
  40068a:	4608      	mov	r0, r1
  40068c:	4b52      	ldr	r3, [pc, #328]	; (4007d8 <ili93xx_init+0x2dc>)
  40068e:	4798      	blx	r3
	return 0;
  400690:	2000      	movs	r0, #0
  400692:	e74b      	b.n	40052c <ili93xx_init+0x30>
		paratable[0] = 0x39;
  400694:	2339      	movs	r3, #57	; 0x39
  400696:	f88d 3000 	strb.w	r3, [sp]
		paratable[1] = 0x2C;
  40069a:	232c      	movs	r3, #44	; 0x2c
  40069c:	f88d 3001 	strb.w	r3, [sp, #1]
		paratable[2] = 0x00;
  4006a0:	2400      	movs	r4, #0
  4006a2:	f88d 4002 	strb.w	r4, [sp, #2]
		paratable[3] = 0x34;
  4006a6:	2334      	movs	r3, #52	; 0x34
  4006a8:	f88d 3003 	strb.w	r3, [sp, #3]
		paratable[4] = 0x02;
  4006ac:	2702      	movs	r7, #2
  4006ae:	f88d 7004 	strb.w	r7, [sp, #4]
		ili93xx_write_register(ILI9341_CMD_POWER_CONTROL_A, paratable, 5);
  4006b2:	2205      	movs	r2, #5
  4006b4:	4669      	mov	r1, sp
  4006b6:	20cb      	movs	r0, #203	; 0xcb
  4006b8:	4d48      	ldr	r5, [pc, #288]	; (4007dc <ili93xx_init+0x2e0>)
  4006ba:	47a8      	blx	r5
		paratable[0] = 0;
  4006bc:	f88d 4000 	strb.w	r4, [sp]
		paratable[1] = 0xAA;
  4006c0:	23aa      	movs	r3, #170	; 0xaa
  4006c2:	f88d 3001 	strb.w	r3, [sp, #1]
		paratable[2] = 0xB0;
  4006c6:	23b0      	movs	r3, #176	; 0xb0
  4006c8:	f88d 3002 	strb.w	r3, [sp, #2]
		ili93xx_write_register(ILI9341_CMD_POWER_CONTROL_B, paratable, 3);
  4006cc:	2203      	movs	r2, #3
  4006ce:	4669      	mov	r1, sp
  4006d0:	20cf      	movs	r0, #207	; 0xcf
  4006d2:	47a8      	blx	r5
		paratable[0] = 0x30;
  4006d4:	2330      	movs	r3, #48	; 0x30
  4006d6:	f88d 3000 	strb.w	r3, [sp]
		ili93xx_write_register(ILI9341_CMD_PUMP_RATIO_CONTROL,
  4006da:	2201      	movs	r2, #1
  4006dc:	4669      	mov	r1, sp
  4006de:	20f7      	movs	r0, #247	; 0xf7
  4006e0:	47a8      	blx	r5
		paratable[0] = 0x25;
  4006e2:	2325      	movs	r3, #37	; 0x25
  4006e4:	f88d 3000 	strb.w	r3, [sp]
		ili93xx_write_register(ILI9341_CMD_POWER_CONTROL_1, paratable, 1);
  4006e8:	2201      	movs	r2, #1
  4006ea:	4669      	mov	r1, sp
  4006ec:	20c0      	movs	r0, #192	; 0xc0
  4006ee:	47a8      	blx	r5
		paratable[0] = 0x11;
  4006f0:	f04f 0911 	mov.w	r9, #17
  4006f4:	f88d 9000 	strb.w	r9, [sp]
		ili93xx_write_register(ILI9341_CMD_POWER_CONTROL_2, paratable, 1);
  4006f8:	2201      	movs	r2, #1
  4006fa:	4669      	mov	r1, sp
  4006fc:	20c1      	movs	r0, #193	; 0xc1
  4006fe:	47a8      	blx	r5
		paratable[0] = 0x5C;
  400700:	235c      	movs	r3, #92	; 0x5c
  400702:	f88d 3000 	strb.w	r3, [sp]
		paratable[1] = 0x4C;
  400706:	234c      	movs	r3, #76	; 0x4c
  400708:	f88d 3001 	strb.w	r3, [sp, #1]
		ili93xx_write_register(ILI9341_CMD_VCOM_CONTROL_1, paratable, 2);
  40070c:	463a      	mov	r2, r7
  40070e:	4669      	mov	r1, sp
  400710:	20c5      	movs	r0, #197	; 0xc5
  400712:	47a8      	blx	r5
		paratable[0] = 0x94;
  400714:	2394      	movs	r3, #148	; 0x94
  400716:	f88d 3000 	strb.w	r3, [sp]
		ili93xx_write_register(ILI9341_CMD_VCOM_CONTROL_2, paratable, 1);
  40071a:	2201      	movs	r2, #1
  40071c:	4669      	mov	r1, sp
  40071e:	20c7      	movs	r0, #199	; 0xc7
  400720:	47a8      	blx	r5
		paratable[0] = 0x85;
  400722:	2385      	movs	r3, #133	; 0x85
  400724:	f88d 3000 	strb.w	r3, [sp]
		paratable[1] = 0x01;
  400728:	f04f 0801 	mov.w	r8, #1
  40072c:	f88d 8001 	strb.w	r8, [sp, #1]
		paratable[2] = 0x78;
  400730:	2378      	movs	r3, #120	; 0x78
  400732:	f88d 3002 	strb.w	r3, [sp, #2]
		ili93xx_write_register(ILI9341_CMD_DRIVER_TIMING_CTL_A, paratable, 3);
  400736:	2203      	movs	r2, #3
  400738:	4669      	mov	r1, sp
  40073a:	20e8      	movs	r0, #232	; 0xe8
  40073c:	47a8      	blx	r5
		paratable[0] = 0x00;
  40073e:	f88d 4000 	strb.w	r4, [sp]
		paratable[1] = 0x00;
  400742:	f88d 4001 	strb.w	r4, [sp, #1]
		ili93xx_write_register(ILI9341_CMD_DRIVER_TIMING_CTL_B, paratable, 2);
  400746:	463a      	mov	r2, r7
  400748:	4669      	mov	r1, sp
  40074a:	20ea      	movs	r0, #234	; 0xea
  40074c:	47a8      	blx	r5
		paratable[0] = ILI9341_CMD_MEMORY_ACCESS_CONTROL_MX |
  40074e:	2348      	movs	r3, #72	; 0x48
  400750:	f88d 3000 	strb.w	r3, [sp]
		ili93xx_write_register(ILI9341_CMD_MEMORY_ACCESS_CONTROL,
  400754:	4642      	mov	r2, r8
  400756:	4669      	mov	r1, sp
  400758:	2036      	movs	r0, #54	; 0x36
  40075a:	47a8      	blx	r5
		paratable[0] = 0x06;
  40075c:	2306      	movs	r3, #6
  40075e:	f88d 3000 	strb.w	r3, [sp]
		ili93xx_write_register(ILI9341_CMD_PIXEL_FORMAT_SET, paratable, 1);
  400762:	4642      	mov	r2, r8
  400764:	4669      	mov	r1, sp
  400766:	203a      	movs	r0, #58	; 0x3a
  400768:	47a8      	blx	r5
		paratable[0] = 0x02;
  40076a:	f88d 7000 	strb.w	r7, [sp]
		paratable[1] = 0x82;
  40076e:	2382      	movs	r3, #130	; 0x82
  400770:	f88d 3001 	strb.w	r3, [sp, #1]
		paratable[2] = 0x27;
  400774:	2327      	movs	r3, #39	; 0x27
  400776:	f88d 3002 	strb.w	r3, [sp, #2]
		paratable[3] = 0x00;
  40077a:	f88d 4003 	strb.w	r4, [sp, #3]
		ili93xx_write_register(ILI9341_CMD_DISPLAY_FUNCTION_CTL, paratable, 4);
  40077e:	2204      	movs	r2, #4
  400780:	4669      	mov	r1, sp
  400782:	20b6      	movs	r0, #182	; 0xb6
  400784:	47a8      	blx	r5
		ili93xx_set_window(0, 0, p_opt->ul_width, p_opt->ul_height);
  400786:	6873      	ldr	r3, [r6, #4]
  400788:	6832      	ldr	r2, [r6, #0]
  40078a:	4621      	mov	r1, r4
  40078c:	4620      	mov	r0, r4
  40078e:	4f10      	ldr	r7, [pc, #64]	; (4007d0 <ili93xx_init+0x2d4>)
  400790:	47b8      	blx	r7
		ili93xx_set_foreground_color(p_opt->foreground_color);
  400792:	68b0      	ldr	r0, [r6, #8]
  400794:	4b0f      	ldr	r3, [pc, #60]	; (4007d4 <ili93xx_init+0x2d8>)
  400796:	4798      	blx	r3
		ili93xx_write_register(ILI9341_CMD_SLEEP_OUT, paratable, 0);
  400798:	4622      	mov	r2, r4
  40079a:	4669      	mov	r1, sp
  40079c:	4648      	mov	r0, r9
  40079e:	47a8      	blx	r5
		ili93xx_delay(10);
  4007a0:	200a      	movs	r0, #10
  4007a2:	4b0a      	ldr	r3, [pc, #40]	; (4007cc <ili93xx_init+0x2d0>)
  4007a4:	4798      	blx	r3
		ili93xx_write_register(ILI9341_CMD_DISPLAY_ON, paratable, 0);
  4007a6:	4622      	mov	r2, r4
  4007a8:	4669      	mov	r1, sp
  4007aa:	2029      	movs	r0, #41	; 0x29
  4007ac:	47a8      	blx	r5
	return 0;
  4007ae:	4620      	mov	r0, r4
  4007b0:	e6bc      	b.n	40052c <ili93xx_init+0x30>
		return 1;
  4007b2:	2001      	movs	r0, #1
  4007b4:	e6ba      	b.n	40052c <ili93xx_init+0x30>
  4007b6:	bf00      	nop
  4007b8:	00400361 	.word	0x00400361
  4007bc:	20000000 	.word	0x20000000
  4007c0:	20000004 	.word	0x20000004
  4007c4:	200009dc 	.word	0x200009dc
  4007c8:	00400285 	.word	0x00400285
  4007cc:	004002c9 	.word	0x004002c9
  4007d0:	0040042d 	.word	0x0040042d
  4007d4:	00400415 	.word	0x00400415
  4007d8:	004004d5 	.word	0x004004d5
  4007dc:	0040029d 	.word	0x0040029d

004007e0 <ili93xx_draw_pixel>:
 *
 * \return 0 if succeeds, otherwise fails.
 */
uint32_t ili93xx_draw_pixel(uint32_t ul_x, uint32_t ul_y)
{
	if ((ul_x >= g_ul_lcd_x_length) || (ul_y >= g_ul_lcd_y_length)) {
  4007e0:	4b16      	ldr	r3, [pc, #88]	; (40083c <ili93xx_draw_pixel+0x5c>)
  4007e2:	681b      	ldr	r3, [r3, #0]
  4007e4:	4283      	cmp	r3, r0
  4007e6:	d924      	bls.n	400832 <ili93xx_draw_pixel+0x52>
  4007e8:	4b15      	ldr	r3, [pc, #84]	; (400840 <ili93xx_draw_pixel+0x60>)
  4007ea:	681b      	ldr	r3, [r3, #0]
  4007ec:	428b      	cmp	r3, r1
  4007ee:	d922      	bls.n	400836 <ili93xx_draw_pixel+0x56>
{
  4007f0:	b510      	push	{r4, lr}
		return 1;
	}

	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  4007f2:	4b14      	ldr	r3, [pc, #80]	; (400844 <ili93xx_draw_pixel+0x64>)
  4007f4:	781b      	ldrb	r3, [r3, #0]
  4007f6:	2b01      	cmp	r3, #1
  4007f8:	d003      	beq.n	400802 <ili93xx_draw_pixel+0x22>
		/** Set cursor */
		ili93xx_set_cursor_position(ul_x, ul_y);
		/** Prepare to write in GRAM */
		ili93xx_write_ram_prepare();
		ili93xx_write_ram(*g_ul_pixel_cache);
	} else if (g_uc_device_type == DEVICE_TYPE_ILI9341) {
  4007fa:	2b02      	cmp	r3, #2
  4007fc:	d00d      	beq.n	40081a <ili93xx_draw_pixel+0x3a>
		/** Prepare to write in GRAM */
		ili93xx_write_ram_prepare();
		ili93xx_write_ram(*g_ul_pixel_cache);
	}

	return 0;
  4007fe:	2000      	movs	r0, #0
}
  400800:	bd10      	pop	{r4, pc}
		ili93xx_set_cursor_position(ul_x, ul_y);
  400802:	b289      	uxth	r1, r1
  400804:	b280      	uxth	r0, r0
  400806:	4b10      	ldr	r3, [pc, #64]	; (400848 <ili93xx_draw_pixel+0x68>)
  400808:	4798      	blx	r3
		ili93xx_write_ram_prepare();
  40080a:	4b10      	ldr	r3, [pc, #64]	; (40084c <ili93xx_draw_pixel+0x6c>)
  40080c:	4798      	blx	r3
		ili93xx_write_ram(*g_ul_pixel_cache);
  40080e:	4b10      	ldr	r3, [pc, #64]	; (400850 <ili93xx_draw_pixel+0x70>)
  400810:	6818      	ldr	r0, [r3, #0]
  400812:	4b10      	ldr	r3, [pc, #64]	; (400854 <ili93xx_draw_pixel+0x74>)
  400814:	4798      	blx	r3
	return 0;
  400816:	2000      	movs	r0, #0
  400818:	bd10      	pop	{r4, pc}
		ili93xx_set_window(ul_x, ul_y, 0, 0);
  40081a:	2300      	movs	r3, #0
  40081c:	461a      	mov	r2, r3
  40081e:	4c0e      	ldr	r4, [pc, #56]	; (400858 <ili93xx_draw_pixel+0x78>)
  400820:	47a0      	blx	r4
		ili93xx_write_ram_prepare();
  400822:	4b0a      	ldr	r3, [pc, #40]	; (40084c <ili93xx_draw_pixel+0x6c>)
  400824:	4798      	blx	r3
		ili93xx_write_ram(*g_ul_pixel_cache);
  400826:	4b0a      	ldr	r3, [pc, #40]	; (400850 <ili93xx_draw_pixel+0x70>)
  400828:	6818      	ldr	r0, [r3, #0]
  40082a:	4b0a      	ldr	r3, [pc, #40]	; (400854 <ili93xx_draw_pixel+0x74>)
  40082c:	4798      	blx	r3
	return 0;
  40082e:	2000      	movs	r0, #0
  400830:	bd10      	pop	{r4, pc}
		return 1;
  400832:	2001      	movs	r0, #1
  400834:	4770      	bx	lr
  400836:	2001      	movs	r0, #1
  400838:	4770      	bx	lr
  40083a:	bf00      	nop
  40083c:	20000000 	.word	0x20000000
  400840:	20000004 	.word	0x20000004
  400844:	200009dc 	.word	0x200009dc
  400848:	004004d5 	.word	0x004004d5
  40084c:	004001d9 	.word	0x004001d9
  400850:	200009e0 	.word	0x200009e0
  400854:	0040020d 	.word	0x0040020d
  400858:	0040042d 	.word	0x0040042d

0040085c <ili93xx_draw_filled_rectangle>:
 * \param ul_x2 X coordinate of lower-right corner on LCD.
 * \param ul_y2 Y coordinate of lower-right corner on LCD.
 */
void ili93xx_draw_filled_rectangle(uint32_t ul_x1, uint32_t ul_y1,
		uint32_t ul_x2, uint32_t ul_y2)
{
  40085c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400860:	b084      	sub	sp, #16
  400862:	9003      	str	r0, [sp, #12]
  400864:	9102      	str	r1, [sp, #8]
  400866:	9201      	str	r2, [sp, #4]
  400868:	aa04      	add	r2, sp, #16
  40086a:	f842 3d10 	str.w	r3, [r2, #-16]!
	uint32_t size, blocks;

	/** Swap coordinates if necessary */
	ili93xx_check_box_coordinates(&ul_x1, &ul_y1, &ul_x2, &ul_y2);
  40086e:	4613      	mov	r3, r2
  400870:	aa01      	add	r2, sp, #4
  400872:	a902      	add	r1, sp, #8
  400874:	a803      	add	r0, sp, #12
  400876:	4c22      	ldr	r4, [pc, #136]	; (400900 <ili93xx_draw_filled_rectangle+0xa4>)
  400878:	47a0      	blx	r4

	/** Determine the refresh window area */
	ili93xx_set_window(ul_x1, ul_y1, (ul_x2 - ul_x1) + 1,
  40087a:	9803      	ldr	r0, [sp, #12]
  40087c:	9902      	ldr	r1, [sp, #8]
  40087e:	9b00      	ldr	r3, [sp, #0]
  400880:	3301      	adds	r3, #1
  400882:	9a01      	ldr	r2, [sp, #4]
  400884:	3201      	adds	r2, #1
  400886:	1a5b      	subs	r3, r3, r1
  400888:	1a12      	subs	r2, r2, r0
  40088a:	4c1e      	ldr	r4, [pc, #120]	; (400904 <ili93xx_draw_filled_rectangle+0xa8>)
  40088c:	47a0      	blx	r4
			(ul_y2 - ul_y1) + 1);

	/** Set cursor */
	ili93xx_set_cursor_position(ul_x1, ul_y1);
  40088e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
  400892:	f8bd 000c 	ldrh.w	r0, [sp, #12]
  400896:	4b1c      	ldr	r3, [pc, #112]	; (400908 <ili93xx_draw_filled_rectangle+0xac>)
  400898:	4798      	blx	r3

	/** Prepare to write in Graphic RAM */
	ili93xx_write_ram_prepare();
  40089a:	4b1c      	ldr	r3, [pc, #112]	; (40090c <ili93xx_draw_filled_rectangle+0xb0>)
  40089c:	4798      	blx	r3

	size = (ul_x2 - ul_x1 + 1) * (ul_y2 - ul_y1 + 1);
  40089e:	9a03      	ldr	r2, [sp, #12]
  4008a0:	9b01      	ldr	r3, [sp, #4]
  4008a2:	1a9a      	subs	r2, r3, r2
  4008a4:	9b00      	ldr	r3, [sp, #0]
  4008a6:	f103 0801 	add.w	r8, r3, #1
  4008aa:	9b02      	ldr	r3, [sp, #8]
  4008ac:	eba8 0803 	sub.w	r8, r8, r3
  4008b0:	fb02 8808 	mla	r8, r2, r8, r8

	/** Send pixels blocks => one SPI IT / block */
	blocks = size / LCD_DATA_CACHE_SIZE;
  4008b4:	4b16      	ldr	r3, [pc, #88]	; (400910 <ili93xx_draw_filled_rectangle+0xb4>)
  4008b6:	fba3 2308 	umull	r2, r3, r3, r8
  4008ba:	09db      	lsrs	r3, r3, #7
	while (blocks--) {
  4008bc:	b153      	cbz	r3, 4008d4 <ili93xx_draw_filled_rectangle+0x78>
  4008be:	1e5c      	subs	r4, r3, #1
		ili93xx_write_ram_buffer(g_ul_pixel_cache,
  4008c0:	4f14      	ldr	r7, [pc, #80]	; (400914 <ili93xx_draw_filled_rectangle+0xb8>)
  4008c2:	26f0      	movs	r6, #240	; 0xf0
  4008c4:	4d14      	ldr	r5, [pc, #80]	; (400918 <ili93xx_draw_filled_rectangle+0xbc>)
  4008c6:	4631      	mov	r1, r6
  4008c8:	4638      	mov	r0, r7
  4008ca:	47a8      	blx	r5
	while (blocks--) {
  4008cc:	3c01      	subs	r4, #1
  4008ce:	f1b4 3fff 	cmp.w	r4, #4294967295
  4008d2:	d1f8      	bne.n	4008c6 <ili93xx_draw_filled_rectangle+0x6a>
								LCD_DATA_CACHE_SIZE);
	}

	/** Send remaining pixels */
	ili93xx_write_ram_buffer(g_ul_pixel_cache,
  4008d4:	490e      	ldr	r1, [pc, #56]	; (400910 <ili93xx_draw_filled_rectangle+0xb4>)
  4008d6:	fba1 3108 	umull	r3, r1, r1, r8
  4008da:	09c9      	lsrs	r1, r1, #7
  4008dc:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
  4008e0:	eba8 1101 	sub.w	r1, r8, r1, lsl #4
  4008e4:	480b      	ldr	r0, [pc, #44]	; (400914 <ili93xx_draw_filled_rectangle+0xb8>)
  4008e6:	4b0c      	ldr	r3, [pc, #48]	; (400918 <ili93xx_draw_filled_rectangle+0xbc>)
  4008e8:	4798      	blx	r3
					size % LCD_DATA_CACHE_SIZE);

	/** Reset the refresh window area */
	ili93xx_set_window(0, 0, g_ul_lcd_x_length, g_ul_lcd_y_length);
  4008ea:	4b0c      	ldr	r3, [pc, #48]	; (40091c <ili93xx_draw_filled_rectangle+0xc0>)
  4008ec:	681b      	ldr	r3, [r3, #0]
  4008ee:	4a0c      	ldr	r2, [pc, #48]	; (400920 <ili93xx_draw_filled_rectangle+0xc4>)
  4008f0:	6812      	ldr	r2, [r2, #0]
  4008f2:	2100      	movs	r1, #0
  4008f4:	4608      	mov	r0, r1
  4008f6:	4c03      	ldr	r4, [pc, #12]	; (400904 <ili93xx_draw_filled_rectangle+0xa8>)
  4008f8:	47a0      	blx	r4
}
  4008fa:	b004      	add	sp, #16
  4008fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400900:	00400301 	.word	0x00400301
  400904:	0040042d 	.word	0x0040042d
  400908:	004004d5 	.word	0x004004d5
  40090c:	004001d9 	.word	0x004001d9
  400910:	88888889 	.word	0x88888889
  400914:	200009e0 	.word	0x200009e0
  400918:	00400225 	.word	0x00400225
  40091c:	20000004 	.word	0x20000004
  400920:	20000000 	.word	0x20000000

00400924 <ili93xx_draw_string>:
 * \param ul_x X coordinate of string top-left corner.
 * \param ul_y Y coordinate of string top-left corner.
 * \param p_str String to display.
 */
void ili93xx_draw_string(uint32_t ul_x, uint32_t ul_y, const uint8_t *p_str)
{
  400924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400928:	b085      	sub	sp, #20
  40092a:	9003      	str	r0, [sp, #12]
  40092c:	9202      	str	r2, [sp, #8]
	uint32_t xorg = ul_x;

	while (*p_str != 0) {
  40092e:	7813      	ldrb	r3, [r2, #0]
  400930:	2b00      	cmp	r3, #0
  400932:	d048      	beq.n	4009c6 <ili93xx_draw_string+0xa2>
  400934:	468b      	mov	fp, r1
  400936:	9001      	str	r0, [sp, #4]
				ili93xx_draw_pixel(ul_x + col, ul_y + row);
  400938:	f8df 8094 	ldr.w	r8, [pc, #148]	; 4009d0 <ili93xx_draw_string+0xac>
  40093c:	e033      	b.n	4009a6 <ili93xx_draw_string+0x82>
		/** If newline, jump to the next line (font height + 2) */
		if (*p_str == '\n') {
			ul_y += gfont.height + 2;
  40093e:	f10b 0b10 	add.w	fp, fp, #16
			ul_x = xorg;
  400942:	9b03      	ldr	r3, [sp, #12]
  400944:	9301      	str	r3, [sp, #4]
  400946:	e029      	b.n	40099c <ili93xx_draw_string+0x78>
  400948:	3c01      	subs	r4, #1
		for (row = 0; row < 8; row++) {
  40094a:	f1b4 3fff 	cmp.w	r4, #4294967295
  40094e:	d009      	beq.n	400964 <ili93xx_draw_string+0x40>
			if ((p_uc_charset10x14[offset0] >> (7 - row)) & 0x1) {
  400950:	782b      	ldrb	r3, [r5, #0]
  400952:	4123      	asrs	r3, r4
  400954:	f013 0f01 	tst.w	r3, #1
  400958:	d0f6      	beq.n	400948 <ili93xx_draw_string+0x24>
				ili93xx_draw_pixel(ul_x + col, ul_y + row);
  40095a:	ebaa 0104 	sub.w	r1, sl, r4
  40095e:	4630      	mov	r0, r6
  400960:	47c0      	blx	r8
  400962:	e7f1      	b.n	400948 <ili93xx_draw_string+0x24>
		for (row = 0; row < 8; row++) {
  400964:	2407      	movs	r4, #7
				ili93xx_draw_pixel(ul_x + col, ul_y + row + 8);
  400966:	f10b 090f 	add.w	r9, fp, #15
  40096a:	e002      	b.n	400972 <ili93xx_draw_string+0x4e>
  40096c:	3c01      	subs	r4, #1
		for (row = 0; row < 6; row++) {
  40096e:	2c01      	cmp	r4, #1
  400970:	d009      	beq.n	400986 <ili93xx_draw_string+0x62>
			if ((p_uc_charset10x14[offset1] >> (7 - row)) & 0x1) {
  400972:	787b      	ldrb	r3, [r7, #1]
  400974:	4123      	asrs	r3, r4
  400976:	f013 0f01 	tst.w	r3, #1
  40097a:	d0f7      	beq.n	40096c <ili93xx_draw_string+0x48>
				ili93xx_draw_pixel(ul_x + col, ul_y + row + 8);
  40097c:	eba9 0104 	sub.w	r1, r9, r4
  400980:	4630      	mov	r0, r6
  400982:	47c0      	blx	r8
  400984:	e7f2      	b.n	40096c <ili93xx_draw_string+0x48>
  400986:	3502      	adds	r5, #2
  400988:	3601      	adds	r6, #1
	for (col = 0; col < 10; col++) {
  40098a:	9b00      	ldr	r3, [sp, #0]
  40098c:	42b3      	cmp	r3, r6
  40098e:	d002      	beq.n	400996 <ili93xx_draw_string+0x72>
	offset = ((uint32_t)uc_c - 0x20) * 20;
  400990:	2407      	movs	r4, #7
  400992:	462f      	mov	r7, r5
  400994:	e7dc      	b.n	400950 <ili93xx_draw_string+0x2c>
			/**
			 * Draw the character and place cursor right after (font
			 * width + 2)
			 */
			ili93xx_draw_char(ul_x, ul_y, *p_str);
			ul_x += gfont.width + 2;
  400996:	9b01      	ldr	r3, [sp, #4]
  400998:	330c      	adds	r3, #12
  40099a:	9301      	str	r3, [sp, #4]
	while (*p_str != 0) {
  40099c:	9a02      	ldr	r2, [sp, #8]
  40099e:	f812 3f01 	ldrb.w	r3, [r2, #1]!
  4009a2:	9202      	str	r2, [sp, #8]
  4009a4:	b17b      	cbz	r3, 4009c6 <ili93xx_draw_string+0xa2>
		if (*p_str == '\n') {
  4009a6:	2b0a      	cmp	r3, #10
  4009a8:	d0c9      	beq.n	40093e <ili93xx_draw_string+0x1a>
	offset = ((uint32_t)uc_c - 0x20) * 20;
  4009aa:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  4009ae:	4d07      	ldr	r5, [pc, #28]	; (4009cc <ili93xx_draw_string+0xa8>)
  4009b0:	eb05 0383 	add.w	r3, r5, r3, lsl #2
  4009b4:	f5a3 7520 	sub.w	r5, r3, #640	; 0x280
  4009b8:	9e01      	ldr	r6, [sp, #4]
  4009ba:	4633      	mov	r3, r6
  4009bc:	330a      	adds	r3, #10
  4009be:	9300      	str	r3, [sp, #0]
				ili93xx_draw_pixel(ul_x + col, ul_y + row);
  4009c0:	f10b 0a07 	add.w	sl, fp, #7
  4009c4:	e7e4      	b.n	400990 <ili93xx_draw_string+0x6c>
		}

		p_str++;
	}
}
  4009c6:	b005      	add	sp, #20
  4009c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4009cc:	00406474 	.word	0x00406474
  4009d0:	004007e1 	.word	0x004007e1

004009d4 <adc_init>:
 *
 * \return 0 on success.
 */
uint32_t adc_init(Adc *p_adc, const uint32_t ul_mck,
		const uint32_t ul_adc_clock, const enum adc_startup_time startup)
{
  4009d4:	b430      	push	{r4, r5}
	uint32_t ul_prescal;

	/*  Reset the controller. */
	p_adc->ADC_CR = ADC_CR_SWRST;
  4009d6:	2401      	movs	r4, #1
  4009d8:	6004      	str	r4, [r0, #0]

	/* Reset Mode Register. */
	p_adc->ADC_MR = 0;
  4009da:	2400      	movs	r4, #0
  4009dc:	6044      	str	r4, [r0, #4]

	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
  4009de:	f240 2502 	movw	r5, #514	; 0x202
  4009e2:	f8c0 5120 	str.w	r5, [r0, #288]	; 0x120
	p_adc->ADC_RCR = 0;
  4009e6:	f8c0 4104 	str.w	r4, [r0, #260]	; 0x104
	p_adc->ADC_RNCR = 0;
  4009ea:	f8c0 4114 	str.w	r4, [r0, #276]	; 0x114

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
  4009ee:	6845      	ldr	r5, [r0, #4]
	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
  4009f0:	0052      	lsls	r2, r2, #1
  4009f2:	fbb1 f2f2 	udiv	r2, r1, r2
  4009f6:	3a01      	subs	r2, #1
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
  4009f8:	0212      	lsls	r2, r2, #8
  4009fa:	b292      	uxth	r2, r2
  4009fc:	432b      	orrs	r3, r5
  4009fe:	431a      	orrs	r2, r3
  400a00:	6042      	str	r2, [r0, #4]
	return 0;
}
  400a02:	4620      	mov	r0, r4
  400a04:	bc30      	pop	{r4, r5}
  400a06:	4770      	bx	lr

00400a08 <adc_configure_trigger>:
 *
 */
void adc_configure_trigger(Adc *p_adc, const enum adc_trigger_t trigger,
		uint8_t uc_freerun)
{
	p_adc->ADC_MR |= trigger | ((uc_freerun << 7) & ADC_MR_FREERUN);
  400a08:	6843      	ldr	r3, [r0, #4]
  400a0a:	01d2      	lsls	r2, r2, #7
  400a0c:	b2d2      	uxtb	r2, r2
  400a0e:	4319      	orrs	r1, r3
  400a10:	430a      	orrs	r2, r1
  400a12:	6042      	str	r2, [r0, #4]
  400a14:	4770      	bx	lr

00400a16 <adc_configure_timing>:
 * \param uc_settling Analog settling time = (uc_settling + 1) / ADC clock.
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
  400a16:	b410      	push	{r4}
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
  400a18:	6844      	ldr	r4, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
  400a1a:	0609      	lsls	r1, r1, #24
  400a1c:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
  400a20:	4321      	orrs	r1, r4
  400a22:	430a      	orrs	r2, r1
  400a24:	0719      	lsls	r1, r3, #28
  400a26:	f001 5140 	and.w	r1, r1, #805306368	; 0x30000000
  400a2a:	4311      	orrs	r1, r2
  400a2c:	6041      	str	r1, [r0, #4]
}
  400a2e:	bc10      	pop	{r4}
  400a30:	4770      	bx	lr

00400a32 <adc_start>:
 * \param p_adc Pointer to an ADC instance.
 */

void adc_start(Adc *p_adc)
{
	p_adc->ADC_CR = ADC_CR_START;
  400a32:	2302      	movs	r3, #2
  400a34:	6003      	str	r3, [r0, #0]
  400a36:	4770      	bx	lr

00400a38 <adc_enable_channel>:
 * \param p_adc Pointer to an ADC instance.
 * \param adc_ch ADC channel number.
 */
void adc_enable_channel(Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	p_adc->ADC_CHER = 1 << adc_ch;
  400a38:	2301      	movs	r3, #1
  400a3a:	fa03 f101 	lsl.w	r1, r3, r1
  400a3e:	6101      	str	r1, [r0, #16]
  400a40:	4770      	bx	lr

00400a42 <adc_get_channel_value>:
 */
uint32_t adc_get_channel_value(const Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	uint32_t ul_data = 0;

	if (15 >= adc_ch) {
  400a42:	290f      	cmp	r1, #15
		ul_data = *(p_adc->ADC_CDR + adc_ch);
  400a44:	bf9a      	itte	ls
  400a46:	3050      	addls	r0, #80	; 0x50
  400a48:	f850 0021 	ldrls.w	r0, [r0, r1, lsl #2]
	uint32_t ul_data = 0;
  400a4c:	2000      	movhi	r0, #0
	}

	return ul_data;
}
  400a4e:	4770      	bx	lr

00400a50 <adc_enable_interrupt>:
 * \param p_adc Pointer to an ADC instance.
 * \param ul_source Interrupts to be enabled.
 */
void adc_enable_interrupt(Adc *p_adc, const uint32_t ul_source)
{
	p_adc->ADC_IER = ul_source;
  400a50:	6241      	str	r1, [r0, #36]	; 0x24
  400a52:	4770      	bx	lr

00400a54 <adc_get_status>:
 *
 * \return ADC status structure.
 */
uint32_t adc_get_status(const Adc *p_adc)
{
	return p_adc->ADC_ISR;
  400a54:	6b00      	ldr	r0, [r0, #48]	; 0x30
}
  400a56:	4770      	bx	lr

00400a58 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  400a58:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400a5a:	0189      	lsls	r1, r1, #6
  400a5c:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  400a5e:	2402      	movs	r4, #2
  400a60:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  400a62:	f04f 31ff 	mov.w	r1, #4294967295
  400a66:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  400a68:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  400a6a:	605a      	str	r2, [r3, #4]
}
  400a6c:	bc10      	pop	{r4}
  400a6e:	4770      	bx	lr

00400a70 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  400a70:	0189      	lsls	r1, r1, #6
  400a72:	2305      	movs	r3, #5
  400a74:	5043      	str	r3, [r0, r1]
  400a76:	4770      	bx	lr

00400a78 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  400a78:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  400a7c:	61ca      	str	r2, [r1, #28]
  400a7e:	4770      	bx	lr

00400a80 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400a80:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  400a84:	624a      	str	r2, [r1, #36]	; 0x24
  400a86:	4770      	bx	lr

00400a88 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400a88:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  400a8c:	6a08      	ldr	r0, [r1, #32]
}
  400a8e:	4770      	bx	lr

00400a90 <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  400a90:	b4f0      	push	{r4, r5, r6, r7}
  400a92:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400a94:	2402      	movs	r4, #2
  400a96:	9401      	str	r4, [sp, #4]
  400a98:	2408      	movs	r4, #8
  400a9a:	9402      	str	r4, [sp, #8]
  400a9c:	2420      	movs	r4, #32
  400a9e:	9403      	str	r4, [sp, #12]
  400aa0:	2480      	movs	r4, #128	; 0x80
  400aa2:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  400aa4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  400aa6:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400aa8:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  400aaa:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  400aae:	d814      	bhi.n	400ada <tc_find_mck_divisor+0x4a>
  400ab0:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  400ab2:	42a0      	cmp	r0, r4
  400ab4:	d217      	bcs.n	400ae6 <tc_find_mck_divisor+0x56>
  400ab6:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  400ab8:	af01      	add	r7, sp, #4
  400aba:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  400abe:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  400ac2:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  400ac4:	4284      	cmp	r4, r0
  400ac6:	d30a      	bcc.n	400ade <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  400ac8:	4286      	cmp	r6, r0
  400aca:	d90d      	bls.n	400ae8 <tc_find_mck_divisor+0x58>
			ul_index++) {
  400acc:	3501      	adds	r5, #1
	for (ul_index = 0;
  400ace:	2d05      	cmp	r5, #5
  400ad0:	d1f3      	bne.n	400aba <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  400ad2:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  400ad4:	b006      	add	sp, #24
  400ad6:	bcf0      	pop	{r4, r5, r6, r7}
  400ad8:	4770      	bx	lr
			return 0;
  400ada:	2000      	movs	r0, #0
  400adc:	e7fa      	b.n	400ad4 <tc_find_mck_divisor+0x44>
  400ade:	2000      	movs	r0, #0
  400ae0:	e7f8      	b.n	400ad4 <tc_find_mck_divisor+0x44>
	return 1;
  400ae2:	2001      	movs	r0, #1
  400ae4:	e7f6      	b.n	400ad4 <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  400ae6:	2500      	movs	r5, #0
	if (p_uldiv) {
  400ae8:	b12a      	cbz	r2, 400af6 <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  400aea:	a906      	add	r1, sp, #24
  400aec:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  400af0:	f851 1c14 	ldr.w	r1, [r1, #-20]
  400af4:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  400af6:	2b00      	cmp	r3, #0
  400af8:	d0f3      	beq.n	400ae2 <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  400afa:	601d      	str	r5, [r3, #0]
	return 1;
  400afc:	2001      	movs	r0, #1
  400afe:	e7e9      	b.n	400ad4 <tc_find_mck_divisor+0x44>

00400b00 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400b00:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400b02:	480e      	ldr	r0, [pc, #56]	; (400b3c <sysclk_init+0x3c>)
  400b04:	4b0e      	ldr	r3, [pc, #56]	; (400b40 <sysclk_init+0x40>)
  400b06:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400b08:	213e      	movs	r1, #62	; 0x3e
  400b0a:	2000      	movs	r0, #0
  400b0c:	4b0d      	ldr	r3, [pc, #52]	; (400b44 <sysclk_init+0x44>)
  400b0e:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400b10:	4c0d      	ldr	r4, [pc, #52]	; (400b48 <sysclk_init+0x48>)
  400b12:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400b14:	2800      	cmp	r0, #0
  400b16:	d0fc      	beq.n	400b12 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400b18:	4b0c      	ldr	r3, [pc, #48]	; (400b4c <sysclk_init+0x4c>)
  400b1a:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400b1c:	4a0c      	ldr	r2, [pc, #48]	; (400b50 <sysclk_init+0x50>)
  400b1e:	4b0d      	ldr	r3, [pc, #52]	; (400b54 <sysclk_init+0x54>)
  400b20:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  400b22:	4c0d      	ldr	r4, [pc, #52]	; (400b58 <sysclk_init+0x58>)
  400b24:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400b26:	2800      	cmp	r0, #0
  400b28:	d0fc      	beq.n	400b24 <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400b2a:	2010      	movs	r0, #16
  400b2c:	4b0b      	ldr	r3, [pc, #44]	; (400b5c <sysclk_init+0x5c>)
  400b2e:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400b30:	4b0b      	ldr	r3, [pc, #44]	; (400b60 <sysclk_init+0x60>)
  400b32:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400b34:	4801      	ldr	r0, [pc, #4]	; (400b3c <sysclk_init+0x3c>)
  400b36:	4b02      	ldr	r3, [pc, #8]	; (400b40 <sysclk_init+0x40>)
  400b38:	4798      	blx	r3
  400b3a:	bd10      	pop	{r4, pc}
  400b3c:	07270e00 	.word	0x07270e00
  400b40:	0040172d 	.word	0x0040172d
  400b44:	00401171 	.word	0x00401171
  400b48:	004011c5 	.word	0x004011c5
  400b4c:	004011d5 	.word	0x004011d5
  400b50:	20133f01 	.word	0x20133f01
  400b54:	400e0400 	.word	0x400e0400
  400b58:	004011e5 	.word	0x004011e5
  400b5c:	0040110d 	.word	0x0040110d
  400b60:	0040161d 	.word	0x0040161d

00400b64 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
  400b64:	b538      	push	{r3, r4, r5, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400b66:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400b6a:	4b46      	ldr	r3, [pc, #280]	; (400c84 <board_init+0x120>)
  400b6c:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400b6e:	200b      	movs	r0, #11
  400b70:	4c45      	ldr	r4, [pc, #276]	; (400c88 <board_init+0x124>)
  400b72:	47a0      	blx	r4
  400b74:	200c      	movs	r0, #12
  400b76:	47a0      	blx	r4
  400b78:	200d      	movs	r0, #13
  400b7a:	47a0      	blx	r4
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  400b7c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400b80:	2013      	movs	r0, #19
  400b82:	4c42      	ldr	r4, [pc, #264]	; (400c8c <board_init+0x128>)
  400b84:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
  400b86:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400b8a:	2014      	movs	r0, #20
  400b8c:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  400b8e:	4940      	ldr	r1, [pc, #256]	; (400c90 <board_init+0x12c>)
  400b90:	2023      	movs	r0, #35	; 0x23
  400b92:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
  400b94:	493f      	ldr	r1, [pc, #252]	; (400c94 <board_init+0x130>)
  400b96:	204c      	movs	r0, #76	; 0x4c
  400b98:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  400b9a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  400b9e:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  400ba2:	483d      	ldr	r0, [pc, #244]	; (400c98 <board_init+0x134>)
  400ba4:	4b3d      	ldr	r3, [pc, #244]	; (400c9c <board_init+0x138>)
  400ba6:	4798      	blx	r3
#endif

	/* Configure ADC example pins */
#ifdef CONF_BOARD_ADC
	/* TC TIOA configuration */
	gpio_configure_pin(PIN_TC0_TIOA0,PIN_TC0_TIOA0_FLAGS);
  400ba8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400bac:	2000      	movs	r0, #0
  400bae:	47a0      	blx	r4

	/* ADC Trigger configuration */
	gpio_configure_pin(PINS_ADC_TRIG, PINS_ADC_TRIG_FLAG);
  400bb0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400bb4:	2008      	movs	r0, #8
  400bb6:	47a0      	blx	r4

	/* PWMH0 configuration */
	gpio_configure_pin(PIN_PWMC_PWMH0_TRIG, PIN_PWMC_PWMH0_TRIG_FLAG);
  400bb8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400bbc:	2052      	movs	r0, #82	; 0x52
  400bbe:	47a0      	blx	r4
	gpio_configure_pin(TWI1_CLK_GPIO, TWI1_CLK_FLAGS);
#endif

	/* Configure SPI pins */
#ifdef CONF_BOARD_SPI
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  400bc0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400bc4:	200c      	movs	r0, #12
  400bc6:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  400bc8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400bcc:	200d      	movs	r0, #13
  400bce:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  400bd0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400bd4:	200e      	movs	r0, #14
  400bd6:	47a0      	blx	r4
	 * Hence a different PIN should be selected using the CONF_BOARD_SPI_NPCS_GPIO and
	 * CONF_BOARD_SPI_NPCS_FLAGS macros.
	 */

#  ifdef CONF_BOARD_SPI_NPCS0
	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
  400bd8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400bdc:	200b      	movs	r0, #11
  400bde:	47a0      	blx	r4
#  endif
#endif /* CONF_BOARD_SPI */

#ifdef CONF_BOARD_USART_RXD
	/* Configure USART RXD pin */
	gpio_configure_pin(PIN_USART1_RXD_IDX, PIN_USART1_RXD_FLAGS);
  400be0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400be4:	2015      	movs	r0, #21
  400be6:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_USART_TXD
	/* Configure USART TXD pin */
	gpio_configure_pin(PIN_USART1_TXD_IDX, PIN_USART1_TXD_FLAGS);
  400be8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400bec:	2016      	movs	r0, #22
  400bee:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART1_SCK_IDX, PIN_USART1_SCK_FLAGS);
#endif

#ifdef CONF_BOARD_ADM3312_EN
	/* Configure ADM33312 enable pin */
	gpio_configure_pin(PIN_USART1_EN_IDX, PIN_USART1_EN_FLAGS);
  400bf0:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  400bf4:	2017      	movs	r0, #23
  400bf6:	47a0      	blx	r4
	gpio_set_pin_low(PIN_USART1_EN_IDX);
  400bf8:	2017      	movs	r0, #23
  400bfa:	4b29      	ldr	r3, [pc, #164]	; (400ca0 <board_init+0x13c>)
  400bfc:	4798      	blx	r3
	gpio_set_pin_low(PIN_RE_IDX);
#endif

#if defined(CONF_BOARD_ILI9325) || defined(CONF_BOARD_ILI93XX)
	/* Configure LCD EBI pins */
	gpio_configure_pin(PIN_EBI_DATA_BUS_D0, PIN_EBI_DATA_BUS_FLAGS);
  400bfe:	4d29      	ldr	r5, [pc, #164]	; (400ca4 <board_init+0x140>)
  400c00:	4629      	mov	r1, r5
  400c02:	2040      	movs	r0, #64	; 0x40
  400c04:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D1, PIN_EBI_DATA_BUS_FLAGS);
  400c06:	4629      	mov	r1, r5
  400c08:	2041      	movs	r0, #65	; 0x41
  400c0a:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D2, PIN_EBI_DATA_BUS_FLAGS);
  400c0c:	4629      	mov	r1, r5
  400c0e:	2042      	movs	r0, #66	; 0x42
  400c10:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D3, PIN_EBI_DATA_BUS_FLAGS);
  400c12:	4629      	mov	r1, r5
  400c14:	2043      	movs	r0, #67	; 0x43
  400c16:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D4, PIN_EBI_DATA_BUS_FLAGS);
  400c18:	4629      	mov	r1, r5
  400c1a:	2044      	movs	r0, #68	; 0x44
  400c1c:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D5, PIN_EBI_DATA_BUS_FLAGS);
  400c1e:	4629      	mov	r1, r5
  400c20:	2045      	movs	r0, #69	; 0x45
  400c22:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D6, PIN_EBI_DATA_BUS_FLAGS);
  400c24:	4629      	mov	r1, r5
  400c26:	2046      	movs	r0, #70	; 0x46
  400c28:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D7, PIN_EBI_DATA_BUS_FLAGS);
  400c2a:	4629      	mov	r1, r5
  400c2c:	2047      	movs	r0, #71	; 0x47
  400c2e:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NRD, PIN_EBI_NRD_FLAGS);
  400c30:	4629      	mov	r1, r5
  400c32:	204b      	movs	r0, #75	; 0x4b
  400c34:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NWE, PIN_EBI_NWE_FLAGS);
  400c36:	4629      	mov	r1, r5
  400c38:	2048      	movs	r0, #72	; 0x48
  400c3a:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NCS1, PIN_EBI_NCS1_FLAGS);
  400c3c:	4629      	mov	r1, r5
  400c3e:	204f      	movs	r0, #79	; 0x4f
  400c40:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_LCD_RS, PIN_EBI_LCD_RS_FLAGS);
  400c42:	4629      	mov	r1, r5
  400c44:	2053      	movs	r0, #83	; 0x53
  400c46:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_AAT3155
	/* Configure Backlight control pin */
	gpio_configure_pin(BOARD_AAT31XX_SET_GPIO, BOARD_AAT31XX_SET_FLAGS);
  400c48:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  400c4c:	204d      	movs	r0, #77	; 0x4d
  400c4e:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_ADS7843
	/* Configure Touchscreen SPI pins */
	gpio_configure_pin(BOARD_ADS7843_IRQ_GPIO,BOARD_ADS7843_IRQ_FLAGS);
  400c50:	f105 5500 	add.w	r5, r5, #536870912	; 0x20000000
  400c54:	4629      	mov	r1, r5
  400c56:	2010      	movs	r0, #16
  400c58:	47a0      	blx	r4
	gpio_configure_pin(BOARD_ADS7843_BUSY_GPIO, BOARD_ADS7843_BUSY_FLAGS);
  400c5a:	4629      	mov	r1, r5
  400c5c:	2011      	movs	r0, #17
  400c5e:	47a0      	blx	r4
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  400c60:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400c64:	200c      	movs	r0, #12
  400c66:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  400c68:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400c6c:	200d      	movs	r0, #13
  400c6e:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  400c70:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400c74:	200e      	movs	r0, #14
  400c76:	47a0      	blx	r4
	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
  400c78:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400c7c:	200b      	movs	r0, #11
  400c7e:	47a0      	blx	r4
  400c80:	bd38      	pop	{r3, r4, r5, pc}
  400c82:	bf00      	nop
  400c84:	400e1450 	.word	0x400e1450
  400c88:	00401201 	.word	0x00401201
  400c8c:	00400e01 	.word	0x00400e01
  400c90:	28000079 	.word	0x28000079
  400c94:	28000059 	.word	0x28000059
  400c98:	400e0e00 	.word	0x400e0e00
  400c9c:	00400f21 	.word	0x00400f21
  400ca0:	00400de5 	.word	0x00400de5
  400ca4:	08000001 	.word	0x08000001

00400ca8 <pio_set_debounce_filter>:
void pio_set_debounce_filter(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_cut_off)
{
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Set Debouncing, 0 bit field no effect */
	p_pio->PIO_IFSCER = ul_mask;
  400ca8:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  400cac:	0053      	lsls	r3, r2, #1
  400cae:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400cb2:	fbb2 f2f3 	udiv	r2, r2, r3
  400cb6:	3a01      	subs	r2, #1
  400cb8:	f3c2 020d 	ubfx	r2, r2, #0, #14
  400cbc:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
  400cc0:	4770      	bx	lr

00400cc2 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400cc2:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400cc4:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400cc8:	d039      	beq.n	400d3e <pio_set_peripheral+0x7c>
  400cca:	d813      	bhi.n	400cf4 <pio_set_peripheral+0x32>
  400ccc:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400cd0:	d025      	beq.n	400d1e <pio_set_peripheral+0x5c>
  400cd2:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400cd6:	d10a      	bne.n	400cee <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400cd8:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400cda:	4313      	orrs	r3, r2
  400cdc:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400cde:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400ce0:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400ce2:	400b      	ands	r3, r1
  400ce4:	ea23 0302 	bic.w	r3, r3, r2
  400ce8:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400cea:	6042      	str	r2, [r0, #4]
  400cec:	4770      	bx	lr
	switch (ul_type) {
  400cee:	2900      	cmp	r1, #0
  400cf0:	d1fb      	bne.n	400cea <pio_set_peripheral+0x28>
  400cf2:	4770      	bx	lr
  400cf4:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400cf8:	d020      	beq.n	400d3c <pio_set_peripheral+0x7a>
  400cfa:	d809      	bhi.n	400d10 <pio_set_peripheral+0x4e>
  400cfc:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400d00:	d1f3      	bne.n	400cea <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d02:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400d04:	4313      	orrs	r3, r2
  400d06:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400d08:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400d0a:	4313      	orrs	r3, r2
  400d0c:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400d0e:	e7ec      	b.n	400cea <pio_set_peripheral+0x28>
	switch (ul_type) {
  400d10:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400d14:	d012      	beq.n	400d3c <pio_set_peripheral+0x7a>
  400d16:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400d1a:	d00f      	beq.n	400d3c <pio_set_peripheral+0x7a>
  400d1c:	e7e5      	b.n	400cea <pio_set_peripheral+0x28>
{
  400d1e:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d20:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400d22:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400d24:	43d3      	mvns	r3, r2
  400d26:	4021      	ands	r1, r4
  400d28:	461c      	mov	r4, r3
  400d2a:	4019      	ands	r1, r3
  400d2c:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400d2e:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400d30:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400d32:	400b      	ands	r3, r1
  400d34:	4023      	ands	r3, r4
  400d36:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400d38:	6042      	str	r2, [r0, #4]
}
  400d3a:	bc10      	pop	{r4}
  400d3c:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d3e:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400d40:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400d42:	400b      	ands	r3, r1
  400d44:	ea23 0302 	bic.w	r3, r3, r2
  400d48:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400d4a:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400d4c:	4313      	orrs	r3, r2
  400d4e:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400d50:	e7cb      	b.n	400cea <pio_set_peripheral+0x28>

00400d52 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400d52:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400d54:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  400d58:	bf14      	ite	ne
  400d5a:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400d5c:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400d5e:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400d62:	bf14      	ite	ne
  400d64:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  400d66:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  400d68:	f012 0f02 	tst.w	r2, #2
  400d6c:	d107      	bne.n	400d7e <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400d6e:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  400d72:	bf18      	it	ne
  400d74:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  400d78:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400d7a:	6001      	str	r1, [r0, #0]
  400d7c:	4770      	bx	lr
		p_pio->PIO_IFSCDR = ul_mask;
  400d7e:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  400d82:	e7f9      	b.n	400d78 <pio_set_input+0x26>

00400d84 <pio_set_output>:
{
  400d84:	b410      	push	{r4}
  400d86:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400d88:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400d8a:	b944      	cbnz	r4, 400d9e <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  400d8c:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400d8e:	b143      	cbz	r3, 400da2 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  400d90:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400d92:	b942      	cbnz	r2, 400da6 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  400d94:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400d96:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400d98:	6001      	str	r1, [r0, #0]
}
  400d9a:	bc10      	pop	{r4}
  400d9c:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400d9e:	6641      	str	r1, [r0, #100]	; 0x64
  400da0:	e7f5      	b.n	400d8e <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400da2:	6541      	str	r1, [r0, #84]	; 0x54
  400da4:	e7f5      	b.n	400d92 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400da6:	6301      	str	r1, [r0, #48]	; 0x30
  400da8:	e7f5      	b.n	400d96 <pio_set_output+0x12>

00400daa <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400daa:	f012 0f10 	tst.w	r2, #16
  400dae:	d010      	beq.n	400dd2 <pio_configure_interrupt+0x28>
		p_pio->PIO_AIMER = ul_mask;
  400db0:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400db4:	f012 0f20 	tst.w	r2, #32
			p_pio->PIO_REHLSR = ul_mask;
  400db8:	bf14      	ite	ne
  400dba:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
			p_pio->PIO_FELLSR = ul_mask;
  400dbe:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		if (ul_attr & PIO_IT_EDGE) {
  400dc2:	f012 0f40 	tst.w	r2, #64	; 0x40
			p_pio->PIO_ESR = ul_mask;
  400dc6:	bf14      	ite	ne
  400dc8:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
			p_pio->PIO_LSR = ul_mask;
  400dcc:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
  400dd0:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400dd2:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400dd6:	4770      	bx	lr

00400dd8 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400dd8:	6401      	str	r1, [r0, #64]	; 0x40
  400dda:	4770      	bx	lr

00400ddc <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400ddc:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400dde:	4770      	bx	lr

00400de0 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400de0:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400de2:	4770      	bx	lr

00400de4 <pio_set_pin_low>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400de4:	0943      	lsrs	r3, r0, #5
  400de6:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400dea:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400dee:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  400df0:	f000 001f 	and.w	r0, r0, #31
  400df4:	2201      	movs	r2, #1
  400df6:	fa02 f000 	lsl.w	r0, r2, r0
  400dfa:	6358      	str	r0, [r3, #52]	; 0x34
  400dfc:	4770      	bx	lr
	...

00400e00 <pio_configure_pin>:
{
  400e00:	b570      	push	{r4, r5, r6, lr}
  400e02:	b082      	sub	sp, #8
  400e04:	460d      	mov	r5, r1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400e06:	0943      	lsrs	r3, r0, #5
  400e08:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400e0c:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400e10:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  400e12:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  400e16:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  400e1a:	d053      	beq.n	400ec4 <pio_configure_pin+0xc4>
  400e1c:	d80a      	bhi.n	400e34 <pio_configure_pin+0x34>
  400e1e:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  400e22:	d02d      	beq.n	400e80 <pio_configure_pin+0x80>
  400e24:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400e28:	d03b      	beq.n	400ea2 <pio_configure_pin+0xa2>
  400e2a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  400e2e:	d015      	beq.n	400e5c <pio_configure_pin+0x5c>
		return 0;
  400e30:	2000      	movs	r0, #0
  400e32:	e023      	b.n	400e7c <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400e34:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400e38:	d055      	beq.n	400ee6 <pio_configure_pin+0xe6>
  400e3a:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400e3e:	d052      	beq.n	400ee6 <pio_configure_pin+0xe6>
  400e40:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400e44:	d1f4      	bne.n	400e30 <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400e46:	f000 011f 	and.w	r1, r0, #31
  400e4a:	2601      	movs	r6, #1
  400e4c:	462a      	mov	r2, r5
  400e4e:	fa06 f101 	lsl.w	r1, r6, r1
  400e52:	4620      	mov	r0, r4
  400e54:	4b2f      	ldr	r3, [pc, #188]	; (400f14 <pio_configure_pin+0x114>)
  400e56:	4798      	blx	r3
	return 1;
  400e58:	4630      	mov	r0, r6
		break;
  400e5a:	e00f      	b.n	400e7c <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  400e5c:	f000 001f 	and.w	r0, r0, #31
  400e60:	2601      	movs	r6, #1
  400e62:	4086      	lsls	r6, r0
  400e64:	4632      	mov	r2, r6
  400e66:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400e6a:	4620      	mov	r0, r4
  400e6c:	4b2a      	ldr	r3, [pc, #168]	; (400f18 <pio_configure_pin+0x118>)
  400e6e:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400e70:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400e74:	bf14      	ite	ne
  400e76:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400e78:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400e7a:	2001      	movs	r0, #1
}
  400e7c:	b002      	add	sp, #8
  400e7e:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  400e80:	f000 001f 	and.w	r0, r0, #31
  400e84:	2601      	movs	r6, #1
  400e86:	4086      	lsls	r6, r0
  400e88:	4632      	mov	r2, r6
  400e8a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400e8e:	4620      	mov	r0, r4
  400e90:	4b21      	ldr	r3, [pc, #132]	; (400f18 <pio_configure_pin+0x118>)
  400e92:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400e94:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400e98:	bf14      	ite	ne
  400e9a:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400e9c:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400e9e:	2001      	movs	r0, #1
  400ea0:	e7ec      	b.n	400e7c <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  400ea2:	f000 001f 	and.w	r0, r0, #31
  400ea6:	2601      	movs	r6, #1
  400ea8:	4086      	lsls	r6, r0
  400eaa:	4632      	mov	r2, r6
  400eac:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400eb0:	4620      	mov	r0, r4
  400eb2:	4b19      	ldr	r3, [pc, #100]	; (400f18 <pio_configure_pin+0x118>)
  400eb4:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400eb6:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400eba:	bf14      	ite	ne
  400ebc:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400ebe:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400ec0:	2001      	movs	r0, #1
  400ec2:	e7db      	b.n	400e7c <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  400ec4:	f000 001f 	and.w	r0, r0, #31
  400ec8:	2601      	movs	r6, #1
  400eca:	4086      	lsls	r6, r0
  400ecc:	4632      	mov	r2, r6
  400ece:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400ed2:	4620      	mov	r0, r4
  400ed4:	4b10      	ldr	r3, [pc, #64]	; (400f18 <pio_configure_pin+0x118>)
  400ed6:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400ed8:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400edc:	bf14      	ite	ne
  400ede:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400ee0:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400ee2:	2001      	movs	r0, #1
  400ee4:	e7ca      	b.n	400e7c <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400ee6:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400eea:	f000 011f 	and.w	r1, r0, #31
  400eee:	2601      	movs	r6, #1
  400ef0:	ea05 0306 	and.w	r3, r5, r6
  400ef4:	9300      	str	r3, [sp, #0]
  400ef6:	f3c5 0380 	ubfx	r3, r5, #2, #1
  400efa:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400efe:	bf14      	ite	ne
  400f00:	2200      	movne	r2, #0
  400f02:	2201      	moveq	r2, #1
  400f04:	fa06 f101 	lsl.w	r1, r6, r1
  400f08:	4620      	mov	r0, r4
  400f0a:	4c04      	ldr	r4, [pc, #16]	; (400f1c <pio_configure_pin+0x11c>)
  400f0c:	47a0      	blx	r4
	return 1;
  400f0e:	4630      	mov	r0, r6
		break;
  400f10:	e7b4      	b.n	400e7c <pio_configure_pin+0x7c>
  400f12:	bf00      	nop
  400f14:	00400d53 	.word	0x00400d53
  400f18:	00400cc3 	.word	0x00400cc3
  400f1c:	00400d85 	.word	0x00400d85

00400f20 <pio_configure_pin_group>:
{
  400f20:	b570      	push	{r4, r5, r6, lr}
  400f22:	b082      	sub	sp, #8
  400f24:	4605      	mov	r5, r0
  400f26:	460e      	mov	r6, r1
  400f28:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
  400f2a:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
  400f2e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  400f32:	d03d      	beq.n	400fb0 <pio_configure_pin_group+0x90>
  400f34:	d80a      	bhi.n	400f4c <pio_configure_pin_group+0x2c>
  400f36:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  400f3a:	d021      	beq.n	400f80 <pio_configure_pin_group+0x60>
  400f3c:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400f40:	d02a      	beq.n	400f98 <pio_configure_pin_group+0x78>
  400f42:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  400f46:	d00e      	beq.n	400f66 <pio_configure_pin_group+0x46>
		return 0;
  400f48:	2000      	movs	r0, #0
  400f4a:	e017      	b.n	400f7c <pio_configure_pin_group+0x5c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400f4c:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400f50:	d03a      	beq.n	400fc8 <pio_configure_pin_group+0xa8>
  400f52:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400f56:	d037      	beq.n	400fc8 <pio_configure_pin_group+0xa8>
  400f58:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400f5c:	d1f4      	bne.n	400f48 <pio_configure_pin_group+0x28>
		pio_set_input(p_pio, ul_mask, ul_flags);
  400f5e:	4b23      	ldr	r3, [pc, #140]	; (400fec <pio_configure_pin_group+0xcc>)
  400f60:	4798      	blx	r3
	return 1;
  400f62:	2001      	movs	r0, #1
		break;
  400f64:	e00a      	b.n	400f7c <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  400f66:	460a      	mov	r2, r1
  400f68:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400f6c:	4b20      	ldr	r3, [pc, #128]	; (400ff0 <pio_configure_pin_group+0xd0>)
  400f6e:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400f70:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400f74:	bf14      	ite	ne
  400f76:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400f78:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400f7a:	2001      	movs	r0, #1
}
  400f7c:	b002      	add	sp, #8
  400f7e:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  400f80:	460a      	mov	r2, r1
  400f82:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400f86:	4b1a      	ldr	r3, [pc, #104]	; (400ff0 <pio_configure_pin_group+0xd0>)
  400f88:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400f8a:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400f8e:	bf14      	ite	ne
  400f90:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400f92:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400f94:	2001      	movs	r0, #1
  400f96:	e7f1      	b.n	400f7c <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  400f98:	460a      	mov	r2, r1
  400f9a:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400f9e:	4b14      	ldr	r3, [pc, #80]	; (400ff0 <pio_configure_pin_group+0xd0>)
  400fa0:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400fa2:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400fa6:	bf14      	ite	ne
  400fa8:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400faa:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400fac:	2001      	movs	r0, #1
  400fae:	e7e5      	b.n	400f7c <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  400fb0:	460a      	mov	r2, r1
  400fb2:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400fb6:	4b0e      	ldr	r3, [pc, #56]	; (400ff0 <pio_configure_pin_group+0xd0>)
  400fb8:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400fba:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400fbe:	bf14      	ite	ne
  400fc0:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400fc2:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400fc4:	2001      	movs	r0, #1
  400fc6:	e7d9      	b.n	400f7c <pio_configure_pin_group+0x5c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400fc8:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
  400fcc:	f004 0301 	and.w	r3, r4, #1
  400fd0:	9300      	str	r3, [sp, #0]
  400fd2:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400fd6:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400fda:	bf14      	ite	ne
  400fdc:	2200      	movne	r2, #0
  400fde:	2201      	moveq	r2, #1
  400fe0:	4631      	mov	r1, r6
  400fe2:	4628      	mov	r0, r5
  400fe4:	4c03      	ldr	r4, [pc, #12]	; (400ff4 <pio_configure_pin_group+0xd4>)
  400fe6:	47a0      	blx	r4
	return 1;
  400fe8:	2001      	movs	r0, #1
		break;
  400fea:	e7c7      	b.n	400f7c <pio_configure_pin_group+0x5c>
  400fec:	00400d53 	.word	0x00400d53
  400ff0:	00400cc3 	.word	0x00400cc3
  400ff4:	00400d85 	.word	0x00400d85

00400ff8 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400ff8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400ffc:	4681      	mov	r9, r0
  400ffe:	460f      	mov	r7, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  401000:	4b12      	ldr	r3, [pc, #72]	; (40104c <pio_handler_process+0x54>)
  401002:	4798      	blx	r3
  401004:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  401006:	4648      	mov	r0, r9
  401008:	4b11      	ldr	r3, [pc, #68]	; (401050 <pio_handler_process+0x58>)
  40100a:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  40100c:	4005      	ands	r5, r0
  40100e:	d013      	beq.n	401038 <pio_handler_process+0x40>
  401010:	4c10      	ldr	r4, [pc, #64]	; (401054 <pio_handler_process+0x5c>)
  401012:	f104 0660 	add.w	r6, r4, #96	; 0x60
  401016:	e003      	b.n	401020 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  401018:	42b4      	cmp	r4, r6
  40101a:	d00d      	beq.n	401038 <pio_handler_process+0x40>
  40101c:	3410      	adds	r4, #16
		while (status != 0) {
  40101e:	b15d      	cbz	r5, 401038 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  401020:	6820      	ldr	r0, [r4, #0]
  401022:	42b8      	cmp	r0, r7
  401024:	d1f8      	bne.n	401018 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  401026:	6861      	ldr	r1, [r4, #4]
  401028:	4229      	tst	r1, r5
  40102a:	d0f5      	beq.n	401018 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  40102c:	68e3      	ldr	r3, [r4, #12]
  40102e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  401030:	6863      	ldr	r3, [r4, #4]
  401032:	ea25 0503 	bic.w	r5, r5, r3
  401036:	e7ef      	b.n	401018 <pio_handler_process+0x20>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  401038:	4b07      	ldr	r3, [pc, #28]	; (401058 <pio_handler_process+0x60>)
  40103a:	681b      	ldr	r3, [r3, #0]
  40103c:	b123      	cbz	r3, 401048 <pio_handler_process+0x50>
		if (pio_capture_handler) {
  40103e:	4b07      	ldr	r3, [pc, #28]	; (40105c <pio_handler_process+0x64>)
  401040:	681b      	ldr	r3, [r3, #0]
  401042:	b10b      	cbz	r3, 401048 <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  401044:	4648      	mov	r0, r9
  401046:	4798      	blx	r3
  401048:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40104c:	00400ddd 	.word	0x00400ddd
  401050:	00400de1 	.word	0x00400de1
  401054:	20000da0 	.word	0x20000da0
  401058:	20000e58 	.word	0x20000e58
  40105c:	20000e14 	.word	0x20000e14

00401060 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  401060:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  401062:	4c18      	ldr	r4, [pc, #96]	; (4010c4 <pio_handler_set+0x64>)
  401064:	6826      	ldr	r6, [r4, #0]
  401066:	2e06      	cmp	r6, #6
  401068:	d829      	bhi.n	4010be <pio_handler_set+0x5e>
  40106a:	f04f 0c00 	mov.w	ip, #0
  40106e:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  401070:	4f15      	ldr	r7, [pc, #84]	; (4010c8 <pio_handler_set+0x68>)
  401072:	e004      	b.n	40107e <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  401074:	3401      	adds	r4, #1
  401076:	b2e4      	uxtb	r4, r4
  401078:	46a4      	mov	ip, r4
  40107a:	42a6      	cmp	r6, r4
  40107c:	d309      	bcc.n	401092 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  40107e:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  401080:	0125      	lsls	r5, r4, #4
  401082:	597d      	ldr	r5, [r7, r5]
  401084:	428d      	cmp	r5, r1
  401086:	d1f5      	bne.n	401074 <pio_handler_set+0x14>
  401088:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  40108c:	686d      	ldr	r5, [r5, #4]
  40108e:	4295      	cmp	r5, r2
  401090:	d1f0      	bne.n	401074 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  401092:	4d0d      	ldr	r5, [pc, #52]	; (4010c8 <pio_handler_set+0x68>)
  401094:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  401098:	eb05 040e 	add.w	r4, r5, lr
  40109c:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  4010a0:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  4010a2:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  4010a4:	9906      	ldr	r1, [sp, #24]
  4010a6:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  4010a8:	3601      	adds	r6, #1
  4010aa:	4566      	cmp	r6, ip
		gs_ul_nb_sources++;
  4010ac:	bf04      	itt	eq
  4010ae:	4905      	ldreq	r1, [pc, #20]	; (4010c4 <pio_handler_set+0x64>)
  4010b0:	600e      	streq	r6, [r1, #0]
  4010b2:	4611      	mov	r1, r2
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  4010b4:	461a      	mov	r2, r3
  4010b6:	4b05      	ldr	r3, [pc, #20]	; (4010cc <pio_handler_set+0x6c>)
  4010b8:	4798      	blx	r3

	return 0;
  4010ba:	2000      	movs	r0, #0
  4010bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
  4010be:	2001      	movs	r0, #1
}
  4010c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4010c2:	bf00      	nop
  4010c4:	20000e10 	.word	0x20000e10
  4010c8:	20000da0 	.word	0x20000da0
  4010cc:	00400dab 	.word	0x00400dab

004010d0 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  4010d0:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  4010d2:	210b      	movs	r1, #11
  4010d4:	4801      	ldr	r0, [pc, #4]	; (4010dc <PIOA_Handler+0xc>)
  4010d6:	4b02      	ldr	r3, [pc, #8]	; (4010e0 <PIOA_Handler+0x10>)
  4010d8:	4798      	blx	r3
  4010da:	bd08      	pop	{r3, pc}
  4010dc:	400e0e00 	.word	0x400e0e00
  4010e0:	00400ff9 	.word	0x00400ff9

004010e4 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  4010e4:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  4010e6:	210c      	movs	r1, #12
  4010e8:	4801      	ldr	r0, [pc, #4]	; (4010f0 <PIOB_Handler+0xc>)
  4010ea:	4b02      	ldr	r3, [pc, #8]	; (4010f4 <PIOB_Handler+0x10>)
  4010ec:	4798      	blx	r3
  4010ee:	bd08      	pop	{r3, pc}
  4010f0:	400e1000 	.word	0x400e1000
  4010f4:	00400ff9 	.word	0x00400ff9

004010f8 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  4010f8:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  4010fa:	210d      	movs	r1, #13
  4010fc:	4801      	ldr	r0, [pc, #4]	; (401104 <PIOC_Handler+0xc>)
  4010fe:	4b02      	ldr	r3, [pc, #8]	; (401108 <PIOC_Handler+0x10>)
  401100:	4798      	blx	r3
  401102:	bd08      	pop	{r3, pc}
  401104:	400e1200 	.word	0x400e1200
  401108:	00400ff9 	.word	0x00400ff9

0040110c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  40110c:	4a17      	ldr	r2, [pc, #92]	; (40116c <pmc_switch_mck_to_pllack+0x60>)
  40110e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401110:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  401114:	4318      	orrs	r0, r3
  401116:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401118:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40111a:	f013 0f08 	tst.w	r3, #8
  40111e:	d10a      	bne.n	401136 <pmc_switch_mck_to_pllack+0x2a>
  401120:	f44f 6300 	mov.w	r3, #2048	; 0x800
  401124:	4911      	ldr	r1, [pc, #68]	; (40116c <pmc_switch_mck_to_pllack+0x60>)
  401126:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  401128:	f012 0f08 	tst.w	r2, #8
  40112c:	d103      	bne.n	401136 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40112e:	3b01      	subs	r3, #1
  401130:	d1f9      	bne.n	401126 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  401132:	2001      	movs	r0, #1
  401134:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  401136:	4a0d      	ldr	r2, [pc, #52]	; (40116c <pmc_switch_mck_to_pllack+0x60>)
  401138:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40113a:	f023 0303 	bic.w	r3, r3, #3
  40113e:	f043 0302 	orr.w	r3, r3, #2
  401142:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401144:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401146:	f013 0f08 	tst.w	r3, #8
  40114a:	d10a      	bne.n	401162 <pmc_switch_mck_to_pllack+0x56>
  40114c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  401150:	4906      	ldr	r1, [pc, #24]	; (40116c <pmc_switch_mck_to_pllack+0x60>)
  401152:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  401154:	f012 0f08 	tst.w	r2, #8
  401158:	d105      	bne.n	401166 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40115a:	3b01      	subs	r3, #1
  40115c:	d1f9      	bne.n	401152 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  40115e:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  401160:	4770      	bx	lr
	return 0;
  401162:	2000      	movs	r0, #0
  401164:	4770      	bx	lr
  401166:	2000      	movs	r0, #0
  401168:	4770      	bx	lr
  40116a:	bf00      	nop
  40116c:	400e0400 	.word	0x400e0400

00401170 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  401170:	b9c8      	cbnz	r0, 4011a6 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401172:	4a11      	ldr	r2, [pc, #68]	; (4011b8 <pmc_switch_mainck_to_xtal+0x48>)
  401174:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  401176:	0209      	lsls	r1, r1, #8
  401178:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  40117a:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  40117e:	f023 0303 	bic.w	r3, r3, #3
  401182:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401186:	f043 0301 	orr.w	r3, r3, #1
  40118a:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40118c:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  40118e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401190:	f013 0f01 	tst.w	r3, #1
  401194:	d0fb      	beq.n	40118e <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  401196:	4a08      	ldr	r2, [pc, #32]	; (4011b8 <pmc_switch_mainck_to_xtal+0x48>)
  401198:	6a13      	ldr	r3, [r2, #32]
  40119a:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  40119e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4011a2:	6213      	str	r3, [r2, #32]
  4011a4:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4011a6:	4904      	ldr	r1, [pc, #16]	; (4011b8 <pmc_switch_mainck_to_xtal+0x48>)
  4011a8:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4011aa:	4a04      	ldr	r2, [pc, #16]	; (4011bc <pmc_switch_mainck_to_xtal+0x4c>)
  4011ac:	401a      	ands	r2, r3
  4011ae:	4b04      	ldr	r3, [pc, #16]	; (4011c0 <pmc_switch_mainck_to_xtal+0x50>)
  4011b0:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4011b2:	620b      	str	r3, [r1, #32]
  4011b4:	4770      	bx	lr
  4011b6:	bf00      	nop
  4011b8:	400e0400 	.word	0x400e0400
  4011bc:	fec8fffc 	.word	0xfec8fffc
  4011c0:	01370002 	.word	0x01370002

004011c4 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4011c4:	4b02      	ldr	r3, [pc, #8]	; (4011d0 <pmc_osc_is_ready_mainck+0xc>)
  4011c6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4011c8:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4011cc:	4770      	bx	lr
  4011ce:	bf00      	nop
  4011d0:	400e0400 	.word	0x400e0400

004011d4 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4011d4:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4011d8:	4b01      	ldr	r3, [pc, #4]	; (4011e0 <pmc_disable_pllack+0xc>)
  4011da:	629a      	str	r2, [r3, #40]	; 0x28
  4011dc:	4770      	bx	lr
  4011de:	bf00      	nop
  4011e0:	400e0400 	.word	0x400e0400

004011e4 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  4011e4:	4b02      	ldr	r3, [pc, #8]	; (4011f0 <pmc_is_locked_pllack+0xc>)
  4011e6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4011e8:	f000 0002 	and.w	r0, r0, #2
  4011ec:	4770      	bx	lr
  4011ee:	bf00      	nop
  4011f0:	400e0400 	.word	0x400e0400

004011f4 <pmc_disable_pllbck>:
/**
 * \brief Disable PLLB clock.
 */
void pmc_disable_pllbck(void)
{
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  4011f4:	2200      	movs	r2, #0
  4011f6:	4b01      	ldr	r3, [pc, #4]	; (4011fc <pmc_disable_pllbck+0x8>)
  4011f8:	62da      	str	r2, [r3, #44]	; 0x2c
  4011fa:	4770      	bx	lr
  4011fc:	400e0400 	.word	0x400e0400

00401200 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  401200:	2822      	cmp	r0, #34	; 0x22
  401202:	d81e      	bhi.n	401242 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  401204:	281f      	cmp	r0, #31
  401206:	d80c      	bhi.n	401222 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  401208:	4b11      	ldr	r3, [pc, #68]	; (401250 <pmc_enable_periph_clk+0x50>)
  40120a:	699a      	ldr	r2, [r3, #24]
  40120c:	2301      	movs	r3, #1
  40120e:	4083      	lsls	r3, r0
  401210:	4393      	bics	r3, r2
  401212:	d018      	beq.n	401246 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  401214:	2301      	movs	r3, #1
  401216:	fa03 f000 	lsl.w	r0, r3, r0
  40121a:	4b0d      	ldr	r3, [pc, #52]	; (401250 <pmc_enable_periph_clk+0x50>)
  40121c:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40121e:	2000      	movs	r0, #0
  401220:	4770      	bx	lr
		ul_id -= 32;
  401222:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  401224:	4b0a      	ldr	r3, [pc, #40]	; (401250 <pmc_enable_periph_clk+0x50>)
  401226:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  40122a:	2301      	movs	r3, #1
  40122c:	4083      	lsls	r3, r0
  40122e:	4393      	bics	r3, r2
  401230:	d00b      	beq.n	40124a <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  401232:	2301      	movs	r3, #1
  401234:	fa03 f000 	lsl.w	r0, r3, r0
  401238:	4b05      	ldr	r3, [pc, #20]	; (401250 <pmc_enable_periph_clk+0x50>)
  40123a:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  40123e:	2000      	movs	r0, #0
  401240:	4770      	bx	lr
		return 1;
  401242:	2001      	movs	r0, #1
  401244:	4770      	bx	lr
	return 0;
  401246:	2000      	movs	r0, #0
  401248:	4770      	bx	lr
  40124a:	2000      	movs	r0, #0
}
  40124c:	4770      	bx	lr
  40124e:	bf00      	nop
  401250:	400e0400 	.word	0x400e0400

00401254 <pmc_set_flash_in_wait_mode>:
 * \param ul_flash_state PMC_WAIT_MODE_FLASH_STANDBY flash in standby mode,
 * PMC_WAIT_MODE_FLASH_DEEP_POWERDOWN flash in deep power down mode.
 */
void pmc_set_flash_in_wait_mode(uint32_t ul_flash_state)
{
	ul_flash_in_wait_mode = ul_flash_state;
  401254:	4b01      	ldr	r3, [pc, #4]	; (40125c <pmc_set_flash_in_wait_mode+0x8>)
  401256:	6018      	str	r0, [r3, #0]
  401258:	4770      	bx	lr
  40125a:	bf00      	nop
  40125c:	2000000c 	.word	0x2000000c

00401260 <pmc_enable_waitmode>:
void pmc_enable_waitmode(void)
{
	uint32_t i;

	/* Flash in wait mode */
	i = PMC->PMC_FSMR;
  401260:	4a11      	ldr	r2, [pc, #68]	; (4012a8 <pmc_enable_waitmode+0x48>)
  401262:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  401264:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
#if !(SAMV71 || SAMV70 || SAME70 || SAMS70)
	i |= ul_flash_in_wait_mode;
  401268:	4910      	ldr	r1, [pc, #64]	; (4012ac <pmc_enable_waitmode+0x4c>)
  40126a:	6809      	ldr	r1, [r1, #0]
  40126c:	430b      	orrs	r3, r1
#else
	i |= PMC_WAIT_MODE_FLASH_IDLE;
#endif
	PMC->PMC_FSMR = i;
  40126e:	6713      	str	r3, [r2, #112]	; 0x70

	/* Set the WAITMODE bit = 1 */
	PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_WAITMODE;
  401270:	6a13      	ldr	r3, [r2, #32]
  401272:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401276:	f043 0304 	orr.w	r3, r3, #4
  40127a:	6213      	str	r3, [r2, #32]

	/* Waiting for Master Clock Ready MCKRDY = 1 */
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40127c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40127e:	f013 0f08 	tst.w	r3, #8
  401282:	d0fb      	beq.n	40127c <pmc_enable_waitmode+0x1c>
  401284:	f44f 73fa 	mov.w	r3, #500	; 0x1f4

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  401288:	bf00      	nop

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
  40128a:	3b01      	subs	r3, #1
  40128c:	d1fc      	bne.n	401288 <pmc_enable_waitmode+0x28>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
  40128e:	4a06      	ldr	r2, [pc, #24]	; (4012a8 <pmc_enable_waitmode+0x48>)
  401290:	6a13      	ldr	r3, [r2, #32]
  401292:	f013 0f08 	tst.w	r3, #8
  401296:	d0fb      	beq.n	401290 <pmc_enable_waitmode+0x30>

#if (!SAMG)
	/* Restore Flash in idle mode */
	i = PMC->PMC_FSMR;
  401298:	4a03      	ldr	r2, [pc, #12]	; (4012a8 <pmc_enable_waitmode+0x48>)
  40129a:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  40129c:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  4012a0:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
	PMC->PMC_FSMR = i;
  4012a4:	6713      	str	r3, [r2, #112]	; 0x70
  4012a6:	4770      	bx	lr
  4012a8:	400e0400 	.word	0x400e0400
  4012ac:	2000000c 	.word	0x2000000c

004012b0 <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
  4012b0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	switch (sleep_mode) {
  4012b4:	1e43      	subs	r3, r0, #1
  4012b6:	2b04      	cmp	r3, #4
  4012b8:	f200 8137 	bhi.w	40152a <pmc_sleep+0x27a>
  4012bc:	e8df f013 	tbh	[pc, r3, lsl #1]
  4012c0:	00050005 	.word	0x00050005
  4012c4:	00130013 	.word	0x00130013
  4012c8:	0126      	.short	0x0126
	case SAM_PM_SMODE_SLEEP_WFI:
	case SAM_PM_SMODE_SLEEP_WFE:
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
  4012ca:	4a99      	ldr	r2, [pc, #612]	; (401530 <pmc_sleep+0x280>)
  4012cc:	6913      	ldr	r3, [r2, #16]
  4012ce:	f023 0304 	bic.w	r3, r3, #4
  4012d2:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
  4012d4:	2201      	movs	r2, #1
  4012d6:	4b97      	ldr	r3, [pc, #604]	; (401534 <pmc_sleep+0x284>)
  4012d8:	701a      	strb	r2, [r3, #0]
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
  4012da:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  4012de:	b662      	cpsie	i
  __ASM volatile ("wfi");
  4012e0:	bf30      	wfi
  4012e2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4012e6:	4604      	mov	r4, r0
#if defined(EFC1)
		uint32_t fmr1;
#endif
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		(sleep_mode == SAM_PM_SMODE_WAIT_FAST) ?
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_STANDBY) :
  4012e8:	2803      	cmp	r0, #3
  4012ea:	bf0c      	ite	eq
  4012ec:	2000      	moveq	r0, #0
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_DEEP_POWERDOWN);
  4012ee:	f44f 1000 	movne.w	r0, #2097152	; 0x200000
  4012f2:	4b91      	ldr	r3, [pc, #580]	; (401538 <pmc_sleep+0x288>)
  4012f4:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  4012f6:	b672      	cpsid	i
  __ASM volatile ("dmb");
  4012f8:	f3bf 8f5f 	dmb	sy
#endif
		cpu_irq_disable();
  4012fc:	2200      	movs	r2, #0
  4012fe:	4b8d      	ldr	r3, [pc, #564]	; (401534 <pmc_sleep+0x284>)
  401300:	701a      	strb	r2, [r3, #0]
		b_is_sleep_clock_used = true;
  401302:	2201      	movs	r2, #1
  401304:	4b8d      	ldr	r3, [pc, #564]	; (40153c <pmc_sleep+0x28c>)
  401306:	701a      	strb	r2, [r3, #0]
	uint32_t mor  = PMC->CKGR_MOR;
  401308:	4b8d      	ldr	r3, [pc, #564]	; (401540 <pmc_sleep+0x290>)
  40130a:	f8d3 8020 	ldr.w	r8, [r3, #32]
	uint32_t mckr = PMC->PMC_MCKR;
  40130e:	6b1d      	ldr	r5, [r3, #48]	; 0x30
	uint32_t fmr  = EFC0->EEFC_FMR;
  401310:	4a8c      	ldr	r2, [pc, #560]	; (401544 <pmc_sleep+0x294>)
  401312:	f8d2 a000 	ldr.w	sl, [r2]
	uint32_t fmr1 = EFC1->EEFC_FMR;
  401316:	f502 7200 	add.w	r2, r2, #512	; 0x200
  40131a:	f8d2 9000 	ldr.w	r9, [r2]
		*p_pll0_setting = PMC->CKGR_PLLAR;
  40131e:	6a9f      	ldr	r7, [r3, #40]	; 0x28
		*p_pll1_setting = PMC->CKGR_PLLBR;
  401320:	f8d3 b02c 	ldr.w	fp, [r3, #44]	; 0x2c
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
  401324:	f448 125c 	orr.w	r2, r8, #3604480	; 0x370000
  401328:	f042 0208 	orr.w	r2, r2, #8
  40132c:	621a      	str	r2, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
  40132e:	f005 0603 	and.w	r6, r5, #3
  401332:	2e01      	cmp	r6, #1
  401334:	f240 809e 	bls.w	401474 <pmc_sleep+0x1c4>
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
  401338:	f025 0103 	bic.w	r1, r5, #3
  40133c:	f041 0101 	orr.w	r1, r1, #1
		PMC->PMC_MCKR = mckr;
  401340:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401342:	461a      	mov	r2, r3
  401344:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401346:	f013 0f08 	tst.w	r3, #8
  40134a:	d0fb      	beq.n	401344 <pmc_sleep+0x94>
	if (mckr & PMC_MCKR_PRES_Msk) {
  40134c:	f011 0f70 	tst.w	r1, #112	; 0x70
  401350:	d008      	beq.n	401364 <pmc_sleep+0xb4>
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
  401352:	f021 0170 	bic.w	r1, r1, #112	; 0x70
		PMC->PMC_MCKR = mckr;
  401356:	4b7a      	ldr	r3, [pc, #488]	; (401540 <pmc_sleep+0x290>)
  401358:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40135a:	461a      	mov	r2, r3
  40135c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40135e:	f013 0f08 	tst.w	r3, #8
  401362:	d0fb      	beq.n	40135c <pmc_sleep+0xac>
	pmc_disable_pllack();
  401364:	4b78      	ldr	r3, [pc, #480]	; (401548 <pmc_sleep+0x298>)
  401366:	4798      	blx	r3
	pmc_disable_pllbck();
  401368:	4b78      	ldr	r3, [pc, #480]	; (40154c <pmc_sleep+0x29c>)
  40136a:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  40136c:	4a74      	ldr	r2, [pc, #464]	; (401540 <pmc_sleep+0x290>)
  40136e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401370:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  401374:	d0fb      	beq.n	40136e <pmc_sleep+0xbe>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  401376:	4a72      	ldr	r2, [pc, #456]	; (401540 <pmc_sleep+0x290>)
  401378:	6a13      	ldr	r3, [r2, #32]
  40137a:	f023 739b 	bic.w	r3, r3, #20316160	; 0x1360000
  40137e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
  401382:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401386:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  401388:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40138a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  40138e:	d0fb      	beq.n	401388 <pmc_sleep+0xd8>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
  401390:	f42a 6370 	bic.w	r3, sl, #3840	; 0xf00
  401394:	4a6b      	ldr	r2, [pc, #428]	; (401544 <pmc_sleep+0x294>)
  401396:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = fmr1 & (~EEFC_FMR_FWS_Msk);
  401398:	f429 6370 	bic.w	r3, r9, #3840	; 0xf00
  40139c:	f502 7200 	add.w	r2, r2, #512	; 0x200
  4013a0:	6013      	str	r3, [r2, #0]
	if (disable_xtal) {
  4013a2:	2c04      	cmp	r4, #4
  4013a4:	d068      	beq.n	401478 <pmc_sleep+0x1c8>
				&fmr1,
#endif
				(sleep_mode == SAM_PM_SMODE_WAIT));

		/* Enter wait mode */
		cpu_irq_enable();
  4013a6:	4c63      	ldr	r4, [pc, #396]	; (401534 <pmc_sleep+0x284>)
  4013a8:	2301      	movs	r3, #1
  4013aa:	7023      	strb	r3, [r4, #0]
  4013ac:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4013b0:	b662      	cpsie	i

		pmc_enable_waitmode();
  4013b2:	4b67      	ldr	r3, [pc, #412]	; (401550 <pmc_sleep+0x2a0>)
  4013b4:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
  4013b6:	b672      	cpsid	i
  4013b8:	f3bf 8f5f 	dmb	sy

		cpu_irq_disable();
  4013bc:	2300      	movs	r3, #0
  4013be:	7023      	strb	r3, [r4, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
  4013c0:	f018 0f02 	tst.w	r8, #2
  4013c4:	d063      	beq.n	40148e <pmc_sleep+0x1de>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4013c6:	4a5e      	ldr	r2, [pc, #376]	; (401540 <pmc_sleep+0x290>)
  4013c8:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4013ca:	4962      	ldr	r1, [pc, #392]	; (401554 <pmc_sleep+0x2a4>)
  4013cc:	4019      	ands	r1, r3
  4013ce:	4b62      	ldr	r3, [pc, #392]	; (401558 <pmc_sleep+0x2a8>)
  4013d0:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4013d2:	6213      	str	r3, [r2, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4013d4:	6a13      	ldr	r3, [r2, #32]
				| CKGR_MOR_KEY_PASSWD;
  4013d6:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  4013da:	f023 0378 	bic.w	r3, r3, #120	; 0x78
  4013de:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4013e2:	6213      	str	r3, [r2, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
  4013e4:	4b5d      	ldr	r3, [pc, #372]	; (40155c <pmc_sleep+0x2ac>)
  4013e6:	403b      	ands	r3, r7
  4013e8:	2b00      	cmp	r3, #0
  4013ea:	f000 8081 	beq.w	4014f0 <pmc_sleep+0x240>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
  4013ee:	f047 5700 	orr.w	r7, r7, #536870912	; 0x20000000
  4013f2:	4b53      	ldr	r3, [pc, #332]	; (401540 <pmc_sleep+0x290>)
  4013f4:	629f      	str	r7, [r3, #40]	; 0x28
		pll_sr |= PMC_SR_LOCKA;
  4013f6:	2202      	movs	r2, #2
	if (pll1_setting & CKGR_PLLBR_MULB_Msk) {
  4013f8:	4b58      	ldr	r3, [pc, #352]	; (40155c <pmc_sleep+0x2ac>)
  4013fa:	ea0b 0303 	and.w	r3, fp, r3
  4013fe:	b123      	cbz	r3, 40140a <pmc_sleep+0x15a>
		PMC->CKGR_PLLBR = pll1_setting;
  401400:	4b4f      	ldr	r3, [pc, #316]	; (401540 <pmc_sleep+0x290>)
  401402:	f8c3 b02c 	str.w	fp, [r3, #44]	; 0x2c
		pll_sr |= PMC_SR_LOCKB;
  401406:	f042 0204 	orr.w	r2, r2, #4
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
  40140a:	2e02      	cmp	r6, #2
  40140c:	d072      	beq.n	4014f4 <pmc_sleep+0x244>
  40140e:	2e03      	cmp	r6, #3
  401410:	d076      	beq.n	401500 <pmc_sleep+0x250>
	mckr = PMC->PMC_MCKR;
  401412:	494b      	ldr	r1, [pc, #300]	; (401540 <pmc_sleep+0x290>)
  401414:	6b0b      	ldr	r3, [r1, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  401416:	f023 0370 	bic.w	r3, r3, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
  40141a:	f005 0070 	and.w	r0, r5, #112	; 0x70
  40141e:	4303      	orrs	r3, r0
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  401420:	630b      	str	r3, [r1, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401422:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  401424:	f013 0f08 	tst.w	r3, #8
  401428:	d0fb      	beq.n	401422 <pmc_sleep+0x172>
	EFC0->EEFC_FMR = fmr_setting;
  40142a:	4b46      	ldr	r3, [pc, #280]	; (401544 <pmc_sleep+0x294>)
  40142c:	f8c3 a000 	str.w	sl, [r3]
	EFC1->EEFC_FMR = fmr_setting1;
  401430:	f503 7300 	add.w	r3, r3, #512	; 0x200
  401434:	f8c3 9000 	str.w	r9, [r3]
	PMC->PMC_MCKR = mck_setting;
  401438:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
  40143c:	631d      	str	r5, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40143e:	4619      	mov	r1, r3
  401440:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  401442:	f013 0f08 	tst.w	r3, #8
  401446:	d0fb      	beq.n	401440 <pmc_sleep+0x190>
	while (!(PMC->PMC_SR & pll_sr));
  401448:	493d      	ldr	r1, [pc, #244]	; (401540 <pmc_sleep+0x290>)
  40144a:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  40144c:	4213      	tst	r3, r2
  40144e:	d0fc      	beq.n	40144a <pmc_sleep+0x19a>

#if (SAM4C || SAM4CM || SAM4CP)
		/* Restore the sub-system 1 */
		PMC->PMC_SCER = cpclk_backup | PMC_SCER_CPKEY_PASSWD;
#endif
		b_is_sleep_clock_used = false;
  401450:	2200      	movs	r2, #0
  401452:	4b3a      	ldr	r3, [pc, #232]	; (40153c <pmc_sleep+0x28c>)
  401454:	701a      	strb	r2, [r3, #0]
		if (callback_clocks_restored) {
  401456:	4b42      	ldr	r3, [pc, #264]	; (401560 <pmc_sleep+0x2b0>)
  401458:	681b      	ldr	r3, [r3, #0]
  40145a:	b11b      	cbz	r3, 401464 <pmc_sleep+0x1b4>
			callback_clocks_restored();
  40145c:	4798      	blx	r3
			callback_clocks_restored = NULL;
  40145e:	2200      	movs	r2, #0
  401460:	4b3f      	ldr	r3, [pc, #252]	; (401560 <pmc_sleep+0x2b0>)
  401462:	601a      	str	r2, [r3, #0]
		}
		cpu_irq_enable();
  401464:	2201      	movs	r2, #1
  401466:	4b33      	ldr	r3, [pc, #204]	; (401534 <pmc_sleep+0x284>)
  401468:	701a      	strb	r2, [r3, #0]
  40146a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40146e:	b662      	cpsie	i
  401470:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	uint32_t mckr = PMC->PMC_MCKR;
  401474:	4629      	mov	r1, r5
  401476:	e769      	b.n	40134c <pmc_sleep+0x9c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401478:	f5a2 6200 	sub.w	r2, r2, #2048	; 0x800
  40147c:	6a13      	ldr	r3, [r2, #32]
  40147e:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  401482:	f023 0301 	bic.w	r3, r3, #1
  401486:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  40148a:	6213      	str	r3, [r2, #32]
  40148c:	e78b      	b.n	4013a6 <pmc_sleep+0xf6>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
  40148e:	f018 0f01 	tst.w	r8, #1
  401492:	d0a7      	beq.n	4013e4 <pmc_sleep+0x134>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
  401494:	4b2a      	ldr	r3, [pc, #168]	; (401540 <pmc_sleep+0x290>)
  401496:	6a1b      	ldr	r3, [r3, #32]
  401498:	f013 0f01 	tst.w	r3, #1
  40149c:	d10e      	bne.n	4014bc <pmc_sleep+0x20c>
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40149e:	4a28      	ldr	r2, [pc, #160]	; (401540 <pmc_sleep+0x290>)
  4014a0:	6a13      	ldr	r3, [r2, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
  4014a2:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  4014a6:	f023 0303 	bic.w	r3, r3, #3
  4014aa:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4014ae:	f043 0301 	orr.w	r3, r3, #1
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4014b2:	6213      	str	r3, [r2, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4014b4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4014b6:	f013 0f01 	tst.w	r3, #1
  4014ba:	d0fb      	beq.n	4014b4 <pmc_sleep+0x204>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  4014bc:	4b20      	ldr	r3, [pc, #128]	; (401540 <pmc_sleep+0x290>)
  4014be:	6a1b      	ldr	r3, [r3, #32]
  4014c0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4014c4:	d10a      	bne.n	4014dc <pmc_sleep+0x22c>
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4014c6:	4a1e      	ldr	r2, [pc, #120]	; (401540 <pmc_sleep+0x290>)
  4014c8:	6a13      	ldr	r3, [r2, #32]
  4014ca:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4014ce:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4014d2:	6213      	str	r3, [r2, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  4014d4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4014d6:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  4014da:	d0fb      	beq.n	4014d4 <pmc_sleep+0x224>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4014dc:	4a18      	ldr	r2, [pc, #96]	; (401540 <pmc_sleep+0x290>)
  4014de:	6a13      	ldr	r3, [r2, #32]
					| CKGR_MOR_KEY_PASSWD;
  4014e0:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  4014e4:	f023 0378 	bic.w	r3, r3, #120	; 0x78
  4014e8:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4014ec:	6213      	str	r3, [r2, #32]
  4014ee:	e779      	b.n	4013e4 <pmc_sleep+0x134>
	uint32_t pll_sr = 0;
  4014f0:	2200      	movs	r2, #0
  4014f2:	e781      	b.n	4013f8 <pmc_sleep+0x148>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
  4014f4:	4912      	ldr	r1, [pc, #72]	; (401540 <pmc_sleep+0x290>)
  4014f6:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  4014f8:	f013 0f02 	tst.w	r3, #2
  4014fc:	d0fb      	beq.n	4014f6 <pmc_sleep+0x246>
  4014fe:	e788      	b.n	401412 <pmc_sleep+0x162>
		while (!(PMC->PMC_SR & PMC_SR_LOCKB));
  401500:	490f      	ldr	r1, [pc, #60]	; (401540 <pmc_sleep+0x290>)
  401502:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  401504:	f013 0f04 	tst.w	r3, #4
  401508:	d0fb      	beq.n	401502 <pmc_sleep+0x252>
  40150a:	e782      	b.n	401412 <pmc_sleep+0x162>

		break;
	}
#if (!(SAMG51 || SAMG53 || SAMG54))
	case SAM_PM_SMODE_BACKUP:
		SCB->SCR |= SCR_SLEEPDEEP;
  40150c:	4a08      	ldr	r2, [pc, #32]	; (401530 <pmc_sleep+0x280>)
  40150e:	6913      	ldr	r3, [r2, #16]
  401510:	f043 0304 	orr.w	r3, r3, #4
  401514:	6113      	str	r3, [r2, #16]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_VROFF_STOP_VREG;
  401516:	4a13      	ldr	r2, [pc, #76]	; (401564 <pmc_sleep+0x2b4>)
  401518:	4b13      	ldr	r3, [pc, #76]	; (401568 <pmc_sleep+0x2b8>)
  40151a:	601a      	str	r2, [r3, #0]
		cpu_irq_enable();
  40151c:	2201      	movs	r2, #1
  40151e:	4b05      	ldr	r3, [pc, #20]	; (401534 <pmc_sleep+0x284>)
  401520:	701a      	strb	r2, [r3, #0]
  401522:	f3bf 8f5f 	dmb	sy
  401526:	b662      	cpsie	i
  __ASM volatile ("wfi");
  401528:	bf30      	wfi
  40152a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40152e:	bf00      	nop
  401530:	e000ed00 	.word	0xe000ed00
  401534:	20000008 	.word	0x20000008
  401538:	00401255 	.word	0x00401255
  40153c:	20000e18 	.word	0x20000e18
  401540:	400e0400 	.word	0x400e0400
  401544:	400e0a00 	.word	0x400e0a00
  401548:	004011d5 	.word	0x004011d5
  40154c:	004011f5 	.word	0x004011f5
  401550:	00401261 	.word	0x00401261
  401554:	fec8fffc 	.word	0xfec8fffc
  401558:	01370002 	.word	0x01370002
  40155c:	07ff0000 	.word	0x07ff0000
  401560:	20000e1c 	.word	0x20000e1c
  401564:	a5000004 	.word	0xa5000004
  401568:	400e1410 	.word	0x400e1410

0040156c <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  40156c:	e7fe      	b.n	40156c <Dummy_Handler>
	...

00401570 <Reset_Handler>:
{
  401570:	b508      	push	{r3, lr}
	if (pSrc > pDest) {
  401572:	4b21      	ldr	r3, [pc, #132]	; (4015f8 <Reset_Handler+0x88>)
  401574:	4a21      	ldr	r2, [pc, #132]	; (4015fc <Reset_Handler+0x8c>)
  401576:	429a      	cmp	r2, r3
  401578:	d928      	bls.n	4015cc <Reset_Handler+0x5c>
		for (; pDest < &_erelocate;) {
  40157a:	4b21      	ldr	r3, [pc, #132]	; (401600 <Reset_Handler+0x90>)
  40157c:	4a1e      	ldr	r2, [pc, #120]	; (4015f8 <Reset_Handler+0x88>)
  40157e:	429a      	cmp	r2, r3
  401580:	d20c      	bcs.n	40159c <Reset_Handler+0x2c>
  401582:	3b01      	subs	r3, #1
  401584:	1a9b      	subs	r3, r3, r2
  401586:	f023 0303 	bic.w	r3, r3, #3
  40158a:	3304      	adds	r3, #4
  40158c:	4413      	add	r3, r2
  40158e:	491b      	ldr	r1, [pc, #108]	; (4015fc <Reset_Handler+0x8c>)
			*pDest++ = *pSrc++;
  401590:	f851 0b04 	ldr.w	r0, [r1], #4
  401594:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  401598:	429a      	cmp	r2, r3
  40159a:	d1f9      	bne.n	401590 <Reset_Handler+0x20>
  __ASM volatile ("nop");
  40159c:	bf00      	nop
	for (pDest = &_szero; pDest < &_ezero;) {
  40159e:	4b19      	ldr	r3, [pc, #100]	; (401604 <Reset_Handler+0x94>)
  4015a0:	4a19      	ldr	r2, [pc, #100]	; (401608 <Reset_Handler+0x98>)
  4015a2:	429a      	cmp	r2, r3
  4015a4:	d20a      	bcs.n	4015bc <Reset_Handler+0x4c>
  4015a6:	3b01      	subs	r3, #1
  4015a8:	1a9b      	subs	r3, r3, r2
  4015aa:	f023 0303 	bic.w	r3, r3, #3
  4015ae:	3304      	adds	r3, #4
  4015b0:	4413      	add	r3, r2
		*pDest++ = 0;
  4015b2:	2100      	movs	r1, #0
  4015b4:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  4015b8:	429a      	cmp	r2, r3
  4015ba:	d1fb      	bne.n	4015b4 <Reset_Handler+0x44>
	SCB->VTOR = ((uint32_t) pSrc);
  4015bc:	4b13      	ldr	r3, [pc, #76]	; (40160c <Reset_Handler+0x9c>)
  4015be:	4a14      	ldr	r2, [pc, #80]	; (401610 <Reset_Handler+0xa0>)
  4015c0:	609a      	str	r2, [r3, #8]
	__libc_init_array();
  4015c2:	4b14      	ldr	r3, [pc, #80]	; (401614 <Reset_Handler+0xa4>)
  4015c4:	4798      	blx	r3
	main();
  4015c6:	4b14      	ldr	r3, [pc, #80]	; (401618 <Reset_Handler+0xa8>)
  4015c8:	4798      	blx	r3
  4015ca:	e7fe      	b.n	4015ca <Reset_Handler+0x5a>
	} else if (pSrc < pDest) {
  4015cc:	4b0a      	ldr	r3, [pc, #40]	; (4015f8 <Reset_Handler+0x88>)
  4015ce:	4a0b      	ldr	r2, [pc, #44]	; (4015fc <Reset_Handler+0x8c>)
  4015d0:	429a      	cmp	r2, r3
  4015d2:	d2e3      	bcs.n	40159c <Reset_Handler+0x2c>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  4015d4:	4b0a      	ldr	r3, [pc, #40]	; (401600 <Reset_Handler+0x90>)
  4015d6:	4808      	ldr	r0, [pc, #32]	; (4015f8 <Reset_Handler+0x88>)
  4015d8:	1a18      	subs	r0, r3, r0
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  4015da:	4611      	mov	r1, r2
  4015dc:	3a04      	subs	r2, #4
  4015de:	4402      	add	r2, r0
		for (;nb_bytes;nb_bytes -= 4) {
  4015e0:	2800      	cmp	r0, #0
  4015e2:	d0db      	beq.n	40159c <Reset_Handler+0x2c>
  4015e4:	f1c1 0104 	rsb	r1, r1, #4
			*pDest-- = *pSrc--;
  4015e8:	f852 0904 	ldr.w	r0, [r2], #-4
  4015ec:	f843 0d04 	str.w	r0, [r3, #-4]!
		for (;nb_bytes;nb_bytes -= 4) {
  4015f0:	42ca      	cmn	r2, r1
  4015f2:	d1f9      	bne.n	4015e8 <Reset_Handler+0x78>
  4015f4:	e7d2      	b.n	40159c <Reset_Handler+0x2c>
  4015f6:	bf00      	nop
  4015f8:	20000000 	.word	0x20000000
  4015fc:	00406ec4 	.word	0x00406ec4
  401600:	200009c0 	.word	0x200009c0
  401604:	20000e94 	.word	0x20000e94
  401608:	200009c0 	.word	0x200009c0
  40160c:	e000ed00 	.word	0xe000ed00
  401610:	00400000 	.word	0x00400000
  401614:	00401b6d 	.word	0x00401b6d
  401618:	00401a8d 	.word	0x00401a8d

0040161c <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  40161c:	4b3c      	ldr	r3, [pc, #240]	; (401710 <SystemCoreClockUpdate+0xf4>)
  40161e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401620:	f003 0303 	and.w	r3, r3, #3
  401624:	2b03      	cmp	r3, #3
  401626:	d80e      	bhi.n	401646 <SystemCoreClockUpdate+0x2a>
  401628:	e8df f003 	tbb	[pc, r3]
  40162c:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  401630:	4b38      	ldr	r3, [pc, #224]	; (401714 <SystemCoreClockUpdate+0xf8>)
  401632:	695b      	ldr	r3, [r3, #20]
  401634:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  401638:	bf14      	ite	ne
  40163a:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  40163e:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  401642:	4b35      	ldr	r3, [pc, #212]	; (401718 <SystemCoreClockUpdate+0xfc>)
  401644:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  401646:	4b32      	ldr	r3, [pc, #200]	; (401710 <SystemCoreClockUpdate+0xf4>)
  401648:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40164a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40164e:	2b70      	cmp	r3, #112	; 0x70
  401650:	d055      	beq.n	4016fe <SystemCoreClockUpdate+0xe2>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401652:	4b2f      	ldr	r3, [pc, #188]	; (401710 <SystemCoreClockUpdate+0xf4>)
  401654:	6b1a      	ldr	r2, [r3, #48]	; 0x30
		SystemCoreClock >>=
  401656:	4930      	ldr	r1, [pc, #192]	; (401718 <SystemCoreClockUpdate+0xfc>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401658:	f3c2 1202 	ubfx	r2, r2, #4, #3
		SystemCoreClock >>=
  40165c:	680b      	ldr	r3, [r1, #0]
  40165e:	40d3      	lsrs	r3, r2
  401660:	600b      	str	r3, [r1, #0]
  401662:	4770      	bx	lr
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  401664:	4b2a      	ldr	r3, [pc, #168]	; (401710 <SystemCoreClockUpdate+0xf4>)
  401666:	6a1b      	ldr	r3, [r3, #32]
  401668:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40166c:	d003      	beq.n	401676 <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL;
  40166e:	4a2b      	ldr	r2, [pc, #172]	; (40171c <SystemCoreClockUpdate+0x100>)
  401670:	4b29      	ldr	r3, [pc, #164]	; (401718 <SystemCoreClockUpdate+0xfc>)
  401672:	601a      	str	r2, [r3, #0]
  401674:	e7e7      	b.n	401646 <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401676:	4a2a      	ldr	r2, [pc, #168]	; (401720 <SystemCoreClockUpdate+0x104>)
  401678:	4b27      	ldr	r3, [pc, #156]	; (401718 <SystemCoreClockUpdate+0xfc>)
  40167a:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  40167c:	4b24      	ldr	r3, [pc, #144]	; (401710 <SystemCoreClockUpdate+0xf4>)
  40167e:	6a1b      	ldr	r3, [r3, #32]
  401680:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401684:	2b10      	cmp	r3, #16
  401686:	d005      	beq.n	401694 <SystemCoreClockUpdate+0x78>
  401688:	2b20      	cmp	r3, #32
  40168a:	d1dc      	bne.n	401646 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  40168c:	4a23      	ldr	r2, [pc, #140]	; (40171c <SystemCoreClockUpdate+0x100>)
  40168e:	4b22      	ldr	r3, [pc, #136]	; (401718 <SystemCoreClockUpdate+0xfc>)
  401690:	601a      	str	r2, [r3, #0]
			break;
  401692:	e7d8      	b.n	401646 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  401694:	4a23      	ldr	r2, [pc, #140]	; (401724 <SystemCoreClockUpdate+0x108>)
  401696:	4b20      	ldr	r3, [pc, #128]	; (401718 <SystemCoreClockUpdate+0xfc>)
  401698:	601a      	str	r2, [r3, #0]
			break;
  40169a:	e7d4      	b.n	401646 <SystemCoreClockUpdate+0x2a>
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  40169c:	4b1c      	ldr	r3, [pc, #112]	; (401710 <SystemCoreClockUpdate+0xf4>)
  40169e:	6a1b      	ldr	r3, [r3, #32]
  4016a0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4016a4:	d018      	beq.n	4016d8 <SystemCoreClockUpdate+0xbc>
				SystemCoreClock = CHIP_FREQ_XTAL;
  4016a6:	4a1d      	ldr	r2, [pc, #116]	; (40171c <SystemCoreClockUpdate+0x100>)
  4016a8:	4b1b      	ldr	r3, [pc, #108]	; (401718 <SystemCoreClockUpdate+0xfc>)
  4016aa:	601a      	str	r2, [r3, #0]
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  4016ac:	4b18      	ldr	r3, [pc, #96]	; (401710 <SystemCoreClockUpdate+0xf4>)
  4016ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4016b0:	f003 0303 	and.w	r3, r3, #3
  4016b4:	2b02      	cmp	r3, #2
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  4016b6:	4a16      	ldr	r2, [pc, #88]	; (401710 <SystemCoreClockUpdate+0xf4>)
  4016b8:	bf07      	ittee	eq
  4016ba:	6a91      	ldreq	r1, [r2, #40]	; 0x28
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  4016bc:	6a92      	ldreq	r2, [r2, #40]	; 0x28
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4016be:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4016c0:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  4016c2:	4815      	ldr	r0, [pc, #84]	; (401718 <SystemCoreClockUpdate+0xfc>)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  4016c4:	f3c1 410a 	ubfx	r1, r1, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4016c8:	6803      	ldr	r3, [r0, #0]
  4016ca:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_DIVB_Pos));
  4016ce:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4016d0:	fbb3 f3f2 	udiv	r3, r3, r2
  4016d4:	6003      	str	r3, [r0, #0]
  4016d6:	e7b6      	b.n	401646 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4016d8:	4a11      	ldr	r2, [pc, #68]	; (401720 <SystemCoreClockUpdate+0x104>)
  4016da:	4b0f      	ldr	r3, [pc, #60]	; (401718 <SystemCoreClockUpdate+0xfc>)
  4016dc:	601a      	str	r2, [r3, #0]
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  4016de:	4b0c      	ldr	r3, [pc, #48]	; (401710 <SystemCoreClockUpdate+0xf4>)
  4016e0:	6a1b      	ldr	r3, [r3, #32]
  4016e2:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4016e6:	2b10      	cmp	r3, #16
  4016e8:	d005      	beq.n	4016f6 <SystemCoreClockUpdate+0xda>
  4016ea:	2b20      	cmp	r3, #32
  4016ec:	d1de      	bne.n	4016ac <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  4016ee:	4a0b      	ldr	r2, [pc, #44]	; (40171c <SystemCoreClockUpdate+0x100>)
  4016f0:	4b09      	ldr	r3, [pc, #36]	; (401718 <SystemCoreClockUpdate+0xfc>)
  4016f2:	601a      	str	r2, [r3, #0]
					break;
  4016f4:	e7da      	b.n	4016ac <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  4016f6:	4a0b      	ldr	r2, [pc, #44]	; (401724 <SystemCoreClockUpdate+0x108>)
  4016f8:	4b07      	ldr	r3, [pc, #28]	; (401718 <SystemCoreClockUpdate+0xfc>)
  4016fa:	601a      	str	r2, [r3, #0]
					break;
  4016fc:	e7d6      	b.n	4016ac <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  4016fe:	4a06      	ldr	r2, [pc, #24]	; (401718 <SystemCoreClockUpdate+0xfc>)
  401700:	6813      	ldr	r3, [r2, #0]
  401702:	4909      	ldr	r1, [pc, #36]	; (401728 <SystemCoreClockUpdate+0x10c>)
  401704:	fba1 1303 	umull	r1, r3, r1, r3
  401708:	085b      	lsrs	r3, r3, #1
  40170a:	6013      	str	r3, [r2, #0]
  40170c:	4770      	bx	lr
  40170e:	bf00      	nop
  401710:	400e0400 	.word	0x400e0400
  401714:	400e1410 	.word	0x400e1410
  401718:	20000010 	.word	0x20000010
  40171c:	00b71b00 	.word	0x00b71b00
  401720:	003d0900 	.word	0x003d0900
  401724:	007a1200 	.word	0x007a1200
  401728:	aaaaaaab 	.word	0xaaaaaaab

0040172c <system_init_flash>:
				}
			}
		}
	}
#else
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  40172c:	4b1a      	ldr	r3, [pc, #104]	; (401798 <system_init_flash+0x6c>)
  40172e:	4298      	cmp	r0, r3
  401730:	d914      	bls.n	40175c <system_init_flash+0x30>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  401732:	4b1a      	ldr	r3, [pc, #104]	; (40179c <system_init_flash+0x70>)
  401734:	4298      	cmp	r0, r3
  401736:	d919      	bls.n	40176c <system_init_flash+0x40>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  401738:	4b19      	ldr	r3, [pc, #100]	; (4017a0 <system_init_flash+0x74>)
  40173a:	4298      	cmp	r0, r3
  40173c:	d91d      	bls.n	40177a <system_init_flash+0x4e>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  40173e:	4b19      	ldr	r3, [pc, #100]	; (4017a4 <system_init_flash+0x78>)
  401740:	4298      	cmp	r0, r3
  401742:	d921      	bls.n	401788 <system_init_flash+0x5c>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  401744:	4b18      	ldr	r3, [pc, #96]	; (4017a8 <system_init_flash+0x7c>)
  401746:	4298      	cmp	r0, r3
						EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  401748:	bf94      	ite	ls
  40174a:	f04f 2304 	movls.w	r3, #67109888	; 0x4000400
						EFC1->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
					} else {
						EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  40174e:	4b17      	ldrhi	r3, [pc, #92]	; (4017ac <system_init_flash+0x80>)
  401750:	4a17      	ldr	r2, [pc, #92]	; (4017b0 <system_init_flash+0x84>)
  401752:	6013      	str	r3, [r2, #0]
						EFC1->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  401754:	f502 7200 	add.w	r2, r2, #512	; 0x200
  401758:	6013      	str	r3, [r2, #0]
  40175a:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40175c:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  401760:	4a13      	ldr	r2, [pc, #76]	; (4017b0 <system_init_flash+0x84>)
  401762:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  401764:	f502 7200 	add.w	r2, r2, #512	; 0x200
  401768:	6013      	str	r3, [r2, #0]
  40176a:	4770      	bx	lr
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  40176c:	4b11      	ldr	r3, [pc, #68]	; (4017b4 <system_init_flash+0x88>)
  40176e:	4a10      	ldr	r2, [pc, #64]	; (4017b0 <system_init_flash+0x84>)
  401770:	6013      	str	r3, [r2, #0]
			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401772:	f502 7200 	add.w	r2, r2, #512	; 0x200
  401776:	6013      	str	r3, [r2, #0]
  401778:	4770      	bx	lr
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  40177a:	4b0f      	ldr	r3, [pc, #60]	; (4017b8 <system_init_flash+0x8c>)
  40177c:	4a0c      	ldr	r2, [pc, #48]	; (4017b0 <system_init_flash+0x84>)
  40177e:	6013      	str	r3, [r2, #0]
				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  401780:	f502 7200 	add.w	r2, r2, #512	; 0x200
  401784:	6013      	str	r3, [r2, #0]
  401786:	4770      	bx	lr
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401788:	4b0c      	ldr	r3, [pc, #48]	; (4017bc <system_init_flash+0x90>)
  40178a:	4a09      	ldr	r2, [pc, #36]	; (4017b0 <system_init_flash+0x84>)
  40178c:	6013      	str	r3, [r2, #0]
					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  40178e:	f502 7200 	add.w	r2, r2, #512	; 0x200
  401792:	6013      	str	r3, [r2, #0]
  401794:	4770      	bx	lr
  401796:	bf00      	nop
  401798:	01312cff 	.word	0x01312cff
  40179c:	026259ff 	.word	0x026259ff
  4017a0:	039386ff 	.word	0x039386ff
  4017a4:	04c4b3ff 	.word	0x04c4b3ff
  4017a8:	05f5e0ff 	.word	0x05f5e0ff
  4017ac:	04000500 	.word	0x04000500
  4017b0:	400e0a00 	.word	0x400e0a00
  4017b4:	04000100 	.word	0x04000100
  4017b8:	04000200 	.word	0x04000200
  4017bc:	04000300 	.word	0x04000300

004017c0 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4017c0:	4b0a      	ldr	r3, [pc, #40]	; (4017ec <_sbrk+0x2c>)
  4017c2:	681b      	ldr	r3, [r3, #0]
  4017c4:	b153      	cbz	r3, 4017dc <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  4017c6:	4b09      	ldr	r3, [pc, #36]	; (4017ec <_sbrk+0x2c>)
  4017c8:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4017ca:	181a      	adds	r2, r3, r0
  4017cc:	4908      	ldr	r1, [pc, #32]	; (4017f0 <_sbrk+0x30>)
  4017ce:	4291      	cmp	r1, r2
  4017d0:	db08      	blt.n	4017e4 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  4017d2:	4610      	mov	r0, r2
  4017d4:	4a05      	ldr	r2, [pc, #20]	; (4017ec <_sbrk+0x2c>)
  4017d6:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  4017d8:	4618      	mov	r0, r3
  4017da:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  4017dc:	4a05      	ldr	r2, [pc, #20]	; (4017f4 <_sbrk+0x34>)
  4017de:	4b03      	ldr	r3, [pc, #12]	; (4017ec <_sbrk+0x2c>)
  4017e0:	601a      	str	r2, [r3, #0]
  4017e2:	e7f0      	b.n	4017c6 <_sbrk+0x6>
		return (caddr_t) -1;	
  4017e4:	f04f 30ff 	mov.w	r0, #4294967295
}
  4017e8:	4770      	bx	lr
  4017ea:	bf00      	nop
  4017ec:	20000e20 	.word	0x20000e20
  4017f0:	20027ffc 	.word	0x20027ffc
  4017f4:	20003e98 	.word	0x20003e98

004017f8 <push_button_handle>:

/************************************************************************/
/* HANDLERS                                                            */
/************************************************************************/
static void push_button_handle(uint32_t id, uint32_t mask)
{
  4017f8:	b508      	push	{r3, lr}
	adc_start(ADC);
  4017fa:	4802      	ldr	r0, [pc, #8]	; (401804 <push_button_handle+0xc>)
  4017fc:	4b02      	ldr	r3, [pc, #8]	; (401808 <push_button_handle+0x10>)
  4017fe:	4798      	blx	r3
  401800:	bd08      	pop	{r3, pc}
  401802:	bf00      	nop
  401804:	40038000 	.word	0x40038000
  401808:	00400a33 	.word	0x00400a33

0040180c <ADC_Handler>:

/**
* \brief ADC interrupt handler.
*/
void ADC_Handler(void)
{
  40180c:	b530      	push	{r4, r5, lr}
  40180e:	b087      	sub	sp, #28
	uint16_t result;
	uint32_t status;

	status = adc_get_status(ADC);
  401810:	4820      	ldr	r0, [pc, #128]	; (401894 <ADC_Handler+0x88>)
  401812:	4b21      	ldr	r3, [pc, #132]	; (401898 <ADC_Handler+0x8c>)
  401814:	4798      	blx	r3

	if (status & ADC_ISR_EOC5)
  401816:	f010 0f20 	tst.w	r0, #32
  40181a:	d104      	bne.n	401826 <ADC_Handler+0x1a>

		ili93xx_set_foreground_color(COLOR_BLACK);
		ili93xx_draw_string(100, 180, (uint8_t*) buffer);

	}
	else if (status & ADC_ISR_EOC0)
  40181c:	f010 0f01 	tst.w	r0, #1
  401820:	d11c      	bne.n	40185c <ADC_Handler+0x50>
		ili93xx_draw_filled_rectangle(95, 135, 240, 170);

		ili93xx_set_foreground_color(COLOR_BLACK);
		ili93xx_draw_string(100, 140, (uint8_t*) buffer);
	}
}
  401822:	b007      	add	sp, #28
  401824:	bd30      	pop	{r4, r5, pc}
		result = adc_get_channel_value(ADC,ADC_CHANNEL);
  401826:	2105      	movs	r1, #5
  401828:	481a      	ldr	r0, [pc, #104]	; (401894 <ADC_Handler+0x88>)
  40182a:	4b1c      	ldr	r3, [pc, #112]	; (40189c <ADC_Handler+0x90>)
  40182c:	4798      	blx	r3
		sprintf (buffer, "Pot: %d", result);
  40182e:	b282      	uxth	r2, r0
  401830:	491b      	ldr	r1, [pc, #108]	; (4018a0 <ADC_Handler+0x94>)
  401832:	a801      	add	r0, sp, #4
  401834:	4b1b      	ldr	r3, [pc, #108]	; (4018a4 <ADC_Handler+0x98>)
  401836:	4798      	blx	r3
		ili93xx_set_foreground_color(COLOR_WHITE);
  401838:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
  40183c:	4c1a      	ldr	r4, [pc, #104]	; (4018a8 <ADC_Handler+0x9c>)
  40183e:	47a0      	blx	r4
		ili93xx_draw_filled_rectangle(95, 175, 240, 200);
  401840:	23c8      	movs	r3, #200	; 0xc8
  401842:	22f0      	movs	r2, #240	; 0xf0
  401844:	21af      	movs	r1, #175	; 0xaf
  401846:	205f      	movs	r0, #95	; 0x5f
  401848:	4d18      	ldr	r5, [pc, #96]	; (4018ac <ADC_Handler+0xa0>)
  40184a:	47a8      	blx	r5
		ili93xx_set_foreground_color(COLOR_BLACK);
  40184c:	2000      	movs	r0, #0
  40184e:	47a0      	blx	r4
		ili93xx_draw_string(100, 180, (uint8_t*) buffer);
  401850:	aa01      	add	r2, sp, #4
  401852:	21b4      	movs	r1, #180	; 0xb4
  401854:	2064      	movs	r0, #100	; 0x64
  401856:	4b16      	ldr	r3, [pc, #88]	; (4018b0 <ADC_Handler+0xa4>)
  401858:	4798      	blx	r3
  40185a:	e7e2      	b.n	401822 <ADC_Handler+0x16>
		result = adc_get_channel_value(ADC,ADC_UMIDADE);
  40185c:	2100      	movs	r1, #0
  40185e:	480d      	ldr	r0, [pc, #52]	; (401894 <ADC_Handler+0x88>)
  401860:	4b0e      	ldr	r3, [pc, #56]	; (40189c <ADC_Handler+0x90>)
  401862:	4798      	blx	r3
		sprintf (buffer, "Umi: %d", result);
  401864:	b282      	uxth	r2, r0
  401866:	4913      	ldr	r1, [pc, #76]	; (4018b4 <ADC_Handler+0xa8>)
  401868:	a801      	add	r0, sp, #4
  40186a:	4b0e      	ldr	r3, [pc, #56]	; (4018a4 <ADC_Handler+0x98>)
  40186c:	4798      	blx	r3
		ili93xx_set_foreground_color(COLOR_WHITE);
  40186e:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
  401872:	4c0d      	ldr	r4, [pc, #52]	; (4018a8 <ADC_Handler+0x9c>)
  401874:	47a0      	blx	r4
		ili93xx_draw_filled_rectangle(95, 135, 240, 170);
  401876:	23aa      	movs	r3, #170	; 0xaa
  401878:	22f0      	movs	r2, #240	; 0xf0
  40187a:	2187      	movs	r1, #135	; 0x87
  40187c:	205f      	movs	r0, #95	; 0x5f
  40187e:	4d0b      	ldr	r5, [pc, #44]	; (4018ac <ADC_Handler+0xa0>)
  401880:	47a8      	blx	r5
		ili93xx_set_foreground_color(COLOR_BLACK);
  401882:	2000      	movs	r0, #0
  401884:	47a0      	blx	r4
		ili93xx_draw_string(100, 140, (uint8_t*) buffer);
  401886:	aa01      	add	r2, sp, #4
  401888:	218c      	movs	r1, #140	; 0x8c
  40188a:	2064      	movs	r0, #100	; 0x64
  40188c:	4b08      	ldr	r3, [pc, #32]	; (4018b0 <ADC_Handler+0xa4>)
  40188e:	4798      	blx	r3
}
  401890:	e7c7      	b.n	401822 <ADC_Handler+0x16>
  401892:	bf00      	nop
  401894:	40038000 	.word	0x40038000
  401898:	00400a55 	.word	0x00400a55
  40189c:	00400a43 	.word	0x00400a43
  4018a0:	00406bf4 	.word	0x00406bf4
  4018a4:	00401c59 	.word	0x00401c59
  4018a8:	00400415 	.word	0x00400415
  4018ac:	0040085d 	.word	0x0040085d
  4018b0:	00400925 	.word	0x00400925
  4018b4:	00406bfc 	.word	0x00406bfc

004018b8 <TC0_Handler>:


void TC_Handler(void)
{
  4018b8:	b508      	push	{r3, lr}
	tc_get_status(TC,CHANNEL);
  4018ba:	2100      	movs	r1, #0
  4018bc:	4803      	ldr	r0, [pc, #12]	; (4018cc <TC0_Handler+0x14>)
  4018be:	4b04      	ldr	r3, [pc, #16]	; (4018d0 <TC0_Handler+0x18>)
  4018c0:	4798      	blx	r3
	adc_start(ADC);
  4018c2:	4804      	ldr	r0, [pc, #16]	; (4018d4 <TC0_Handler+0x1c>)
  4018c4:	4b04      	ldr	r3, [pc, #16]	; (4018d8 <TC0_Handler+0x20>)
  4018c6:	4798      	blx	r3
  4018c8:	bd08      	pop	{r3, pc}
  4018ca:	bf00      	nop
  4018cc:	40010000 	.word	0x40010000
  4018d0:	00400a89 	.word	0x00400a89
  4018d4:	40038000 	.word	0x40038000
  4018d8:	00400a33 	.word	0x00400a33

004018dc <configure_lcd>:

/************************************************************************/
/* CONFIGs                                                              */
/************************************************************************/
void configure_lcd()
{
  4018dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	/** Enable peripheral clock */
	pmc_enable_periph_clk(ID_SMC);
  4018e0:	200a      	movs	r0, #10
  4018e2:	4b1e      	ldr	r3, [pc, #120]	; (40195c <configure_lcd+0x80>)
  4018e4:	4798      	blx	r3

	/** Configure SMC interface for Lcd */
	smc_set_setup_timing(SMC, ILI93XX_LCD_CS, SMC_SETUP_NWE_SETUP(2)
  4018e6:	4c1e      	ldr	r4, [pc, #120]	; (401960 <configure_lcd+0x84>)
  4018e8:	f04f 3202 	mov.w	r2, #33686018	; 0x2020202
  4018ec:	2101      	movs	r1, #1
  4018ee:	4620      	mov	r0, r4
  4018f0:	4b1c      	ldr	r3, [pc, #112]	; (401964 <configure_lcd+0x88>)
  4018f2:	4798      	blx	r3
	| SMC_SETUP_NCS_WR_SETUP(2)
	| SMC_SETUP_NRD_SETUP(2)
	| SMC_SETUP_NCS_RD_SETUP(2));
	
	smc_set_pulse_timing(SMC, ILI93XX_LCD_CS, SMC_PULSE_NWE_PULSE(4)
  4018f4:	4a1c      	ldr	r2, [pc, #112]	; (401968 <configure_lcd+0x8c>)
  4018f6:	2101      	movs	r1, #1
  4018f8:	4620      	mov	r0, r4
  4018fa:	4b1c      	ldr	r3, [pc, #112]	; (40196c <configure_lcd+0x90>)
  4018fc:	4798      	blx	r3
	| SMC_PULSE_NCS_WR_PULSE(4)
	| SMC_PULSE_NRD_PULSE(10)
	| SMC_PULSE_NCS_RD_PULSE(10));
	
	smc_set_cycle_timing(SMC, ILI93XX_LCD_CS, SMC_CYCLE_NWE_CYCLE(10)
  4018fe:	4a1c      	ldr	r2, [pc, #112]	; (401970 <configure_lcd+0x94>)
  401900:	2101      	movs	r1, #1
  401902:	4620      	mov	r0, r4
  401904:	4b1b      	ldr	r3, [pc, #108]	; (401974 <configure_lcd+0x98>)
  401906:	4798      	blx	r3
	| SMC_CYCLE_NRD_CYCLE(22));
	
	smc_set_mode(SMC, ILI93XX_LCD_CS, SMC_MODE_READ_MODE
  401908:	2203      	movs	r2, #3
  40190a:	2101      	movs	r1, #1
  40190c:	4620      	mov	r0, r4
  40190e:	4b1a      	ldr	r3, [pc, #104]	; (401978 <configure_lcd+0x9c>)
  401910:	4798      	blx	r3
	| SMC_MODE_WRITE_MODE);

	/** Initialize display parameter */
	g_ili93xx_display_opt.ul_width = ILI93XX_LCD_WIDTH;
  401912:	4d1a      	ldr	r5, [pc, #104]	; (40197c <configure_lcd+0xa0>)
  401914:	26f0      	movs	r6, #240	; 0xf0
  401916:	602e      	str	r6, [r5, #0]
	g_ili93xx_display_opt.ul_height = ILI93XX_LCD_HEIGHT;
  401918:	f44f 77a0 	mov.w	r7, #320	; 0x140
  40191c:	606f      	str	r7, [r5, #4]
	g_ili93xx_display_opt.foreground_color = COLOR_BLACK;
  40191e:	2400      	movs	r4, #0
  401920:	60ac      	str	r4, [r5, #8]
	g_ili93xx_display_opt.background_color = COLOR_WHITE;
  401922:	f06f 487f 	mvn.w	r8, #4278190080	; 0xff000000
  401926:	f8c5 800c 	str.w	r8, [r5, #12]

	/** Switch off backlight */
	aat31xx_disable_backlight();
  40192a:	4b15      	ldr	r3, [pc, #84]	; (401980 <configure_lcd+0xa4>)
  40192c:	4798      	blx	r3

	/** Initialize LCD */
	ili93xx_init(&g_ili93xx_display_opt);
  40192e:	4628      	mov	r0, r5
  401930:	4b14      	ldr	r3, [pc, #80]	; (401984 <configure_lcd+0xa8>)
  401932:	4798      	blx	r3

	/** Set backlight level */
	aat31xx_set_backlight(AAT31XX_AVG_BACKLIGHT_LEVEL);
  401934:	2008      	movs	r0, #8
  401936:	4b14      	ldr	r3, [pc, #80]	; (401988 <configure_lcd+0xac>)
  401938:	4798      	blx	r3

	ili93xx_set_foreground_color(COLOR_WHITE);
  40193a:	4640      	mov	r0, r8
  40193c:	4b13      	ldr	r3, [pc, #76]	; (40198c <configure_lcd+0xb0>)
  40193e:	4798      	blx	r3
	ili93xx_draw_filled_rectangle(0, 0, ILI93XX_LCD_WIDTH,
  401940:	463b      	mov	r3, r7
  401942:	4632      	mov	r2, r6
  401944:	4621      	mov	r1, r4
  401946:	4620      	mov	r0, r4
  401948:	4d11      	ldr	r5, [pc, #68]	; (401990 <configure_lcd+0xb4>)
  40194a:	47a8      	blx	r5
	ILI93XX_LCD_HEIGHT);
	/** Turn on LCD */
	ili93xx_display_on();
  40194c:	4b11      	ldr	r3, [pc, #68]	; (401994 <configure_lcd+0xb8>)
  40194e:	4798      	blx	r3
	ili93xx_set_cursor_position(0, 0);
  401950:	4621      	mov	r1, r4
  401952:	4620      	mov	r0, r4
  401954:	4b10      	ldr	r3, [pc, #64]	; (401998 <configure_lcd+0xbc>)
  401956:	4798      	blx	r3
  401958:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40195c:	00401201 	.word	0x00401201
  401960:	400e0000 	.word	0x400e0000
  401964:	004001b9 	.word	0x004001b9
  401968:	0a0a0404 	.word	0x0a0a0404
  40196c:	004001bf 	.word	0x004001bf
  401970:	0016000a 	.word	0x0016000a
  401974:	004001c7 	.word	0x004001c7
  401978:	004001cf 	.word	0x004001cf
  40197c:	20000e5c 	.word	0x20000e5c
  401980:	00400195 	.word	0x00400195
  401984:	004004fd 	.word	0x004004fd
  401988:	00400139 	.word	0x00400139
  40198c:	00400415 	.word	0x00400415
  401990:	0040085d 	.word	0x0040085d
  401994:	004003e1 	.word	0x004003e1
  401998:	004004d5 	.word	0x004004d5

0040199c <configure_botao>:
}

void configure_botao(void)
{
  40199c:	b530      	push	{r4, r5, lr}
  40199e:	b083      	sub	sp, #12
	pmc_enable_periph_clk(ID_PIOB);
  4019a0:	200c      	movs	r0, #12
  4019a2:	4b11      	ldr	r3, [pc, #68]	; (4019e8 <configure_botao+0x4c>)
  4019a4:	4798      	blx	r3
	
	pio_set_input(PIN_PUSHBUTTON_1_PIO, PIN_PUSHBUTTON_1_MASK, PIN_PUSHBUTTON_1_ATTR);
  4019a6:	4c11      	ldr	r4, [pc, #68]	; (4019ec <configure_botao+0x50>)
  4019a8:	2279      	movs	r2, #121	; 0x79
  4019aa:	2108      	movs	r1, #8
  4019ac:	4620      	mov	r0, r4
  4019ae:	4b10      	ldr	r3, [pc, #64]	; (4019f0 <configure_botao+0x54>)
  4019b0:	4798      	blx	r3
	pio_set_debounce_filter(PIN_PUSHBUTTON_1_PIO, PIN_PUSHBUTTON_1_MASK, 10);
  4019b2:	220a      	movs	r2, #10
  4019b4:	2108      	movs	r1, #8
  4019b6:	4620      	mov	r0, r4
  4019b8:	4b0e      	ldr	r3, [pc, #56]	; (4019f4 <configure_botao+0x58>)
  4019ba:	4798      	blx	r3
	pio_handler_set(PIN_PUSHBUTTON_1_PIO, PIN_PUSHBUTTON_1_ID,PIN_PUSHBUTTON_1_MASK, PIN_PUSHBUTTON_1_ATTR ,push_button_handle);
  4019bc:	4b0e      	ldr	r3, [pc, #56]	; (4019f8 <configure_botao+0x5c>)
  4019be:	9300      	str	r3, [sp, #0]
  4019c0:	2379      	movs	r3, #121	; 0x79
  4019c2:	2208      	movs	r2, #8
  4019c4:	210c      	movs	r1, #12
  4019c6:	4620      	mov	r0, r4
  4019c8:	4d0c      	ldr	r5, [pc, #48]	; (4019fc <configure_botao+0x60>)
  4019ca:	47a8      	blx	r5
	pio_enable_interrupt(PIN_PUSHBUTTON_1_PIO, PIN_PUSHBUTTON_1_MASK);
  4019cc:	2108      	movs	r1, #8
  4019ce:	4620      	mov	r0, r4
  4019d0:	4b0b      	ldr	r3, [pc, #44]	; (401a00 <configure_botao+0x64>)
  4019d2:	4798      	blx	r3
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  4019d4:	4b0b      	ldr	r3, [pc, #44]	; (401a04 <configure_botao+0x68>)
  4019d6:	2250      	movs	r2, #80	; 0x50
  4019d8:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4019dc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  4019e0:	601a      	str	r2, [r3, #0]
	NVIC_SetPriority( PIN_PUSHBUTTON_1_ID, 5);
	NVIC_EnableIRQ( PIN_PUSHBUTTON_1_ID);
}
  4019e2:	b003      	add	sp, #12
  4019e4:	bd30      	pop	{r4, r5, pc}
  4019e6:	bf00      	nop
  4019e8:	00401201 	.word	0x00401201
  4019ec:	400e1000 	.word	0x400e1000
  4019f0:	00400d53 	.word	0x00400d53
  4019f4:	00400ca9 	.word	0x00400ca9
  4019f8:	004017f9 	.word	0x004017f9
  4019fc:	00401061 	.word	0x00401061
  401a00:	00400dd9 	.word	0x00400dd9
  401a04:	e000e100 	.word	0xe000e100

00401a08 <configure_adc>:


void configure_adc(void)
{
  401a08:	b538      	push	{r3, r4, r5, lr}
	/* Enable peripheral clock. */
	pmc_enable_periph_clk(ID_ADC);	
  401a0a:	201d      	movs	r0, #29
  401a0c:	4b15      	ldr	r3, [pc, #84]	; (401a64 <configure_adc+0x5c>)
  401a0e:	4798      	blx	r3

	adc_init(ADC, sysclk_get_cpu_hz(), 6400000, STARTUP_TIME);
  401a10:	4c15      	ldr	r4, [pc, #84]	; (401a68 <configure_adc+0x60>)
  401a12:	f44f 2380 	mov.w	r3, #262144	; 0x40000
  401a16:	4a15      	ldr	r2, [pc, #84]	; (401a6c <configure_adc+0x64>)
  401a18:	4915      	ldr	r1, [pc, #84]	; (401a70 <configure_adc+0x68>)
  401a1a:	4620      	mov	r0, r4
  401a1c:	4d15      	ldr	r5, [pc, #84]	; (401a74 <configure_adc+0x6c>)
  401a1e:	47a8      	blx	r5
	adc_configure_timing(ADC, TRACKING_TIME	, ADC_SETTLING_TIME_3, TRANSFER_PERIOD);
  401a20:	2302      	movs	r3, #2
  401a22:	f44f 1240 	mov.w	r2, #3145728	; 0x300000
  401a26:	210f      	movs	r1, #15
  401a28:	4620      	mov	r0, r4
  401a2a:	4d13      	ldr	r5, [pc, #76]	; (401a78 <configure_adc+0x70>)
  401a2c:	47a8      	blx	r5
	adc_configure_trigger(ADC, ADC_TRIG_SW, 0);
  401a2e:	2200      	movs	r2, #0
  401a30:	4611      	mov	r1, r2
  401a32:	4620      	mov	r0, r4
  401a34:	4b11      	ldr	r3, [pc, #68]	; (401a7c <configure_adc+0x74>)
  401a36:	4798      	blx	r3
	adc_enable_channel(ADC, ADC_UMIDADE);
  401a38:	2100      	movs	r1, #0
  401a3a:	4620      	mov	r0, r4
  401a3c:	4d10      	ldr	r5, [pc, #64]	; (401a80 <configure_adc+0x78>)
  401a3e:	47a8      	blx	r5
	adc_enable_channel(ADC, ADC_CHANNEL);
  401a40:	2105      	movs	r1, #5
  401a42:	4620      	mov	r0, r4
  401a44:	47a8      	blx	r5
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  401a46:	4b0f      	ldr	r3, [pc, #60]	; (401a84 <configure_adc+0x7c>)
  401a48:	2250      	movs	r2, #80	; 0x50
  401a4a:	f883 231d 	strb.w	r2, [r3, #797]	; 0x31d
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401a4e:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  401a52:	601a      	str	r2, [r3, #0]
	NVIC_SetPriority(ADC_IRQn, 5);
	NVIC_EnableIRQ(ADC_IRQn);
	adc_enable_interrupt(ADC, ADC_ISR_EOC5);
  401a54:	2120      	movs	r1, #32
  401a56:	4620      	mov	r0, r4
  401a58:	4d0b      	ldr	r5, [pc, #44]	; (401a88 <configure_adc+0x80>)
  401a5a:	47a8      	blx	r5
	adc_enable_interrupt(ADC, ADC_ISR_EOC0);
  401a5c:	2101      	movs	r1, #1
  401a5e:	4620      	mov	r0, r4
  401a60:	47a8      	blx	r5
  401a62:	bd38      	pop	{r3, r4, r5, pc}
  401a64:	00401201 	.word	0x00401201
  401a68:	40038000 	.word	0x40038000
  401a6c:	0061a800 	.word	0x0061a800
  401a70:	07270e00 	.word	0x07270e00
  401a74:	004009d5 	.word	0x004009d5
  401a78:	00400a17 	.word	0x00400a17
  401a7c:	00400a09 	.word	0x00400a09
  401a80:	00400a39 	.word	0x00400a39
  401a84:	e000e100 	.word	0xe000e100
  401a88:	00400a51 	.word	0x00400a51

00401a8c <main>:

/************************************************************************/
/* MAIN                                                                 */
/************************************************************************/
int main(void)
{
  401a8c:	b500      	push	{lr}
  401a8e:	b085      	sub	sp, #20
	sysclk_init();
  401a90:	4b23      	ldr	r3, [pc, #140]	; (401b20 <main+0x94>)
  401a92:	4798      	blx	r3
	board_init();
  401a94:	4b23      	ldr	r3, [pc, #140]	; (401b24 <main+0x98>)
  401a96:	4798      	blx	r3

	configure_lcd();
  401a98:	4b23      	ldr	r3, [pc, #140]	; (401b28 <main+0x9c>)
  401a9a:	4798      	blx	r3
	configure_adc();
  401a9c:	4b23      	ldr	r3, [pc, #140]	; (401b2c <main+0xa0>)
  401a9e:	4798      	blx	r3
	configure_botao();
  401aa0:	4b23      	ldr	r3, [pc, #140]	; (401b30 <main+0xa4>)
  401aa2:	4798      	blx	r3
	pmc_enable_periph_clk(ID_TC);
  401aa4:	2017      	movs	r0, #23
  401aa6:	4b23      	ldr	r3, [pc, #140]	; (401b34 <main+0xa8>)
  401aa8:	4798      	blx	r3
	tc_find_mck_divisor( freq_desejada, ul_sysclk, &ul_div, &ul_tcclks,	BOARD_MCK);
  401aaa:	4c23      	ldr	r4, [pc, #140]	; (401b38 <main+0xac>)
  401aac:	9400      	str	r4, [sp, #0]
  401aae:	ab03      	add	r3, sp, #12
  401ab0:	aa02      	add	r2, sp, #8
  401ab2:	4621      	mov	r1, r4
  401ab4:	200a      	movs	r0, #10
  401ab6:	4d21      	ldr	r5, [pc, #132]	; (401b3c <main+0xb0>)
  401ab8:	47a8      	blx	r5
	tc_init(TC, CHANNEL, ul_tcclks | TC_CMR_CPCTRG);
  401aba:	4d21      	ldr	r5, [pc, #132]	; (401b40 <main+0xb4>)
  401abc:	9a03      	ldr	r2, [sp, #12]
  401abe:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  401ac2:	2100      	movs	r1, #0
  401ac4:	4628      	mov	r0, r5
  401ac6:	4b1f      	ldr	r3, [pc, #124]	; (401b44 <main+0xb8>)
  401ac8:	4798      	blx	r3
	counts = (ul_sysclk/ul_div)/freq_desejada;
  401aca:	9a02      	ldr	r2, [sp, #8]
  401acc:	fbb4 f2f2 	udiv	r2, r4, r2
  401ad0:	4b1d      	ldr	r3, [pc, #116]	; (401b48 <main+0xbc>)
  401ad2:	fba3 3202 	umull	r3, r2, r3, r2
	tc_write_rc(TC, CHANNEL, counts);
  401ad6:	08d2      	lsrs	r2, r2, #3
  401ad8:	2100      	movs	r1, #0
  401ada:	4628      	mov	r0, r5
  401adc:	4b1b      	ldr	r3, [pc, #108]	; (401b4c <main+0xc0>)
  401ade:	4798      	blx	r3
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  401ae0:	4b1b      	ldr	r3, [pc, #108]	; (401b50 <main+0xc4>)
  401ae2:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  401ae6:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  401aea:	2140      	movs	r1, #64	; 0x40
  401aec:	f883 1317 	strb.w	r1, [r3, #791]	; 0x317
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401af0:	601a      	str	r2, [r3, #0]
	tc_enable_interrupt(TC,	CHANNEL, TC_IER_CPCS);
  401af2:	2210      	movs	r2, #16
  401af4:	2100      	movs	r1, #0
  401af6:	4628      	mov	r0, r5
  401af8:	4b16      	ldr	r3, [pc, #88]	; (401b54 <main+0xc8>)
  401afa:	4798      	blx	r3
	tc_start(TC, CHANNEL);
  401afc:	2100      	movs	r1, #0
  401afe:	4628      	mov	r0, r5
  401b00:	4b15      	ldr	r3, [pc, #84]	; (401b58 <main+0xcc>)
  401b02:	4798      	blx	r3
	tc_config(10);

	/** Draw text on the LCD */
	ili93xx_set_foreground_color(COLOR_BLACK);
  401b04:	2000      	movs	r0, #0
  401b06:	4b15      	ldr	r3, [pc, #84]	; (401b5c <main+0xd0>)
  401b08:	4798      	blx	r3
	ili93xx_draw_string(10, 20, (uint8_t *)"Aula - ADC");
  401b0a:	4a15      	ldr	r2, [pc, #84]	; (401b60 <main+0xd4>)
  401b0c:	2114      	movs	r1, #20
  401b0e:	200a      	movs	r0, #10
  401b10:	4b14      	ldr	r3, [pc, #80]	; (401b64 <main+0xd8>)
  401b12:	4798      	blx	r3

	while (1)
	{
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  401b14:	2502      	movs	r5, #2
  401b16:	4c14      	ldr	r4, [pc, #80]	; (401b68 <main+0xdc>)
  401b18:	4628      	mov	r0, r5
  401b1a:	47a0      	blx	r4
  401b1c:	e7fc      	b.n	401b18 <main+0x8c>
  401b1e:	bf00      	nop
  401b20:	00400b01 	.word	0x00400b01
  401b24:	00400b65 	.word	0x00400b65
  401b28:	004018dd 	.word	0x004018dd
  401b2c:	00401a09 	.word	0x00401a09
  401b30:	0040199d 	.word	0x0040199d
  401b34:	00401201 	.word	0x00401201
  401b38:	07270e00 	.word	0x07270e00
  401b3c:	00400a91 	.word	0x00400a91
  401b40:	40010000 	.word	0x40010000
  401b44:	00400a59 	.word	0x00400a59
  401b48:	cccccccd 	.word	0xcccccccd
  401b4c:	00400a79 	.word	0x00400a79
  401b50:	e000e100 	.word	0xe000e100
  401b54:	00400a81 	.word	0x00400a81
  401b58:	00400a71 	.word	0x00400a71
  401b5c:	00400415 	.word	0x00400415
  401b60:	00406c04 	.word	0x00406c04
  401b64:	00400925 	.word	0x00400925
  401b68:	004012b1 	.word	0x004012b1

00401b6c <__libc_init_array>:
  401b6c:	b570      	push	{r4, r5, r6, lr}
  401b6e:	4e0f      	ldr	r6, [pc, #60]	; (401bac <__libc_init_array+0x40>)
  401b70:	4d0f      	ldr	r5, [pc, #60]	; (401bb0 <__libc_init_array+0x44>)
  401b72:	1b76      	subs	r6, r6, r5
  401b74:	10b6      	asrs	r6, r6, #2
  401b76:	bf18      	it	ne
  401b78:	2400      	movne	r4, #0
  401b7a:	d005      	beq.n	401b88 <__libc_init_array+0x1c>
  401b7c:	3401      	adds	r4, #1
  401b7e:	f855 3b04 	ldr.w	r3, [r5], #4
  401b82:	4798      	blx	r3
  401b84:	42a6      	cmp	r6, r4
  401b86:	d1f9      	bne.n	401b7c <__libc_init_array+0x10>
  401b88:	4e0a      	ldr	r6, [pc, #40]	; (401bb4 <__libc_init_array+0x48>)
  401b8a:	4d0b      	ldr	r5, [pc, #44]	; (401bb8 <__libc_init_array+0x4c>)
  401b8c:	1b76      	subs	r6, r6, r5
  401b8e:	f005 f983 	bl	406e98 <_init>
  401b92:	10b6      	asrs	r6, r6, #2
  401b94:	bf18      	it	ne
  401b96:	2400      	movne	r4, #0
  401b98:	d006      	beq.n	401ba8 <__libc_init_array+0x3c>
  401b9a:	3401      	adds	r4, #1
  401b9c:	f855 3b04 	ldr.w	r3, [r5], #4
  401ba0:	4798      	blx	r3
  401ba2:	42a6      	cmp	r6, r4
  401ba4:	d1f9      	bne.n	401b9a <__libc_init_array+0x2e>
  401ba6:	bd70      	pop	{r4, r5, r6, pc}
  401ba8:	bd70      	pop	{r4, r5, r6, pc}
  401baa:	bf00      	nop
  401bac:	00406ea4 	.word	0x00406ea4
  401bb0:	00406ea4 	.word	0x00406ea4
  401bb4:	00406eac 	.word	0x00406eac
  401bb8:	00406ea4 	.word	0x00406ea4

00401bbc <memset>:
  401bbc:	b470      	push	{r4, r5, r6}
  401bbe:	0786      	lsls	r6, r0, #30
  401bc0:	d046      	beq.n	401c50 <memset+0x94>
  401bc2:	1e54      	subs	r4, r2, #1
  401bc4:	2a00      	cmp	r2, #0
  401bc6:	d041      	beq.n	401c4c <memset+0x90>
  401bc8:	b2ca      	uxtb	r2, r1
  401bca:	4603      	mov	r3, r0
  401bcc:	e002      	b.n	401bd4 <memset+0x18>
  401bce:	f114 34ff 	adds.w	r4, r4, #4294967295
  401bd2:	d33b      	bcc.n	401c4c <memset+0x90>
  401bd4:	f803 2b01 	strb.w	r2, [r3], #1
  401bd8:	079d      	lsls	r5, r3, #30
  401bda:	d1f8      	bne.n	401bce <memset+0x12>
  401bdc:	2c03      	cmp	r4, #3
  401bde:	d92e      	bls.n	401c3e <memset+0x82>
  401be0:	b2cd      	uxtb	r5, r1
  401be2:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401be6:	2c0f      	cmp	r4, #15
  401be8:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401bec:	d919      	bls.n	401c22 <memset+0x66>
  401bee:	f103 0210 	add.w	r2, r3, #16
  401bf2:	4626      	mov	r6, r4
  401bf4:	3e10      	subs	r6, #16
  401bf6:	2e0f      	cmp	r6, #15
  401bf8:	f842 5c10 	str.w	r5, [r2, #-16]
  401bfc:	f842 5c0c 	str.w	r5, [r2, #-12]
  401c00:	f842 5c08 	str.w	r5, [r2, #-8]
  401c04:	f842 5c04 	str.w	r5, [r2, #-4]
  401c08:	f102 0210 	add.w	r2, r2, #16
  401c0c:	d8f2      	bhi.n	401bf4 <memset+0x38>
  401c0e:	f1a4 0210 	sub.w	r2, r4, #16
  401c12:	f022 020f 	bic.w	r2, r2, #15
  401c16:	f004 040f 	and.w	r4, r4, #15
  401c1a:	3210      	adds	r2, #16
  401c1c:	2c03      	cmp	r4, #3
  401c1e:	4413      	add	r3, r2
  401c20:	d90d      	bls.n	401c3e <memset+0x82>
  401c22:	461e      	mov	r6, r3
  401c24:	4622      	mov	r2, r4
  401c26:	3a04      	subs	r2, #4
  401c28:	2a03      	cmp	r2, #3
  401c2a:	f846 5b04 	str.w	r5, [r6], #4
  401c2e:	d8fa      	bhi.n	401c26 <memset+0x6a>
  401c30:	1f22      	subs	r2, r4, #4
  401c32:	f022 0203 	bic.w	r2, r2, #3
  401c36:	3204      	adds	r2, #4
  401c38:	4413      	add	r3, r2
  401c3a:	f004 0403 	and.w	r4, r4, #3
  401c3e:	b12c      	cbz	r4, 401c4c <memset+0x90>
  401c40:	b2c9      	uxtb	r1, r1
  401c42:	441c      	add	r4, r3
  401c44:	f803 1b01 	strb.w	r1, [r3], #1
  401c48:	429c      	cmp	r4, r3
  401c4a:	d1fb      	bne.n	401c44 <memset+0x88>
  401c4c:	bc70      	pop	{r4, r5, r6}
  401c4e:	4770      	bx	lr
  401c50:	4614      	mov	r4, r2
  401c52:	4603      	mov	r3, r0
  401c54:	e7c2      	b.n	401bdc <memset+0x20>
  401c56:	bf00      	nop

00401c58 <sprintf>:
  401c58:	b40e      	push	{r1, r2, r3}
  401c5a:	b5f0      	push	{r4, r5, r6, r7, lr}
  401c5c:	b09c      	sub	sp, #112	; 0x70
  401c5e:	ab21      	add	r3, sp, #132	; 0x84
  401c60:	490f      	ldr	r1, [pc, #60]	; (401ca0 <sprintf+0x48>)
  401c62:	f853 2b04 	ldr.w	r2, [r3], #4
  401c66:	9301      	str	r3, [sp, #4]
  401c68:	4605      	mov	r5, r0
  401c6a:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  401c6e:	6808      	ldr	r0, [r1, #0]
  401c70:	9502      	str	r5, [sp, #8]
  401c72:	f44f 7702 	mov.w	r7, #520	; 0x208
  401c76:	f64f 76ff 	movw	r6, #65535	; 0xffff
  401c7a:	a902      	add	r1, sp, #8
  401c7c:	9506      	str	r5, [sp, #24]
  401c7e:	f8ad 7014 	strh.w	r7, [sp, #20]
  401c82:	9404      	str	r4, [sp, #16]
  401c84:	9407      	str	r4, [sp, #28]
  401c86:	f8ad 6016 	strh.w	r6, [sp, #22]
  401c8a:	f000 f887 	bl	401d9c <_svfprintf_r>
  401c8e:	9b02      	ldr	r3, [sp, #8]
  401c90:	2200      	movs	r2, #0
  401c92:	701a      	strb	r2, [r3, #0]
  401c94:	b01c      	add	sp, #112	; 0x70
  401c96:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  401c9a:	b003      	add	sp, #12
  401c9c:	4770      	bx	lr
  401c9e:	bf00      	nop
  401ca0:	20000014 	.word	0x20000014
	...

00401cc0 <strlen>:
  401cc0:	f890 f000 	pld	[r0]
  401cc4:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  401cc8:	f020 0107 	bic.w	r1, r0, #7
  401ccc:	f06f 0c00 	mvn.w	ip, #0
  401cd0:	f010 0407 	ands.w	r4, r0, #7
  401cd4:	f891 f020 	pld	[r1, #32]
  401cd8:	f040 8049 	bne.w	401d6e <strlen+0xae>
  401cdc:	f04f 0400 	mov.w	r4, #0
  401ce0:	f06f 0007 	mvn.w	r0, #7
  401ce4:	e9d1 2300 	ldrd	r2, r3, [r1]
  401ce8:	f891 f040 	pld	[r1, #64]	; 0x40
  401cec:	f100 0008 	add.w	r0, r0, #8
  401cf0:	fa82 f24c 	uadd8	r2, r2, ip
  401cf4:	faa4 f28c 	sel	r2, r4, ip
  401cf8:	fa83 f34c 	uadd8	r3, r3, ip
  401cfc:	faa2 f38c 	sel	r3, r2, ip
  401d00:	bb4b      	cbnz	r3, 401d56 <strlen+0x96>
  401d02:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  401d06:	fa82 f24c 	uadd8	r2, r2, ip
  401d0a:	f100 0008 	add.w	r0, r0, #8
  401d0e:	faa4 f28c 	sel	r2, r4, ip
  401d12:	fa83 f34c 	uadd8	r3, r3, ip
  401d16:	faa2 f38c 	sel	r3, r2, ip
  401d1a:	b9e3      	cbnz	r3, 401d56 <strlen+0x96>
  401d1c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  401d20:	fa82 f24c 	uadd8	r2, r2, ip
  401d24:	f100 0008 	add.w	r0, r0, #8
  401d28:	faa4 f28c 	sel	r2, r4, ip
  401d2c:	fa83 f34c 	uadd8	r3, r3, ip
  401d30:	faa2 f38c 	sel	r3, r2, ip
  401d34:	b97b      	cbnz	r3, 401d56 <strlen+0x96>
  401d36:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  401d3a:	f101 0120 	add.w	r1, r1, #32
  401d3e:	fa82 f24c 	uadd8	r2, r2, ip
  401d42:	f100 0008 	add.w	r0, r0, #8
  401d46:	faa4 f28c 	sel	r2, r4, ip
  401d4a:	fa83 f34c 	uadd8	r3, r3, ip
  401d4e:	faa2 f38c 	sel	r3, r2, ip
  401d52:	2b00      	cmp	r3, #0
  401d54:	d0c6      	beq.n	401ce4 <strlen+0x24>
  401d56:	2a00      	cmp	r2, #0
  401d58:	bf04      	itt	eq
  401d5a:	3004      	addeq	r0, #4
  401d5c:	461a      	moveq	r2, r3
  401d5e:	ba12      	rev	r2, r2
  401d60:	fab2 f282 	clz	r2, r2
  401d64:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  401d68:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  401d6c:	4770      	bx	lr
  401d6e:	e9d1 2300 	ldrd	r2, r3, [r1]
  401d72:	f004 0503 	and.w	r5, r4, #3
  401d76:	f1c4 0000 	rsb	r0, r4, #0
  401d7a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  401d7e:	f014 0f04 	tst.w	r4, #4
  401d82:	f891 f040 	pld	[r1, #64]	; 0x40
  401d86:	fa0c f505 	lsl.w	r5, ip, r5
  401d8a:	ea62 0205 	orn	r2, r2, r5
  401d8e:	bf1c      	itt	ne
  401d90:	ea63 0305 	ornne	r3, r3, r5
  401d94:	4662      	movne	r2, ip
  401d96:	f04f 0400 	mov.w	r4, #0
  401d9a:	e7a9      	b.n	401cf0 <strlen+0x30>

00401d9c <_svfprintf_r>:
  401d9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401da0:	b0c3      	sub	sp, #268	; 0x10c
  401da2:	460c      	mov	r4, r1
  401da4:	910b      	str	r1, [sp, #44]	; 0x2c
  401da6:	4692      	mov	sl, r2
  401da8:	930f      	str	r3, [sp, #60]	; 0x3c
  401daa:	900c      	str	r0, [sp, #48]	; 0x30
  401dac:	f002 fb42 	bl	404434 <_localeconv_r>
  401db0:	6803      	ldr	r3, [r0, #0]
  401db2:	931a      	str	r3, [sp, #104]	; 0x68
  401db4:	4618      	mov	r0, r3
  401db6:	f7ff ff83 	bl	401cc0 <strlen>
  401dba:	89a3      	ldrh	r3, [r4, #12]
  401dbc:	9019      	str	r0, [sp, #100]	; 0x64
  401dbe:	0619      	lsls	r1, r3, #24
  401dc0:	d503      	bpl.n	401dca <_svfprintf_r+0x2e>
  401dc2:	6923      	ldr	r3, [r4, #16]
  401dc4:	2b00      	cmp	r3, #0
  401dc6:	f001 8003 	beq.w	402dd0 <_svfprintf_r+0x1034>
  401dca:	2300      	movs	r3, #0
  401dcc:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  401dd0:	9313      	str	r3, [sp, #76]	; 0x4c
  401dd2:	9315      	str	r3, [sp, #84]	; 0x54
  401dd4:	9314      	str	r3, [sp, #80]	; 0x50
  401dd6:	9327      	str	r3, [sp, #156]	; 0x9c
  401dd8:	9326      	str	r3, [sp, #152]	; 0x98
  401dda:	9318      	str	r3, [sp, #96]	; 0x60
  401ddc:	931b      	str	r3, [sp, #108]	; 0x6c
  401dde:	9309      	str	r3, [sp, #36]	; 0x24
  401de0:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  401de4:	46c8      	mov	r8, r9
  401de6:	9316      	str	r3, [sp, #88]	; 0x58
  401de8:	9317      	str	r3, [sp, #92]	; 0x5c
  401dea:	f89a 3000 	ldrb.w	r3, [sl]
  401dee:	4654      	mov	r4, sl
  401df0:	b1e3      	cbz	r3, 401e2c <_svfprintf_r+0x90>
  401df2:	2b25      	cmp	r3, #37	; 0x25
  401df4:	d102      	bne.n	401dfc <_svfprintf_r+0x60>
  401df6:	e019      	b.n	401e2c <_svfprintf_r+0x90>
  401df8:	2b25      	cmp	r3, #37	; 0x25
  401dfa:	d003      	beq.n	401e04 <_svfprintf_r+0x68>
  401dfc:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401e00:	2b00      	cmp	r3, #0
  401e02:	d1f9      	bne.n	401df8 <_svfprintf_r+0x5c>
  401e04:	eba4 050a 	sub.w	r5, r4, sl
  401e08:	b185      	cbz	r5, 401e2c <_svfprintf_r+0x90>
  401e0a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401e0c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  401e0e:	f8c8 a000 	str.w	sl, [r8]
  401e12:	3301      	adds	r3, #1
  401e14:	442a      	add	r2, r5
  401e16:	2b07      	cmp	r3, #7
  401e18:	f8c8 5004 	str.w	r5, [r8, #4]
  401e1c:	9227      	str	r2, [sp, #156]	; 0x9c
  401e1e:	9326      	str	r3, [sp, #152]	; 0x98
  401e20:	dc7f      	bgt.n	401f22 <_svfprintf_r+0x186>
  401e22:	f108 0808 	add.w	r8, r8, #8
  401e26:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401e28:	442b      	add	r3, r5
  401e2a:	9309      	str	r3, [sp, #36]	; 0x24
  401e2c:	7823      	ldrb	r3, [r4, #0]
  401e2e:	2b00      	cmp	r3, #0
  401e30:	d07f      	beq.n	401f32 <_svfprintf_r+0x196>
  401e32:	2300      	movs	r3, #0
  401e34:	461a      	mov	r2, r3
  401e36:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  401e3a:	4619      	mov	r1, r3
  401e3c:	930d      	str	r3, [sp, #52]	; 0x34
  401e3e:	469b      	mov	fp, r3
  401e40:	f04f 30ff 	mov.w	r0, #4294967295
  401e44:	7863      	ldrb	r3, [r4, #1]
  401e46:	900a      	str	r0, [sp, #40]	; 0x28
  401e48:	f104 0a01 	add.w	sl, r4, #1
  401e4c:	f10a 0a01 	add.w	sl, sl, #1
  401e50:	f1a3 0020 	sub.w	r0, r3, #32
  401e54:	2858      	cmp	r0, #88	; 0x58
  401e56:	f200 83c1 	bhi.w	4025dc <_svfprintf_r+0x840>
  401e5a:	e8df f010 	tbh	[pc, r0, lsl #1]
  401e5e:	0238      	.short	0x0238
  401e60:	03bf03bf 	.word	0x03bf03bf
  401e64:	03bf0240 	.word	0x03bf0240
  401e68:	03bf03bf 	.word	0x03bf03bf
  401e6c:	03bf03bf 	.word	0x03bf03bf
  401e70:	024503bf 	.word	0x024503bf
  401e74:	03bf0203 	.word	0x03bf0203
  401e78:	026b005d 	.word	0x026b005d
  401e7c:	028603bf 	.word	0x028603bf
  401e80:	039d039d 	.word	0x039d039d
  401e84:	039d039d 	.word	0x039d039d
  401e88:	039d039d 	.word	0x039d039d
  401e8c:	039d039d 	.word	0x039d039d
  401e90:	03bf039d 	.word	0x03bf039d
  401e94:	03bf03bf 	.word	0x03bf03bf
  401e98:	03bf03bf 	.word	0x03bf03bf
  401e9c:	03bf03bf 	.word	0x03bf03bf
  401ea0:	03bf03bf 	.word	0x03bf03bf
  401ea4:	033703bf 	.word	0x033703bf
  401ea8:	03bf0357 	.word	0x03bf0357
  401eac:	03bf0357 	.word	0x03bf0357
  401eb0:	03bf03bf 	.word	0x03bf03bf
  401eb4:	039803bf 	.word	0x039803bf
  401eb8:	03bf03bf 	.word	0x03bf03bf
  401ebc:	03bf03ad 	.word	0x03bf03ad
  401ec0:	03bf03bf 	.word	0x03bf03bf
  401ec4:	03bf03bf 	.word	0x03bf03bf
  401ec8:	03bf0259 	.word	0x03bf0259
  401ecc:	031e03bf 	.word	0x031e03bf
  401ed0:	03bf03bf 	.word	0x03bf03bf
  401ed4:	03bf03bf 	.word	0x03bf03bf
  401ed8:	03bf03bf 	.word	0x03bf03bf
  401edc:	03bf03bf 	.word	0x03bf03bf
  401ee0:	03bf03bf 	.word	0x03bf03bf
  401ee4:	02db02c6 	.word	0x02db02c6
  401ee8:	03570357 	.word	0x03570357
  401eec:	028b0357 	.word	0x028b0357
  401ef0:	03bf02db 	.word	0x03bf02db
  401ef4:	029003bf 	.word	0x029003bf
  401ef8:	029d03bf 	.word	0x029d03bf
  401efc:	02b401cc 	.word	0x02b401cc
  401f00:	03bf0208 	.word	0x03bf0208
  401f04:	03bf01e1 	.word	0x03bf01e1
  401f08:	03bf007e 	.word	0x03bf007e
  401f0c:	020d03bf 	.word	0x020d03bf
  401f10:	980d      	ldr	r0, [sp, #52]	; 0x34
  401f12:	930f      	str	r3, [sp, #60]	; 0x3c
  401f14:	4240      	negs	r0, r0
  401f16:	900d      	str	r0, [sp, #52]	; 0x34
  401f18:	f04b 0b04 	orr.w	fp, fp, #4
  401f1c:	f89a 3000 	ldrb.w	r3, [sl]
  401f20:	e794      	b.n	401e4c <_svfprintf_r+0xb0>
  401f22:	aa25      	add	r2, sp, #148	; 0x94
  401f24:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401f26:	980c      	ldr	r0, [sp, #48]	; 0x30
  401f28:	f003 fb6e 	bl	405608 <__ssprint_r>
  401f2c:	b940      	cbnz	r0, 401f40 <_svfprintf_r+0x1a4>
  401f2e:	46c8      	mov	r8, r9
  401f30:	e779      	b.n	401e26 <_svfprintf_r+0x8a>
  401f32:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  401f34:	b123      	cbz	r3, 401f40 <_svfprintf_r+0x1a4>
  401f36:	980c      	ldr	r0, [sp, #48]	; 0x30
  401f38:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401f3a:	aa25      	add	r2, sp, #148	; 0x94
  401f3c:	f003 fb64 	bl	405608 <__ssprint_r>
  401f40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401f42:	899b      	ldrh	r3, [r3, #12]
  401f44:	f013 0f40 	tst.w	r3, #64	; 0x40
  401f48:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401f4a:	bf18      	it	ne
  401f4c:	f04f 33ff 	movne.w	r3, #4294967295
  401f50:	9309      	str	r3, [sp, #36]	; 0x24
  401f52:	9809      	ldr	r0, [sp, #36]	; 0x24
  401f54:	b043      	add	sp, #268	; 0x10c
  401f56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401f5a:	f01b 0f20 	tst.w	fp, #32
  401f5e:	9311      	str	r3, [sp, #68]	; 0x44
  401f60:	f040 81dd 	bne.w	40231e <_svfprintf_r+0x582>
  401f64:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401f66:	f01b 0f10 	tst.w	fp, #16
  401f6a:	4613      	mov	r3, r2
  401f6c:	f040 856e 	bne.w	402a4c <_svfprintf_r+0xcb0>
  401f70:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401f74:	f000 856a 	beq.w	402a4c <_svfprintf_r+0xcb0>
  401f78:	8814      	ldrh	r4, [r2, #0]
  401f7a:	3204      	adds	r2, #4
  401f7c:	2500      	movs	r5, #0
  401f7e:	2301      	movs	r3, #1
  401f80:	920f      	str	r2, [sp, #60]	; 0x3c
  401f82:	2700      	movs	r7, #0
  401f84:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  401f88:	990a      	ldr	r1, [sp, #40]	; 0x28
  401f8a:	1c4a      	adds	r2, r1, #1
  401f8c:	f000 8265 	beq.w	40245a <_svfprintf_r+0x6be>
  401f90:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  401f94:	9207      	str	r2, [sp, #28]
  401f96:	ea54 0205 	orrs.w	r2, r4, r5
  401f9a:	f040 8264 	bne.w	402466 <_svfprintf_r+0x6ca>
  401f9e:	2900      	cmp	r1, #0
  401fa0:	f040 843c 	bne.w	40281c <_svfprintf_r+0xa80>
  401fa4:	2b00      	cmp	r3, #0
  401fa6:	f040 84d7 	bne.w	402958 <_svfprintf_r+0xbbc>
  401faa:	f01b 0301 	ands.w	r3, fp, #1
  401fae:	930e      	str	r3, [sp, #56]	; 0x38
  401fb0:	f000 8604 	beq.w	402bbc <_svfprintf_r+0xe20>
  401fb4:	ae42      	add	r6, sp, #264	; 0x108
  401fb6:	2330      	movs	r3, #48	; 0x30
  401fb8:	f806 3d41 	strb.w	r3, [r6, #-65]!
  401fbc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401fbe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401fc0:	4293      	cmp	r3, r2
  401fc2:	bfb8      	it	lt
  401fc4:	4613      	movlt	r3, r2
  401fc6:	9308      	str	r3, [sp, #32]
  401fc8:	2300      	movs	r3, #0
  401fca:	9312      	str	r3, [sp, #72]	; 0x48
  401fcc:	b117      	cbz	r7, 401fd4 <_svfprintf_r+0x238>
  401fce:	9b08      	ldr	r3, [sp, #32]
  401fd0:	3301      	adds	r3, #1
  401fd2:	9308      	str	r3, [sp, #32]
  401fd4:	9b07      	ldr	r3, [sp, #28]
  401fd6:	f013 0302 	ands.w	r3, r3, #2
  401fda:	9310      	str	r3, [sp, #64]	; 0x40
  401fdc:	d002      	beq.n	401fe4 <_svfprintf_r+0x248>
  401fde:	9b08      	ldr	r3, [sp, #32]
  401fe0:	3302      	adds	r3, #2
  401fe2:	9308      	str	r3, [sp, #32]
  401fe4:	9b07      	ldr	r3, [sp, #28]
  401fe6:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  401fea:	f040 830e 	bne.w	40260a <_svfprintf_r+0x86e>
  401fee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401ff0:	9a08      	ldr	r2, [sp, #32]
  401ff2:	eba3 0b02 	sub.w	fp, r3, r2
  401ff6:	f1bb 0f00 	cmp.w	fp, #0
  401ffa:	f340 8306 	ble.w	40260a <_svfprintf_r+0x86e>
  401ffe:	f1bb 0f10 	cmp.w	fp, #16
  402002:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402004:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402006:	dd29      	ble.n	40205c <_svfprintf_r+0x2c0>
  402008:	4643      	mov	r3, r8
  40200a:	4621      	mov	r1, r4
  40200c:	46a8      	mov	r8, r5
  40200e:	2710      	movs	r7, #16
  402010:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402012:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402014:	e006      	b.n	402024 <_svfprintf_r+0x288>
  402016:	f1ab 0b10 	sub.w	fp, fp, #16
  40201a:	f1bb 0f10 	cmp.w	fp, #16
  40201e:	f103 0308 	add.w	r3, r3, #8
  402022:	dd18      	ble.n	402056 <_svfprintf_r+0x2ba>
  402024:	3201      	adds	r2, #1
  402026:	48b7      	ldr	r0, [pc, #732]	; (402304 <_svfprintf_r+0x568>)
  402028:	9226      	str	r2, [sp, #152]	; 0x98
  40202a:	3110      	adds	r1, #16
  40202c:	2a07      	cmp	r2, #7
  40202e:	9127      	str	r1, [sp, #156]	; 0x9c
  402030:	e883 0081 	stmia.w	r3, {r0, r7}
  402034:	ddef      	ble.n	402016 <_svfprintf_r+0x27a>
  402036:	aa25      	add	r2, sp, #148	; 0x94
  402038:	4629      	mov	r1, r5
  40203a:	4620      	mov	r0, r4
  40203c:	f003 fae4 	bl	405608 <__ssprint_r>
  402040:	2800      	cmp	r0, #0
  402042:	f47f af7d 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402046:	f1ab 0b10 	sub.w	fp, fp, #16
  40204a:	f1bb 0f10 	cmp.w	fp, #16
  40204e:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402050:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402052:	464b      	mov	r3, r9
  402054:	dce6      	bgt.n	402024 <_svfprintf_r+0x288>
  402056:	4645      	mov	r5, r8
  402058:	460c      	mov	r4, r1
  40205a:	4698      	mov	r8, r3
  40205c:	3201      	adds	r2, #1
  40205e:	4ba9      	ldr	r3, [pc, #676]	; (402304 <_svfprintf_r+0x568>)
  402060:	9226      	str	r2, [sp, #152]	; 0x98
  402062:	445c      	add	r4, fp
  402064:	2a07      	cmp	r2, #7
  402066:	9427      	str	r4, [sp, #156]	; 0x9c
  402068:	e888 0808 	stmia.w	r8, {r3, fp}
  40206c:	f300 8498 	bgt.w	4029a0 <_svfprintf_r+0xc04>
  402070:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402074:	f108 0808 	add.w	r8, r8, #8
  402078:	b177      	cbz	r7, 402098 <_svfprintf_r+0x2fc>
  40207a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40207c:	3301      	adds	r3, #1
  40207e:	3401      	adds	r4, #1
  402080:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  402084:	2201      	movs	r2, #1
  402086:	2b07      	cmp	r3, #7
  402088:	9427      	str	r4, [sp, #156]	; 0x9c
  40208a:	9326      	str	r3, [sp, #152]	; 0x98
  40208c:	e888 0006 	stmia.w	r8, {r1, r2}
  402090:	f300 83db 	bgt.w	40284a <_svfprintf_r+0xaae>
  402094:	f108 0808 	add.w	r8, r8, #8
  402098:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40209a:	b16b      	cbz	r3, 4020b8 <_svfprintf_r+0x31c>
  40209c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40209e:	3301      	adds	r3, #1
  4020a0:	3402      	adds	r4, #2
  4020a2:	a91e      	add	r1, sp, #120	; 0x78
  4020a4:	2202      	movs	r2, #2
  4020a6:	2b07      	cmp	r3, #7
  4020a8:	9427      	str	r4, [sp, #156]	; 0x9c
  4020aa:	9326      	str	r3, [sp, #152]	; 0x98
  4020ac:	e888 0006 	stmia.w	r8, {r1, r2}
  4020b0:	f300 83d6 	bgt.w	402860 <_svfprintf_r+0xac4>
  4020b4:	f108 0808 	add.w	r8, r8, #8
  4020b8:	2d80      	cmp	r5, #128	; 0x80
  4020ba:	f000 8315 	beq.w	4026e8 <_svfprintf_r+0x94c>
  4020be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4020c0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4020c2:	1a9f      	subs	r7, r3, r2
  4020c4:	2f00      	cmp	r7, #0
  4020c6:	dd36      	ble.n	402136 <_svfprintf_r+0x39a>
  4020c8:	2f10      	cmp	r7, #16
  4020ca:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4020cc:	4d8e      	ldr	r5, [pc, #568]	; (402308 <_svfprintf_r+0x56c>)
  4020ce:	dd27      	ble.n	402120 <_svfprintf_r+0x384>
  4020d0:	4642      	mov	r2, r8
  4020d2:	4621      	mov	r1, r4
  4020d4:	46b0      	mov	r8, r6
  4020d6:	f04f 0b10 	mov.w	fp, #16
  4020da:	462e      	mov	r6, r5
  4020dc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4020de:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4020e0:	e004      	b.n	4020ec <_svfprintf_r+0x350>
  4020e2:	3f10      	subs	r7, #16
  4020e4:	2f10      	cmp	r7, #16
  4020e6:	f102 0208 	add.w	r2, r2, #8
  4020ea:	dd15      	ble.n	402118 <_svfprintf_r+0x37c>
  4020ec:	3301      	adds	r3, #1
  4020ee:	3110      	adds	r1, #16
  4020f0:	2b07      	cmp	r3, #7
  4020f2:	9127      	str	r1, [sp, #156]	; 0x9c
  4020f4:	9326      	str	r3, [sp, #152]	; 0x98
  4020f6:	e882 0840 	stmia.w	r2, {r6, fp}
  4020fa:	ddf2      	ble.n	4020e2 <_svfprintf_r+0x346>
  4020fc:	aa25      	add	r2, sp, #148	; 0x94
  4020fe:	4629      	mov	r1, r5
  402100:	4620      	mov	r0, r4
  402102:	f003 fa81 	bl	405608 <__ssprint_r>
  402106:	2800      	cmp	r0, #0
  402108:	f47f af1a 	bne.w	401f40 <_svfprintf_r+0x1a4>
  40210c:	3f10      	subs	r7, #16
  40210e:	2f10      	cmp	r7, #16
  402110:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402112:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402114:	464a      	mov	r2, r9
  402116:	dce9      	bgt.n	4020ec <_svfprintf_r+0x350>
  402118:	4635      	mov	r5, r6
  40211a:	460c      	mov	r4, r1
  40211c:	4646      	mov	r6, r8
  40211e:	4690      	mov	r8, r2
  402120:	3301      	adds	r3, #1
  402122:	443c      	add	r4, r7
  402124:	2b07      	cmp	r3, #7
  402126:	9427      	str	r4, [sp, #156]	; 0x9c
  402128:	9326      	str	r3, [sp, #152]	; 0x98
  40212a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40212e:	f300 8381 	bgt.w	402834 <_svfprintf_r+0xa98>
  402132:	f108 0808 	add.w	r8, r8, #8
  402136:	9b07      	ldr	r3, [sp, #28]
  402138:	05df      	lsls	r7, r3, #23
  40213a:	f100 8268 	bmi.w	40260e <_svfprintf_r+0x872>
  40213e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402140:	990e      	ldr	r1, [sp, #56]	; 0x38
  402142:	f8c8 6000 	str.w	r6, [r8]
  402146:	3301      	adds	r3, #1
  402148:	440c      	add	r4, r1
  40214a:	2b07      	cmp	r3, #7
  40214c:	9427      	str	r4, [sp, #156]	; 0x9c
  40214e:	f8c8 1004 	str.w	r1, [r8, #4]
  402152:	9326      	str	r3, [sp, #152]	; 0x98
  402154:	f300 834d 	bgt.w	4027f2 <_svfprintf_r+0xa56>
  402158:	f108 0808 	add.w	r8, r8, #8
  40215c:	9b07      	ldr	r3, [sp, #28]
  40215e:	075b      	lsls	r3, r3, #29
  402160:	d53a      	bpl.n	4021d8 <_svfprintf_r+0x43c>
  402162:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402164:	9a08      	ldr	r2, [sp, #32]
  402166:	1a9d      	subs	r5, r3, r2
  402168:	2d00      	cmp	r5, #0
  40216a:	dd35      	ble.n	4021d8 <_svfprintf_r+0x43c>
  40216c:	2d10      	cmp	r5, #16
  40216e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402170:	dd20      	ble.n	4021b4 <_svfprintf_r+0x418>
  402172:	2610      	movs	r6, #16
  402174:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  402176:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  40217a:	e004      	b.n	402186 <_svfprintf_r+0x3ea>
  40217c:	3d10      	subs	r5, #16
  40217e:	2d10      	cmp	r5, #16
  402180:	f108 0808 	add.w	r8, r8, #8
  402184:	dd16      	ble.n	4021b4 <_svfprintf_r+0x418>
  402186:	3301      	adds	r3, #1
  402188:	4a5e      	ldr	r2, [pc, #376]	; (402304 <_svfprintf_r+0x568>)
  40218a:	9326      	str	r3, [sp, #152]	; 0x98
  40218c:	3410      	adds	r4, #16
  40218e:	2b07      	cmp	r3, #7
  402190:	9427      	str	r4, [sp, #156]	; 0x9c
  402192:	e888 0044 	stmia.w	r8, {r2, r6}
  402196:	ddf1      	ble.n	40217c <_svfprintf_r+0x3e0>
  402198:	aa25      	add	r2, sp, #148	; 0x94
  40219a:	4659      	mov	r1, fp
  40219c:	4638      	mov	r0, r7
  40219e:	f003 fa33 	bl	405608 <__ssprint_r>
  4021a2:	2800      	cmp	r0, #0
  4021a4:	f47f aecc 	bne.w	401f40 <_svfprintf_r+0x1a4>
  4021a8:	3d10      	subs	r5, #16
  4021aa:	2d10      	cmp	r5, #16
  4021ac:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4021ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4021b0:	46c8      	mov	r8, r9
  4021b2:	dce8      	bgt.n	402186 <_svfprintf_r+0x3ea>
  4021b4:	3301      	adds	r3, #1
  4021b6:	4a53      	ldr	r2, [pc, #332]	; (402304 <_svfprintf_r+0x568>)
  4021b8:	9326      	str	r3, [sp, #152]	; 0x98
  4021ba:	442c      	add	r4, r5
  4021bc:	2b07      	cmp	r3, #7
  4021be:	9427      	str	r4, [sp, #156]	; 0x9c
  4021c0:	e888 0024 	stmia.w	r8, {r2, r5}
  4021c4:	dd08      	ble.n	4021d8 <_svfprintf_r+0x43c>
  4021c6:	aa25      	add	r2, sp, #148	; 0x94
  4021c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4021ca:	980c      	ldr	r0, [sp, #48]	; 0x30
  4021cc:	f003 fa1c 	bl	405608 <__ssprint_r>
  4021d0:	2800      	cmp	r0, #0
  4021d2:	f47f aeb5 	bne.w	401f40 <_svfprintf_r+0x1a4>
  4021d6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4021d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4021da:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4021dc:	9908      	ldr	r1, [sp, #32]
  4021de:	428a      	cmp	r2, r1
  4021e0:	bfac      	ite	ge
  4021e2:	189b      	addge	r3, r3, r2
  4021e4:	185b      	addlt	r3, r3, r1
  4021e6:	9309      	str	r3, [sp, #36]	; 0x24
  4021e8:	2c00      	cmp	r4, #0
  4021ea:	f040 830d 	bne.w	402808 <_svfprintf_r+0xa6c>
  4021ee:	2300      	movs	r3, #0
  4021f0:	9326      	str	r3, [sp, #152]	; 0x98
  4021f2:	46c8      	mov	r8, r9
  4021f4:	e5f9      	b.n	401dea <_svfprintf_r+0x4e>
  4021f6:	9311      	str	r3, [sp, #68]	; 0x44
  4021f8:	f01b 0320 	ands.w	r3, fp, #32
  4021fc:	f040 81e3 	bne.w	4025c6 <_svfprintf_r+0x82a>
  402200:	f01b 0210 	ands.w	r2, fp, #16
  402204:	f040 842e 	bne.w	402a64 <_svfprintf_r+0xcc8>
  402208:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  40220c:	f000 842a 	beq.w	402a64 <_svfprintf_r+0xcc8>
  402210:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402212:	4613      	mov	r3, r2
  402214:	460a      	mov	r2, r1
  402216:	3204      	adds	r2, #4
  402218:	880c      	ldrh	r4, [r1, #0]
  40221a:	920f      	str	r2, [sp, #60]	; 0x3c
  40221c:	2500      	movs	r5, #0
  40221e:	e6b0      	b.n	401f82 <_svfprintf_r+0x1e6>
  402220:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402222:	9311      	str	r3, [sp, #68]	; 0x44
  402224:	6816      	ldr	r6, [r2, #0]
  402226:	2400      	movs	r4, #0
  402228:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  40222c:	1d15      	adds	r5, r2, #4
  40222e:	2e00      	cmp	r6, #0
  402230:	f000 86a7 	beq.w	402f82 <_svfprintf_r+0x11e6>
  402234:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402236:	1c53      	adds	r3, r2, #1
  402238:	f000 8609 	beq.w	402e4e <_svfprintf_r+0x10b2>
  40223c:	4621      	mov	r1, r4
  40223e:	4630      	mov	r0, r6
  402240:	f002 fbd6 	bl	4049f0 <memchr>
  402244:	2800      	cmp	r0, #0
  402246:	f000 86e1 	beq.w	40300c <_svfprintf_r+0x1270>
  40224a:	1b83      	subs	r3, r0, r6
  40224c:	930e      	str	r3, [sp, #56]	; 0x38
  40224e:	940a      	str	r4, [sp, #40]	; 0x28
  402250:	950f      	str	r5, [sp, #60]	; 0x3c
  402252:	f8cd b01c 	str.w	fp, [sp, #28]
  402256:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40225a:	9308      	str	r3, [sp, #32]
  40225c:	9412      	str	r4, [sp, #72]	; 0x48
  40225e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402262:	e6b3      	b.n	401fcc <_svfprintf_r+0x230>
  402264:	f89a 3000 	ldrb.w	r3, [sl]
  402268:	2201      	movs	r2, #1
  40226a:	212b      	movs	r1, #43	; 0x2b
  40226c:	e5ee      	b.n	401e4c <_svfprintf_r+0xb0>
  40226e:	f04b 0b20 	orr.w	fp, fp, #32
  402272:	f89a 3000 	ldrb.w	r3, [sl]
  402276:	e5e9      	b.n	401e4c <_svfprintf_r+0xb0>
  402278:	9311      	str	r3, [sp, #68]	; 0x44
  40227a:	2a00      	cmp	r2, #0
  40227c:	f040 8795 	bne.w	4031aa <_svfprintf_r+0x140e>
  402280:	4b22      	ldr	r3, [pc, #136]	; (40230c <_svfprintf_r+0x570>)
  402282:	9318      	str	r3, [sp, #96]	; 0x60
  402284:	f01b 0f20 	tst.w	fp, #32
  402288:	f040 8111 	bne.w	4024ae <_svfprintf_r+0x712>
  40228c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40228e:	f01b 0f10 	tst.w	fp, #16
  402292:	4613      	mov	r3, r2
  402294:	f040 83e1 	bne.w	402a5a <_svfprintf_r+0xcbe>
  402298:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40229c:	f000 83dd 	beq.w	402a5a <_svfprintf_r+0xcbe>
  4022a0:	3304      	adds	r3, #4
  4022a2:	8814      	ldrh	r4, [r2, #0]
  4022a4:	930f      	str	r3, [sp, #60]	; 0x3c
  4022a6:	2500      	movs	r5, #0
  4022a8:	f01b 0f01 	tst.w	fp, #1
  4022ac:	f000 810c 	beq.w	4024c8 <_svfprintf_r+0x72c>
  4022b0:	ea54 0305 	orrs.w	r3, r4, r5
  4022b4:	f000 8108 	beq.w	4024c8 <_svfprintf_r+0x72c>
  4022b8:	2330      	movs	r3, #48	; 0x30
  4022ba:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  4022be:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  4022c2:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  4022c6:	f04b 0b02 	orr.w	fp, fp, #2
  4022ca:	2302      	movs	r3, #2
  4022cc:	e659      	b.n	401f82 <_svfprintf_r+0x1e6>
  4022ce:	f89a 3000 	ldrb.w	r3, [sl]
  4022d2:	2900      	cmp	r1, #0
  4022d4:	f47f adba 	bne.w	401e4c <_svfprintf_r+0xb0>
  4022d8:	2201      	movs	r2, #1
  4022da:	2120      	movs	r1, #32
  4022dc:	e5b6      	b.n	401e4c <_svfprintf_r+0xb0>
  4022de:	f04b 0b01 	orr.w	fp, fp, #1
  4022e2:	f89a 3000 	ldrb.w	r3, [sl]
  4022e6:	e5b1      	b.n	401e4c <_svfprintf_r+0xb0>
  4022e8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  4022ea:	6823      	ldr	r3, [r4, #0]
  4022ec:	930d      	str	r3, [sp, #52]	; 0x34
  4022ee:	4618      	mov	r0, r3
  4022f0:	2800      	cmp	r0, #0
  4022f2:	4623      	mov	r3, r4
  4022f4:	f103 0304 	add.w	r3, r3, #4
  4022f8:	f6ff ae0a 	blt.w	401f10 <_svfprintf_r+0x174>
  4022fc:	930f      	str	r3, [sp, #60]	; 0x3c
  4022fe:	f89a 3000 	ldrb.w	r3, [sl]
  402302:	e5a3      	b.n	401e4c <_svfprintf_r+0xb0>
  402304:	00406c58 	.word	0x00406c58
  402308:	00406c68 	.word	0x00406c68
  40230c:	00406c38 	.word	0x00406c38
  402310:	f04b 0b10 	orr.w	fp, fp, #16
  402314:	f01b 0f20 	tst.w	fp, #32
  402318:	9311      	str	r3, [sp, #68]	; 0x44
  40231a:	f43f ae23 	beq.w	401f64 <_svfprintf_r+0x1c8>
  40231e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402320:	3507      	adds	r5, #7
  402322:	f025 0307 	bic.w	r3, r5, #7
  402326:	f103 0208 	add.w	r2, r3, #8
  40232a:	e9d3 4500 	ldrd	r4, r5, [r3]
  40232e:	920f      	str	r2, [sp, #60]	; 0x3c
  402330:	2301      	movs	r3, #1
  402332:	e626      	b.n	401f82 <_svfprintf_r+0x1e6>
  402334:	f89a 3000 	ldrb.w	r3, [sl]
  402338:	2b2a      	cmp	r3, #42	; 0x2a
  40233a:	f10a 0401 	add.w	r4, sl, #1
  40233e:	f000 8727 	beq.w	403190 <_svfprintf_r+0x13f4>
  402342:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402346:	2809      	cmp	r0, #9
  402348:	46a2      	mov	sl, r4
  40234a:	f200 86ad 	bhi.w	4030a8 <_svfprintf_r+0x130c>
  40234e:	2300      	movs	r3, #0
  402350:	461c      	mov	r4, r3
  402352:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402356:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40235a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40235e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402362:	2809      	cmp	r0, #9
  402364:	d9f5      	bls.n	402352 <_svfprintf_r+0x5b6>
  402366:	940a      	str	r4, [sp, #40]	; 0x28
  402368:	e572      	b.n	401e50 <_svfprintf_r+0xb4>
  40236a:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  40236e:	f89a 3000 	ldrb.w	r3, [sl]
  402372:	e56b      	b.n	401e4c <_svfprintf_r+0xb0>
  402374:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402378:	f89a 3000 	ldrb.w	r3, [sl]
  40237c:	e566      	b.n	401e4c <_svfprintf_r+0xb0>
  40237e:	f89a 3000 	ldrb.w	r3, [sl]
  402382:	2b6c      	cmp	r3, #108	; 0x6c
  402384:	bf03      	ittte	eq
  402386:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  40238a:	f04b 0b20 	orreq.w	fp, fp, #32
  40238e:	f10a 0a01 	addeq.w	sl, sl, #1
  402392:	f04b 0b10 	orrne.w	fp, fp, #16
  402396:	e559      	b.n	401e4c <_svfprintf_r+0xb0>
  402398:	2a00      	cmp	r2, #0
  40239a:	f040 8711 	bne.w	4031c0 <_svfprintf_r+0x1424>
  40239e:	f01b 0f20 	tst.w	fp, #32
  4023a2:	f040 84f9 	bne.w	402d98 <_svfprintf_r+0xffc>
  4023a6:	f01b 0f10 	tst.w	fp, #16
  4023aa:	f040 84ac 	bne.w	402d06 <_svfprintf_r+0xf6a>
  4023ae:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4023b2:	f000 84a8 	beq.w	402d06 <_svfprintf_r+0xf6a>
  4023b6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4023b8:	6813      	ldr	r3, [r2, #0]
  4023ba:	3204      	adds	r2, #4
  4023bc:	920f      	str	r2, [sp, #60]	; 0x3c
  4023be:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  4023c2:	801a      	strh	r2, [r3, #0]
  4023c4:	e511      	b.n	401dea <_svfprintf_r+0x4e>
  4023c6:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4023c8:	4bb3      	ldr	r3, [pc, #716]	; (402698 <_svfprintf_r+0x8fc>)
  4023ca:	680c      	ldr	r4, [r1, #0]
  4023cc:	9318      	str	r3, [sp, #96]	; 0x60
  4023ce:	2230      	movs	r2, #48	; 0x30
  4023d0:	2378      	movs	r3, #120	; 0x78
  4023d2:	3104      	adds	r1, #4
  4023d4:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  4023d8:	9311      	str	r3, [sp, #68]	; 0x44
  4023da:	f04b 0b02 	orr.w	fp, fp, #2
  4023de:	910f      	str	r1, [sp, #60]	; 0x3c
  4023e0:	2500      	movs	r5, #0
  4023e2:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  4023e6:	2302      	movs	r3, #2
  4023e8:	e5cb      	b.n	401f82 <_svfprintf_r+0x1e6>
  4023ea:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4023ec:	9311      	str	r3, [sp, #68]	; 0x44
  4023ee:	680a      	ldr	r2, [r1, #0]
  4023f0:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4023f4:	2300      	movs	r3, #0
  4023f6:	460a      	mov	r2, r1
  4023f8:	461f      	mov	r7, r3
  4023fa:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4023fe:	3204      	adds	r2, #4
  402400:	2301      	movs	r3, #1
  402402:	9308      	str	r3, [sp, #32]
  402404:	f8cd b01c 	str.w	fp, [sp, #28]
  402408:	970a      	str	r7, [sp, #40]	; 0x28
  40240a:	9712      	str	r7, [sp, #72]	; 0x48
  40240c:	920f      	str	r2, [sp, #60]	; 0x3c
  40240e:	930e      	str	r3, [sp, #56]	; 0x38
  402410:	ae28      	add	r6, sp, #160	; 0xa0
  402412:	e5df      	b.n	401fd4 <_svfprintf_r+0x238>
  402414:	9311      	str	r3, [sp, #68]	; 0x44
  402416:	2a00      	cmp	r2, #0
  402418:	f040 86ea 	bne.w	4031f0 <_svfprintf_r+0x1454>
  40241c:	f01b 0f20 	tst.w	fp, #32
  402420:	d15d      	bne.n	4024de <_svfprintf_r+0x742>
  402422:	f01b 0f10 	tst.w	fp, #16
  402426:	f040 8308 	bne.w	402a3a <_svfprintf_r+0xc9e>
  40242a:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40242e:	f000 8304 	beq.w	402a3a <_svfprintf_r+0xc9e>
  402432:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402434:	f9b1 4000 	ldrsh.w	r4, [r1]
  402438:	3104      	adds	r1, #4
  40243a:	17e5      	asrs	r5, r4, #31
  40243c:	4622      	mov	r2, r4
  40243e:	462b      	mov	r3, r5
  402440:	910f      	str	r1, [sp, #60]	; 0x3c
  402442:	2a00      	cmp	r2, #0
  402444:	f173 0300 	sbcs.w	r3, r3, #0
  402448:	db58      	blt.n	4024fc <_svfprintf_r+0x760>
  40244a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40244c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402450:	1c4a      	adds	r2, r1, #1
  402452:	f04f 0301 	mov.w	r3, #1
  402456:	f47f ad9b 	bne.w	401f90 <_svfprintf_r+0x1f4>
  40245a:	ea54 0205 	orrs.w	r2, r4, r5
  40245e:	f000 81df 	beq.w	402820 <_svfprintf_r+0xa84>
  402462:	f8cd b01c 	str.w	fp, [sp, #28]
  402466:	2b01      	cmp	r3, #1
  402468:	f000 827b 	beq.w	402962 <_svfprintf_r+0xbc6>
  40246c:	2b02      	cmp	r3, #2
  40246e:	f040 8206 	bne.w	40287e <_svfprintf_r+0xae2>
  402472:	9818      	ldr	r0, [sp, #96]	; 0x60
  402474:	464e      	mov	r6, r9
  402476:	0923      	lsrs	r3, r4, #4
  402478:	f004 010f 	and.w	r1, r4, #15
  40247c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402480:	092a      	lsrs	r2, r5, #4
  402482:	461c      	mov	r4, r3
  402484:	4615      	mov	r5, r2
  402486:	5c43      	ldrb	r3, [r0, r1]
  402488:	f806 3d01 	strb.w	r3, [r6, #-1]!
  40248c:	ea54 0305 	orrs.w	r3, r4, r5
  402490:	d1f1      	bne.n	402476 <_svfprintf_r+0x6da>
  402492:	eba9 0306 	sub.w	r3, r9, r6
  402496:	930e      	str	r3, [sp, #56]	; 0x38
  402498:	e590      	b.n	401fbc <_svfprintf_r+0x220>
  40249a:	9311      	str	r3, [sp, #68]	; 0x44
  40249c:	2a00      	cmp	r2, #0
  40249e:	f040 86a3 	bne.w	4031e8 <_svfprintf_r+0x144c>
  4024a2:	4b7e      	ldr	r3, [pc, #504]	; (40269c <_svfprintf_r+0x900>)
  4024a4:	9318      	str	r3, [sp, #96]	; 0x60
  4024a6:	f01b 0f20 	tst.w	fp, #32
  4024aa:	f43f aeef 	beq.w	40228c <_svfprintf_r+0x4f0>
  4024ae:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4024b0:	3507      	adds	r5, #7
  4024b2:	f025 0307 	bic.w	r3, r5, #7
  4024b6:	f103 0208 	add.w	r2, r3, #8
  4024ba:	f01b 0f01 	tst.w	fp, #1
  4024be:	920f      	str	r2, [sp, #60]	; 0x3c
  4024c0:	e9d3 4500 	ldrd	r4, r5, [r3]
  4024c4:	f47f aef4 	bne.w	4022b0 <_svfprintf_r+0x514>
  4024c8:	2302      	movs	r3, #2
  4024ca:	e55a      	b.n	401f82 <_svfprintf_r+0x1e6>
  4024cc:	9311      	str	r3, [sp, #68]	; 0x44
  4024ce:	2a00      	cmp	r2, #0
  4024d0:	f040 8686 	bne.w	4031e0 <_svfprintf_r+0x1444>
  4024d4:	f04b 0b10 	orr.w	fp, fp, #16
  4024d8:	f01b 0f20 	tst.w	fp, #32
  4024dc:	d0a1      	beq.n	402422 <_svfprintf_r+0x686>
  4024de:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4024e0:	3507      	adds	r5, #7
  4024e2:	f025 0507 	bic.w	r5, r5, #7
  4024e6:	e9d5 2300 	ldrd	r2, r3, [r5]
  4024ea:	2a00      	cmp	r2, #0
  4024ec:	f105 0108 	add.w	r1, r5, #8
  4024f0:	461d      	mov	r5, r3
  4024f2:	f173 0300 	sbcs.w	r3, r3, #0
  4024f6:	910f      	str	r1, [sp, #60]	; 0x3c
  4024f8:	4614      	mov	r4, r2
  4024fa:	daa6      	bge.n	40244a <_svfprintf_r+0x6ae>
  4024fc:	272d      	movs	r7, #45	; 0x2d
  4024fe:	4264      	negs	r4, r4
  402500:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402504:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402508:	2301      	movs	r3, #1
  40250a:	e53d      	b.n	401f88 <_svfprintf_r+0x1ec>
  40250c:	9311      	str	r3, [sp, #68]	; 0x44
  40250e:	2a00      	cmp	r2, #0
  402510:	f040 8662 	bne.w	4031d8 <_svfprintf_r+0x143c>
  402514:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402516:	3507      	adds	r5, #7
  402518:	f025 0307 	bic.w	r3, r5, #7
  40251c:	f103 0208 	add.w	r2, r3, #8
  402520:	920f      	str	r2, [sp, #60]	; 0x3c
  402522:	681a      	ldr	r2, [r3, #0]
  402524:	9215      	str	r2, [sp, #84]	; 0x54
  402526:	685b      	ldr	r3, [r3, #4]
  402528:	9314      	str	r3, [sp, #80]	; 0x50
  40252a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40252c:	9d15      	ldr	r5, [sp, #84]	; 0x54
  40252e:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402532:	4628      	mov	r0, r5
  402534:	4621      	mov	r1, r4
  402536:	f04f 32ff 	mov.w	r2, #4294967295
  40253a:	4b59      	ldr	r3, [pc, #356]	; (4026a0 <_svfprintf_r+0x904>)
  40253c:	f003 fdd4 	bl	4060e8 <__aeabi_dcmpun>
  402540:	2800      	cmp	r0, #0
  402542:	f040 834a 	bne.w	402bda <_svfprintf_r+0xe3e>
  402546:	4628      	mov	r0, r5
  402548:	4621      	mov	r1, r4
  40254a:	f04f 32ff 	mov.w	r2, #4294967295
  40254e:	4b54      	ldr	r3, [pc, #336]	; (4026a0 <_svfprintf_r+0x904>)
  402550:	f003 fdac 	bl	4060ac <__aeabi_dcmple>
  402554:	2800      	cmp	r0, #0
  402556:	f040 8340 	bne.w	402bda <_svfprintf_r+0xe3e>
  40255a:	a815      	add	r0, sp, #84	; 0x54
  40255c:	c80d      	ldmia	r0, {r0, r2, r3}
  40255e:	9914      	ldr	r1, [sp, #80]	; 0x50
  402560:	f003 fd9a 	bl	406098 <__aeabi_dcmplt>
  402564:	2800      	cmp	r0, #0
  402566:	f040 8530 	bne.w	402fca <_svfprintf_r+0x122e>
  40256a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40256e:	4e4d      	ldr	r6, [pc, #308]	; (4026a4 <_svfprintf_r+0x908>)
  402570:	4b4d      	ldr	r3, [pc, #308]	; (4026a8 <_svfprintf_r+0x90c>)
  402572:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402576:	9007      	str	r0, [sp, #28]
  402578:	9811      	ldr	r0, [sp, #68]	; 0x44
  40257a:	2203      	movs	r2, #3
  40257c:	2100      	movs	r1, #0
  40257e:	9208      	str	r2, [sp, #32]
  402580:	910a      	str	r1, [sp, #40]	; 0x28
  402582:	2847      	cmp	r0, #71	; 0x47
  402584:	bfd8      	it	le
  402586:	461e      	movle	r6, r3
  402588:	920e      	str	r2, [sp, #56]	; 0x38
  40258a:	9112      	str	r1, [sp, #72]	; 0x48
  40258c:	e51e      	b.n	401fcc <_svfprintf_r+0x230>
  40258e:	f04b 0b08 	orr.w	fp, fp, #8
  402592:	f89a 3000 	ldrb.w	r3, [sl]
  402596:	e459      	b.n	401e4c <_svfprintf_r+0xb0>
  402598:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40259c:	2300      	movs	r3, #0
  40259e:	461c      	mov	r4, r3
  4025a0:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4025a4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4025a8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4025ac:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4025b0:	2809      	cmp	r0, #9
  4025b2:	d9f5      	bls.n	4025a0 <_svfprintf_r+0x804>
  4025b4:	940d      	str	r4, [sp, #52]	; 0x34
  4025b6:	e44b      	b.n	401e50 <_svfprintf_r+0xb4>
  4025b8:	f04b 0b10 	orr.w	fp, fp, #16
  4025bc:	9311      	str	r3, [sp, #68]	; 0x44
  4025be:	f01b 0320 	ands.w	r3, fp, #32
  4025c2:	f43f ae1d 	beq.w	402200 <_svfprintf_r+0x464>
  4025c6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4025c8:	3507      	adds	r5, #7
  4025ca:	f025 0307 	bic.w	r3, r5, #7
  4025ce:	f103 0208 	add.w	r2, r3, #8
  4025d2:	e9d3 4500 	ldrd	r4, r5, [r3]
  4025d6:	920f      	str	r2, [sp, #60]	; 0x3c
  4025d8:	2300      	movs	r3, #0
  4025da:	e4d2      	b.n	401f82 <_svfprintf_r+0x1e6>
  4025dc:	9311      	str	r3, [sp, #68]	; 0x44
  4025de:	2a00      	cmp	r2, #0
  4025e0:	f040 85e7 	bne.w	4031b2 <_svfprintf_r+0x1416>
  4025e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4025e6:	2a00      	cmp	r2, #0
  4025e8:	f43f aca3 	beq.w	401f32 <_svfprintf_r+0x196>
  4025ec:	2300      	movs	r3, #0
  4025ee:	2101      	movs	r1, #1
  4025f0:	461f      	mov	r7, r3
  4025f2:	9108      	str	r1, [sp, #32]
  4025f4:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4025f8:	f8cd b01c 	str.w	fp, [sp, #28]
  4025fc:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402600:	930a      	str	r3, [sp, #40]	; 0x28
  402602:	9312      	str	r3, [sp, #72]	; 0x48
  402604:	910e      	str	r1, [sp, #56]	; 0x38
  402606:	ae28      	add	r6, sp, #160	; 0xa0
  402608:	e4e4      	b.n	401fd4 <_svfprintf_r+0x238>
  40260a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40260c:	e534      	b.n	402078 <_svfprintf_r+0x2dc>
  40260e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402610:	2b65      	cmp	r3, #101	; 0x65
  402612:	f340 80a7 	ble.w	402764 <_svfprintf_r+0x9c8>
  402616:	a815      	add	r0, sp, #84	; 0x54
  402618:	c80d      	ldmia	r0, {r0, r2, r3}
  40261a:	9914      	ldr	r1, [sp, #80]	; 0x50
  40261c:	f003 fd32 	bl	406084 <__aeabi_dcmpeq>
  402620:	2800      	cmp	r0, #0
  402622:	f000 8150 	beq.w	4028c6 <_svfprintf_r+0xb2a>
  402626:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402628:	4a20      	ldr	r2, [pc, #128]	; (4026ac <_svfprintf_r+0x910>)
  40262a:	f8c8 2000 	str.w	r2, [r8]
  40262e:	3301      	adds	r3, #1
  402630:	3401      	adds	r4, #1
  402632:	2201      	movs	r2, #1
  402634:	2b07      	cmp	r3, #7
  402636:	9427      	str	r4, [sp, #156]	; 0x9c
  402638:	9326      	str	r3, [sp, #152]	; 0x98
  40263a:	f8c8 2004 	str.w	r2, [r8, #4]
  40263e:	f300 836a 	bgt.w	402d16 <_svfprintf_r+0xf7a>
  402642:	f108 0808 	add.w	r8, r8, #8
  402646:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402648:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40264a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40264c:	4293      	cmp	r3, r2
  40264e:	db03      	blt.n	402658 <_svfprintf_r+0x8bc>
  402650:	9b07      	ldr	r3, [sp, #28]
  402652:	07dd      	lsls	r5, r3, #31
  402654:	f57f ad82 	bpl.w	40215c <_svfprintf_r+0x3c0>
  402658:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40265a:	9919      	ldr	r1, [sp, #100]	; 0x64
  40265c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  40265e:	f8c8 2000 	str.w	r2, [r8]
  402662:	3301      	adds	r3, #1
  402664:	440c      	add	r4, r1
  402666:	2b07      	cmp	r3, #7
  402668:	f8c8 1004 	str.w	r1, [r8, #4]
  40266c:	9427      	str	r4, [sp, #156]	; 0x9c
  40266e:	9326      	str	r3, [sp, #152]	; 0x98
  402670:	f300 839e 	bgt.w	402db0 <_svfprintf_r+0x1014>
  402674:	f108 0808 	add.w	r8, r8, #8
  402678:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40267a:	1e5e      	subs	r6, r3, #1
  40267c:	2e00      	cmp	r6, #0
  40267e:	f77f ad6d 	ble.w	40215c <_svfprintf_r+0x3c0>
  402682:	2e10      	cmp	r6, #16
  402684:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402686:	4d0a      	ldr	r5, [pc, #40]	; (4026b0 <_svfprintf_r+0x914>)
  402688:	f340 81f5 	ble.w	402a76 <_svfprintf_r+0xcda>
  40268c:	4622      	mov	r2, r4
  40268e:	2710      	movs	r7, #16
  402690:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402694:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402696:	e013      	b.n	4026c0 <_svfprintf_r+0x924>
  402698:	00406c38 	.word	0x00406c38
  40269c:	00406c24 	.word	0x00406c24
  4026a0:	7fefffff 	.word	0x7fefffff
  4026a4:	00406c18 	.word	0x00406c18
  4026a8:	00406c14 	.word	0x00406c14
  4026ac:	00406c54 	.word	0x00406c54
  4026b0:	00406c68 	.word	0x00406c68
  4026b4:	f108 0808 	add.w	r8, r8, #8
  4026b8:	3e10      	subs	r6, #16
  4026ba:	2e10      	cmp	r6, #16
  4026bc:	f340 81da 	ble.w	402a74 <_svfprintf_r+0xcd8>
  4026c0:	3301      	adds	r3, #1
  4026c2:	3210      	adds	r2, #16
  4026c4:	2b07      	cmp	r3, #7
  4026c6:	9227      	str	r2, [sp, #156]	; 0x9c
  4026c8:	9326      	str	r3, [sp, #152]	; 0x98
  4026ca:	e888 00a0 	stmia.w	r8, {r5, r7}
  4026ce:	ddf1      	ble.n	4026b4 <_svfprintf_r+0x918>
  4026d0:	aa25      	add	r2, sp, #148	; 0x94
  4026d2:	4621      	mov	r1, r4
  4026d4:	4658      	mov	r0, fp
  4026d6:	f002 ff97 	bl	405608 <__ssprint_r>
  4026da:	2800      	cmp	r0, #0
  4026dc:	f47f ac30 	bne.w	401f40 <_svfprintf_r+0x1a4>
  4026e0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4026e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026e4:	46c8      	mov	r8, r9
  4026e6:	e7e7      	b.n	4026b8 <_svfprintf_r+0x91c>
  4026e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4026ea:	9a08      	ldr	r2, [sp, #32]
  4026ec:	1a9f      	subs	r7, r3, r2
  4026ee:	2f00      	cmp	r7, #0
  4026f0:	f77f ace5 	ble.w	4020be <_svfprintf_r+0x322>
  4026f4:	2f10      	cmp	r7, #16
  4026f6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026f8:	4db6      	ldr	r5, [pc, #728]	; (4029d4 <_svfprintf_r+0xc38>)
  4026fa:	dd27      	ble.n	40274c <_svfprintf_r+0x9b0>
  4026fc:	4642      	mov	r2, r8
  4026fe:	4621      	mov	r1, r4
  402700:	46b0      	mov	r8, r6
  402702:	f04f 0b10 	mov.w	fp, #16
  402706:	462e      	mov	r6, r5
  402708:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40270a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40270c:	e004      	b.n	402718 <_svfprintf_r+0x97c>
  40270e:	3f10      	subs	r7, #16
  402710:	2f10      	cmp	r7, #16
  402712:	f102 0208 	add.w	r2, r2, #8
  402716:	dd15      	ble.n	402744 <_svfprintf_r+0x9a8>
  402718:	3301      	adds	r3, #1
  40271a:	3110      	adds	r1, #16
  40271c:	2b07      	cmp	r3, #7
  40271e:	9127      	str	r1, [sp, #156]	; 0x9c
  402720:	9326      	str	r3, [sp, #152]	; 0x98
  402722:	e882 0840 	stmia.w	r2, {r6, fp}
  402726:	ddf2      	ble.n	40270e <_svfprintf_r+0x972>
  402728:	aa25      	add	r2, sp, #148	; 0x94
  40272a:	4629      	mov	r1, r5
  40272c:	4620      	mov	r0, r4
  40272e:	f002 ff6b 	bl	405608 <__ssprint_r>
  402732:	2800      	cmp	r0, #0
  402734:	f47f ac04 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402738:	3f10      	subs	r7, #16
  40273a:	2f10      	cmp	r7, #16
  40273c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40273e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402740:	464a      	mov	r2, r9
  402742:	dce9      	bgt.n	402718 <_svfprintf_r+0x97c>
  402744:	4635      	mov	r5, r6
  402746:	460c      	mov	r4, r1
  402748:	4646      	mov	r6, r8
  40274a:	4690      	mov	r8, r2
  40274c:	3301      	adds	r3, #1
  40274e:	443c      	add	r4, r7
  402750:	2b07      	cmp	r3, #7
  402752:	9427      	str	r4, [sp, #156]	; 0x9c
  402754:	9326      	str	r3, [sp, #152]	; 0x98
  402756:	e888 00a0 	stmia.w	r8, {r5, r7}
  40275a:	f300 8232 	bgt.w	402bc2 <_svfprintf_r+0xe26>
  40275e:	f108 0808 	add.w	r8, r8, #8
  402762:	e4ac      	b.n	4020be <_svfprintf_r+0x322>
  402764:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402766:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402768:	2b01      	cmp	r3, #1
  40276a:	f340 81fe 	ble.w	402b6a <_svfprintf_r+0xdce>
  40276e:	3701      	adds	r7, #1
  402770:	3401      	adds	r4, #1
  402772:	2301      	movs	r3, #1
  402774:	2f07      	cmp	r7, #7
  402776:	9427      	str	r4, [sp, #156]	; 0x9c
  402778:	9726      	str	r7, [sp, #152]	; 0x98
  40277a:	f8c8 6000 	str.w	r6, [r8]
  40277e:	f8c8 3004 	str.w	r3, [r8, #4]
  402782:	f300 8203 	bgt.w	402b8c <_svfprintf_r+0xdf0>
  402786:	f108 0808 	add.w	r8, r8, #8
  40278a:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40278c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  40278e:	f8c8 3000 	str.w	r3, [r8]
  402792:	3701      	adds	r7, #1
  402794:	4414      	add	r4, r2
  402796:	2f07      	cmp	r7, #7
  402798:	9427      	str	r4, [sp, #156]	; 0x9c
  40279a:	9726      	str	r7, [sp, #152]	; 0x98
  40279c:	f8c8 2004 	str.w	r2, [r8, #4]
  4027a0:	f300 8200 	bgt.w	402ba4 <_svfprintf_r+0xe08>
  4027a4:	f108 0808 	add.w	r8, r8, #8
  4027a8:	a815      	add	r0, sp, #84	; 0x54
  4027aa:	c80d      	ldmia	r0, {r0, r2, r3}
  4027ac:	9914      	ldr	r1, [sp, #80]	; 0x50
  4027ae:	f003 fc69 	bl	406084 <__aeabi_dcmpeq>
  4027b2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4027b4:	2800      	cmp	r0, #0
  4027b6:	f040 8101 	bne.w	4029bc <_svfprintf_r+0xc20>
  4027ba:	3b01      	subs	r3, #1
  4027bc:	3701      	adds	r7, #1
  4027be:	3601      	adds	r6, #1
  4027c0:	441c      	add	r4, r3
  4027c2:	2f07      	cmp	r7, #7
  4027c4:	9726      	str	r7, [sp, #152]	; 0x98
  4027c6:	9427      	str	r4, [sp, #156]	; 0x9c
  4027c8:	f8c8 6000 	str.w	r6, [r8]
  4027cc:	f8c8 3004 	str.w	r3, [r8, #4]
  4027d0:	f300 8127 	bgt.w	402a22 <_svfprintf_r+0xc86>
  4027d4:	f108 0808 	add.w	r8, r8, #8
  4027d8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  4027da:	f8c8 2004 	str.w	r2, [r8, #4]
  4027de:	3701      	adds	r7, #1
  4027e0:	4414      	add	r4, r2
  4027e2:	ab21      	add	r3, sp, #132	; 0x84
  4027e4:	2f07      	cmp	r7, #7
  4027e6:	9427      	str	r4, [sp, #156]	; 0x9c
  4027e8:	9726      	str	r7, [sp, #152]	; 0x98
  4027ea:	f8c8 3000 	str.w	r3, [r8]
  4027ee:	f77f acb3 	ble.w	402158 <_svfprintf_r+0x3bc>
  4027f2:	aa25      	add	r2, sp, #148	; 0x94
  4027f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4027f6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4027f8:	f002 ff06 	bl	405608 <__ssprint_r>
  4027fc:	2800      	cmp	r0, #0
  4027fe:	f47f ab9f 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402802:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402804:	46c8      	mov	r8, r9
  402806:	e4a9      	b.n	40215c <_svfprintf_r+0x3c0>
  402808:	aa25      	add	r2, sp, #148	; 0x94
  40280a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40280c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40280e:	f002 fefb 	bl	405608 <__ssprint_r>
  402812:	2800      	cmp	r0, #0
  402814:	f43f aceb 	beq.w	4021ee <_svfprintf_r+0x452>
  402818:	f7ff bb92 	b.w	401f40 <_svfprintf_r+0x1a4>
  40281c:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402820:	2b01      	cmp	r3, #1
  402822:	f000 8134 	beq.w	402a8e <_svfprintf_r+0xcf2>
  402826:	2b02      	cmp	r3, #2
  402828:	d125      	bne.n	402876 <_svfprintf_r+0xada>
  40282a:	f8cd b01c 	str.w	fp, [sp, #28]
  40282e:	2400      	movs	r4, #0
  402830:	2500      	movs	r5, #0
  402832:	e61e      	b.n	402472 <_svfprintf_r+0x6d6>
  402834:	aa25      	add	r2, sp, #148	; 0x94
  402836:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402838:	980c      	ldr	r0, [sp, #48]	; 0x30
  40283a:	f002 fee5 	bl	405608 <__ssprint_r>
  40283e:	2800      	cmp	r0, #0
  402840:	f47f ab7e 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402844:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402846:	46c8      	mov	r8, r9
  402848:	e475      	b.n	402136 <_svfprintf_r+0x39a>
  40284a:	aa25      	add	r2, sp, #148	; 0x94
  40284c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40284e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402850:	f002 feda 	bl	405608 <__ssprint_r>
  402854:	2800      	cmp	r0, #0
  402856:	f47f ab73 	bne.w	401f40 <_svfprintf_r+0x1a4>
  40285a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40285c:	46c8      	mov	r8, r9
  40285e:	e41b      	b.n	402098 <_svfprintf_r+0x2fc>
  402860:	aa25      	add	r2, sp, #148	; 0x94
  402862:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402864:	980c      	ldr	r0, [sp, #48]	; 0x30
  402866:	f002 fecf 	bl	405608 <__ssprint_r>
  40286a:	2800      	cmp	r0, #0
  40286c:	f47f ab68 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402870:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402872:	46c8      	mov	r8, r9
  402874:	e420      	b.n	4020b8 <_svfprintf_r+0x31c>
  402876:	f8cd b01c 	str.w	fp, [sp, #28]
  40287a:	2400      	movs	r4, #0
  40287c:	2500      	movs	r5, #0
  40287e:	4649      	mov	r1, r9
  402880:	e000      	b.n	402884 <_svfprintf_r+0xae8>
  402882:	4631      	mov	r1, r6
  402884:	08e2      	lsrs	r2, r4, #3
  402886:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  40288a:	08e8      	lsrs	r0, r5, #3
  40288c:	f004 0307 	and.w	r3, r4, #7
  402890:	4605      	mov	r5, r0
  402892:	4614      	mov	r4, r2
  402894:	3330      	adds	r3, #48	; 0x30
  402896:	ea54 0205 	orrs.w	r2, r4, r5
  40289a:	f801 3c01 	strb.w	r3, [r1, #-1]
  40289e:	f101 36ff 	add.w	r6, r1, #4294967295
  4028a2:	d1ee      	bne.n	402882 <_svfprintf_r+0xae6>
  4028a4:	9a07      	ldr	r2, [sp, #28]
  4028a6:	07d2      	lsls	r2, r2, #31
  4028a8:	f57f adf3 	bpl.w	402492 <_svfprintf_r+0x6f6>
  4028ac:	2b30      	cmp	r3, #48	; 0x30
  4028ae:	f43f adf0 	beq.w	402492 <_svfprintf_r+0x6f6>
  4028b2:	3902      	subs	r1, #2
  4028b4:	2330      	movs	r3, #48	; 0x30
  4028b6:	f806 3c01 	strb.w	r3, [r6, #-1]
  4028ba:	eba9 0301 	sub.w	r3, r9, r1
  4028be:	930e      	str	r3, [sp, #56]	; 0x38
  4028c0:	460e      	mov	r6, r1
  4028c2:	f7ff bb7b 	b.w	401fbc <_svfprintf_r+0x220>
  4028c6:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4028c8:	2900      	cmp	r1, #0
  4028ca:	f340 822e 	ble.w	402d2a <_svfprintf_r+0xf8e>
  4028ce:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4028d0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4028d2:	4293      	cmp	r3, r2
  4028d4:	bfa8      	it	ge
  4028d6:	4613      	movge	r3, r2
  4028d8:	2b00      	cmp	r3, #0
  4028da:	461f      	mov	r7, r3
  4028dc:	dd0d      	ble.n	4028fa <_svfprintf_r+0xb5e>
  4028de:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4028e0:	f8c8 6000 	str.w	r6, [r8]
  4028e4:	3301      	adds	r3, #1
  4028e6:	443c      	add	r4, r7
  4028e8:	2b07      	cmp	r3, #7
  4028ea:	9427      	str	r4, [sp, #156]	; 0x9c
  4028ec:	f8c8 7004 	str.w	r7, [r8, #4]
  4028f0:	9326      	str	r3, [sp, #152]	; 0x98
  4028f2:	f300 831f 	bgt.w	402f34 <_svfprintf_r+0x1198>
  4028f6:	f108 0808 	add.w	r8, r8, #8
  4028fa:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4028fc:	2f00      	cmp	r7, #0
  4028fe:	bfa8      	it	ge
  402900:	1bdb      	subge	r3, r3, r7
  402902:	2b00      	cmp	r3, #0
  402904:	461f      	mov	r7, r3
  402906:	f340 80d6 	ble.w	402ab6 <_svfprintf_r+0xd1a>
  40290a:	2f10      	cmp	r7, #16
  40290c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40290e:	4d31      	ldr	r5, [pc, #196]	; (4029d4 <_svfprintf_r+0xc38>)
  402910:	f340 81ed 	ble.w	402cee <_svfprintf_r+0xf52>
  402914:	4642      	mov	r2, r8
  402916:	4621      	mov	r1, r4
  402918:	46b0      	mov	r8, r6
  40291a:	f04f 0b10 	mov.w	fp, #16
  40291e:	462e      	mov	r6, r5
  402920:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402922:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402924:	e004      	b.n	402930 <_svfprintf_r+0xb94>
  402926:	3208      	adds	r2, #8
  402928:	3f10      	subs	r7, #16
  40292a:	2f10      	cmp	r7, #16
  40292c:	f340 81db 	ble.w	402ce6 <_svfprintf_r+0xf4a>
  402930:	3301      	adds	r3, #1
  402932:	3110      	adds	r1, #16
  402934:	2b07      	cmp	r3, #7
  402936:	9127      	str	r1, [sp, #156]	; 0x9c
  402938:	9326      	str	r3, [sp, #152]	; 0x98
  40293a:	e882 0840 	stmia.w	r2, {r6, fp}
  40293e:	ddf2      	ble.n	402926 <_svfprintf_r+0xb8a>
  402940:	aa25      	add	r2, sp, #148	; 0x94
  402942:	4629      	mov	r1, r5
  402944:	4620      	mov	r0, r4
  402946:	f002 fe5f 	bl	405608 <__ssprint_r>
  40294a:	2800      	cmp	r0, #0
  40294c:	f47f aaf8 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402950:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402952:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402954:	464a      	mov	r2, r9
  402956:	e7e7      	b.n	402928 <_svfprintf_r+0xb8c>
  402958:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40295a:	930e      	str	r3, [sp, #56]	; 0x38
  40295c:	464e      	mov	r6, r9
  40295e:	f7ff bb2d 	b.w	401fbc <_svfprintf_r+0x220>
  402962:	2d00      	cmp	r5, #0
  402964:	bf08      	it	eq
  402966:	2c0a      	cmpeq	r4, #10
  402968:	f0c0 808f 	bcc.w	402a8a <_svfprintf_r+0xcee>
  40296c:	464e      	mov	r6, r9
  40296e:	4620      	mov	r0, r4
  402970:	4629      	mov	r1, r5
  402972:	220a      	movs	r2, #10
  402974:	2300      	movs	r3, #0
  402976:	f003 fbf5 	bl	406164 <__aeabi_uldivmod>
  40297a:	3230      	adds	r2, #48	; 0x30
  40297c:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402980:	4620      	mov	r0, r4
  402982:	4629      	mov	r1, r5
  402984:	2300      	movs	r3, #0
  402986:	220a      	movs	r2, #10
  402988:	f003 fbec 	bl	406164 <__aeabi_uldivmod>
  40298c:	4604      	mov	r4, r0
  40298e:	460d      	mov	r5, r1
  402990:	ea54 0305 	orrs.w	r3, r4, r5
  402994:	d1eb      	bne.n	40296e <_svfprintf_r+0xbd2>
  402996:	eba9 0306 	sub.w	r3, r9, r6
  40299a:	930e      	str	r3, [sp, #56]	; 0x38
  40299c:	f7ff bb0e 	b.w	401fbc <_svfprintf_r+0x220>
  4029a0:	aa25      	add	r2, sp, #148	; 0x94
  4029a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4029a4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4029a6:	f002 fe2f 	bl	405608 <__ssprint_r>
  4029aa:	2800      	cmp	r0, #0
  4029ac:	f47f aac8 	bne.w	401f40 <_svfprintf_r+0x1a4>
  4029b0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4029b4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4029b6:	46c8      	mov	r8, r9
  4029b8:	f7ff bb5e 	b.w	402078 <_svfprintf_r+0x2dc>
  4029bc:	1e5e      	subs	r6, r3, #1
  4029be:	2e00      	cmp	r6, #0
  4029c0:	f77f af0a 	ble.w	4027d8 <_svfprintf_r+0xa3c>
  4029c4:	2e10      	cmp	r6, #16
  4029c6:	4d03      	ldr	r5, [pc, #12]	; (4029d4 <_svfprintf_r+0xc38>)
  4029c8:	dd22      	ble.n	402a10 <_svfprintf_r+0xc74>
  4029ca:	4622      	mov	r2, r4
  4029cc:	f04f 0b10 	mov.w	fp, #16
  4029d0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4029d2:	e006      	b.n	4029e2 <_svfprintf_r+0xc46>
  4029d4:	00406c68 	.word	0x00406c68
  4029d8:	3e10      	subs	r6, #16
  4029da:	2e10      	cmp	r6, #16
  4029dc:	f108 0808 	add.w	r8, r8, #8
  4029e0:	dd15      	ble.n	402a0e <_svfprintf_r+0xc72>
  4029e2:	3701      	adds	r7, #1
  4029e4:	3210      	adds	r2, #16
  4029e6:	2f07      	cmp	r7, #7
  4029e8:	9227      	str	r2, [sp, #156]	; 0x9c
  4029ea:	9726      	str	r7, [sp, #152]	; 0x98
  4029ec:	e888 0820 	stmia.w	r8, {r5, fp}
  4029f0:	ddf2      	ble.n	4029d8 <_svfprintf_r+0xc3c>
  4029f2:	aa25      	add	r2, sp, #148	; 0x94
  4029f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4029f6:	4620      	mov	r0, r4
  4029f8:	f002 fe06 	bl	405608 <__ssprint_r>
  4029fc:	2800      	cmp	r0, #0
  4029fe:	f47f aa9f 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402a02:	3e10      	subs	r6, #16
  402a04:	2e10      	cmp	r6, #16
  402a06:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402a08:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402a0a:	46c8      	mov	r8, r9
  402a0c:	dce9      	bgt.n	4029e2 <_svfprintf_r+0xc46>
  402a0e:	4614      	mov	r4, r2
  402a10:	3701      	adds	r7, #1
  402a12:	4434      	add	r4, r6
  402a14:	2f07      	cmp	r7, #7
  402a16:	9427      	str	r4, [sp, #156]	; 0x9c
  402a18:	9726      	str	r7, [sp, #152]	; 0x98
  402a1a:	e888 0060 	stmia.w	r8, {r5, r6}
  402a1e:	f77f aed9 	ble.w	4027d4 <_svfprintf_r+0xa38>
  402a22:	aa25      	add	r2, sp, #148	; 0x94
  402a24:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a26:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a28:	f002 fdee 	bl	405608 <__ssprint_r>
  402a2c:	2800      	cmp	r0, #0
  402a2e:	f47f aa87 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402a32:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a34:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402a36:	46c8      	mov	r8, r9
  402a38:	e6ce      	b.n	4027d8 <_svfprintf_r+0xa3c>
  402a3a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402a3c:	6814      	ldr	r4, [r2, #0]
  402a3e:	4613      	mov	r3, r2
  402a40:	3304      	adds	r3, #4
  402a42:	17e5      	asrs	r5, r4, #31
  402a44:	930f      	str	r3, [sp, #60]	; 0x3c
  402a46:	4622      	mov	r2, r4
  402a48:	462b      	mov	r3, r5
  402a4a:	e4fa      	b.n	402442 <_svfprintf_r+0x6a6>
  402a4c:	3204      	adds	r2, #4
  402a4e:	681c      	ldr	r4, [r3, #0]
  402a50:	920f      	str	r2, [sp, #60]	; 0x3c
  402a52:	2301      	movs	r3, #1
  402a54:	2500      	movs	r5, #0
  402a56:	f7ff ba94 	b.w	401f82 <_svfprintf_r+0x1e6>
  402a5a:	681c      	ldr	r4, [r3, #0]
  402a5c:	3304      	adds	r3, #4
  402a5e:	930f      	str	r3, [sp, #60]	; 0x3c
  402a60:	2500      	movs	r5, #0
  402a62:	e421      	b.n	4022a8 <_svfprintf_r+0x50c>
  402a64:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402a66:	460a      	mov	r2, r1
  402a68:	3204      	adds	r2, #4
  402a6a:	680c      	ldr	r4, [r1, #0]
  402a6c:	920f      	str	r2, [sp, #60]	; 0x3c
  402a6e:	2500      	movs	r5, #0
  402a70:	f7ff ba87 	b.w	401f82 <_svfprintf_r+0x1e6>
  402a74:	4614      	mov	r4, r2
  402a76:	3301      	adds	r3, #1
  402a78:	4434      	add	r4, r6
  402a7a:	2b07      	cmp	r3, #7
  402a7c:	9427      	str	r4, [sp, #156]	; 0x9c
  402a7e:	9326      	str	r3, [sp, #152]	; 0x98
  402a80:	e888 0060 	stmia.w	r8, {r5, r6}
  402a84:	f77f ab68 	ble.w	402158 <_svfprintf_r+0x3bc>
  402a88:	e6b3      	b.n	4027f2 <_svfprintf_r+0xa56>
  402a8a:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402a8e:	f8cd b01c 	str.w	fp, [sp, #28]
  402a92:	ae42      	add	r6, sp, #264	; 0x108
  402a94:	3430      	adds	r4, #48	; 0x30
  402a96:	2301      	movs	r3, #1
  402a98:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402a9c:	930e      	str	r3, [sp, #56]	; 0x38
  402a9e:	f7ff ba8d 	b.w	401fbc <_svfprintf_r+0x220>
  402aa2:	aa25      	add	r2, sp, #148	; 0x94
  402aa4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402aa6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402aa8:	f002 fdae 	bl	405608 <__ssprint_r>
  402aac:	2800      	cmp	r0, #0
  402aae:	f47f aa47 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402ab2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ab4:	46c8      	mov	r8, r9
  402ab6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402ab8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402aba:	429a      	cmp	r2, r3
  402abc:	db44      	blt.n	402b48 <_svfprintf_r+0xdac>
  402abe:	9b07      	ldr	r3, [sp, #28]
  402ac0:	07d9      	lsls	r1, r3, #31
  402ac2:	d441      	bmi.n	402b48 <_svfprintf_r+0xdac>
  402ac4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402ac6:	9812      	ldr	r0, [sp, #72]	; 0x48
  402ac8:	1a9a      	subs	r2, r3, r2
  402aca:	1a1d      	subs	r5, r3, r0
  402acc:	4295      	cmp	r5, r2
  402ace:	bfa8      	it	ge
  402ad0:	4615      	movge	r5, r2
  402ad2:	2d00      	cmp	r5, #0
  402ad4:	dd0e      	ble.n	402af4 <_svfprintf_r+0xd58>
  402ad6:	9926      	ldr	r1, [sp, #152]	; 0x98
  402ad8:	f8c8 5004 	str.w	r5, [r8, #4]
  402adc:	3101      	adds	r1, #1
  402ade:	4406      	add	r6, r0
  402ae0:	442c      	add	r4, r5
  402ae2:	2907      	cmp	r1, #7
  402ae4:	f8c8 6000 	str.w	r6, [r8]
  402ae8:	9427      	str	r4, [sp, #156]	; 0x9c
  402aea:	9126      	str	r1, [sp, #152]	; 0x98
  402aec:	f300 823b 	bgt.w	402f66 <_svfprintf_r+0x11ca>
  402af0:	f108 0808 	add.w	r8, r8, #8
  402af4:	2d00      	cmp	r5, #0
  402af6:	bfac      	ite	ge
  402af8:	1b56      	subge	r6, r2, r5
  402afa:	4616      	movlt	r6, r2
  402afc:	2e00      	cmp	r6, #0
  402afe:	f77f ab2d 	ble.w	40215c <_svfprintf_r+0x3c0>
  402b02:	2e10      	cmp	r6, #16
  402b04:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b06:	4db0      	ldr	r5, [pc, #704]	; (402dc8 <_svfprintf_r+0x102c>)
  402b08:	ddb5      	ble.n	402a76 <_svfprintf_r+0xcda>
  402b0a:	4622      	mov	r2, r4
  402b0c:	2710      	movs	r7, #16
  402b0e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402b12:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402b14:	e004      	b.n	402b20 <_svfprintf_r+0xd84>
  402b16:	f108 0808 	add.w	r8, r8, #8
  402b1a:	3e10      	subs	r6, #16
  402b1c:	2e10      	cmp	r6, #16
  402b1e:	dda9      	ble.n	402a74 <_svfprintf_r+0xcd8>
  402b20:	3301      	adds	r3, #1
  402b22:	3210      	adds	r2, #16
  402b24:	2b07      	cmp	r3, #7
  402b26:	9227      	str	r2, [sp, #156]	; 0x9c
  402b28:	9326      	str	r3, [sp, #152]	; 0x98
  402b2a:	e888 00a0 	stmia.w	r8, {r5, r7}
  402b2e:	ddf2      	ble.n	402b16 <_svfprintf_r+0xd7a>
  402b30:	aa25      	add	r2, sp, #148	; 0x94
  402b32:	4621      	mov	r1, r4
  402b34:	4658      	mov	r0, fp
  402b36:	f002 fd67 	bl	405608 <__ssprint_r>
  402b3a:	2800      	cmp	r0, #0
  402b3c:	f47f aa00 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402b40:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402b42:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b44:	46c8      	mov	r8, r9
  402b46:	e7e8      	b.n	402b1a <_svfprintf_r+0xd7e>
  402b48:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b4a:	9819      	ldr	r0, [sp, #100]	; 0x64
  402b4c:	991a      	ldr	r1, [sp, #104]	; 0x68
  402b4e:	f8c8 1000 	str.w	r1, [r8]
  402b52:	3301      	adds	r3, #1
  402b54:	4404      	add	r4, r0
  402b56:	2b07      	cmp	r3, #7
  402b58:	9427      	str	r4, [sp, #156]	; 0x9c
  402b5a:	f8c8 0004 	str.w	r0, [r8, #4]
  402b5e:	9326      	str	r3, [sp, #152]	; 0x98
  402b60:	f300 81f5 	bgt.w	402f4e <_svfprintf_r+0x11b2>
  402b64:	f108 0808 	add.w	r8, r8, #8
  402b68:	e7ac      	b.n	402ac4 <_svfprintf_r+0xd28>
  402b6a:	9b07      	ldr	r3, [sp, #28]
  402b6c:	07da      	lsls	r2, r3, #31
  402b6e:	f53f adfe 	bmi.w	40276e <_svfprintf_r+0x9d2>
  402b72:	3701      	adds	r7, #1
  402b74:	3401      	adds	r4, #1
  402b76:	2301      	movs	r3, #1
  402b78:	2f07      	cmp	r7, #7
  402b7a:	9427      	str	r4, [sp, #156]	; 0x9c
  402b7c:	9726      	str	r7, [sp, #152]	; 0x98
  402b7e:	f8c8 6000 	str.w	r6, [r8]
  402b82:	f8c8 3004 	str.w	r3, [r8, #4]
  402b86:	f77f ae25 	ble.w	4027d4 <_svfprintf_r+0xa38>
  402b8a:	e74a      	b.n	402a22 <_svfprintf_r+0xc86>
  402b8c:	aa25      	add	r2, sp, #148	; 0x94
  402b8e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b90:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b92:	f002 fd39 	bl	405608 <__ssprint_r>
  402b96:	2800      	cmp	r0, #0
  402b98:	f47f a9d2 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402b9c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b9e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402ba0:	46c8      	mov	r8, r9
  402ba2:	e5f2      	b.n	40278a <_svfprintf_r+0x9ee>
  402ba4:	aa25      	add	r2, sp, #148	; 0x94
  402ba6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ba8:	980c      	ldr	r0, [sp, #48]	; 0x30
  402baa:	f002 fd2d 	bl	405608 <__ssprint_r>
  402bae:	2800      	cmp	r0, #0
  402bb0:	f47f a9c6 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402bb4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402bb6:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402bb8:	46c8      	mov	r8, r9
  402bba:	e5f5      	b.n	4027a8 <_svfprintf_r+0xa0c>
  402bbc:	464e      	mov	r6, r9
  402bbe:	f7ff b9fd 	b.w	401fbc <_svfprintf_r+0x220>
  402bc2:	aa25      	add	r2, sp, #148	; 0x94
  402bc4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402bc6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bc8:	f002 fd1e 	bl	405608 <__ssprint_r>
  402bcc:	2800      	cmp	r0, #0
  402bce:	f47f a9b7 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402bd2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402bd4:	46c8      	mov	r8, r9
  402bd6:	f7ff ba72 	b.w	4020be <_svfprintf_r+0x322>
  402bda:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402bdc:	4622      	mov	r2, r4
  402bde:	4620      	mov	r0, r4
  402be0:	9c14      	ldr	r4, [sp, #80]	; 0x50
  402be2:	4623      	mov	r3, r4
  402be4:	4621      	mov	r1, r4
  402be6:	f003 fa7f 	bl	4060e8 <__aeabi_dcmpun>
  402bea:	2800      	cmp	r0, #0
  402bec:	f040 8286 	bne.w	4030fc <_svfprintf_r+0x1360>
  402bf0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402bf2:	3301      	adds	r3, #1
  402bf4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402bf6:	f023 0320 	bic.w	r3, r3, #32
  402bfa:	930e      	str	r3, [sp, #56]	; 0x38
  402bfc:	f000 81e2 	beq.w	402fc4 <_svfprintf_r+0x1228>
  402c00:	2b47      	cmp	r3, #71	; 0x47
  402c02:	f000 811e 	beq.w	402e42 <_svfprintf_r+0x10a6>
  402c06:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  402c0a:	9307      	str	r3, [sp, #28]
  402c0c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402c0e:	1e1f      	subs	r7, r3, #0
  402c10:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402c12:	9308      	str	r3, [sp, #32]
  402c14:	bfbb      	ittet	lt
  402c16:	463b      	movlt	r3, r7
  402c18:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  402c1c:	2300      	movge	r3, #0
  402c1e:	232d      	movlt	r3, #45	; 0x2d
  402c20:	9310      	str	r3, [sp, #64]	; 0x40
  402c22:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c24:	2b66      	cmp	r3, #102	; 0x66
  402c26:	f000 81bb 	beq.w	402fa0 <_svfprintf_r+0x1204>
  402c2a:	2b46      	cmp	r3, #70	; 0x46
  402c2c:	f000 80df 	beq.w	402dee <_svfprintf_r+0x1052>
  402c30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402c32:	9a08      	ldr	r2, [sp, #32]
  402c34:	2b45      	cmp	r3, #69	; 0x45
  402c36:	bf0c      	ite	eq
  402c38:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402c3a:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402c3c:	a823      	add	r0, sp, #140	; 0x8c
  402c3e:	a920      	add	r1, sp, #128	; 0x80
  402c40:	bf08      	it	eq
  402c42:	1c5d      	addeq	r5, r3, #1
  402c44:	9004      	str	r0, [sp, #16]
  402c46:	9103      	str	r1, [sp, #12]
  402c48:	a81f      	add	r0, sp, #124	; 0x7c
  402c4a:	2102      	movs	r1, #2
  402c4c:	463b      	mov	r3, r7
  402c4e:	9002      	str	r0, [sp, #8]
  402c50:	9501      	str	r5, [sp, #4]
  402c52:	9100      	str	r1, [sp, #0]
  402c54:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c56:	f000 fb73 	bl	403340 <_dtoa_r>
  402c5a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c5c:	2b67      	cmp	r3, #103	; 0x67
  402c5e:	4606      	mov	r6, r0
  402c60:	f040 81e0 	bne.w	403024 <_svfprintf_r+0x1288>
  402c64:	f01b 0f01 	tst.w	fp, #1
  402c68:	f000 8246 	beq.w	4030f8 <_svfprintf_r+0x135c>
  402c6c:	1974      	adds	r4, r6, r5
  402c6e:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402c70:	9808      	ldr	r0, [sp, #32]
  402c72:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402c74:	4639      	mov	r1, r7
  402c76:	f003 fa05 	bl	406084 <__aeabi_dcmpeq>
  402c7a:	2800      	cmp	r0, #0
  402c7c:	f040 8165 	bne.w	402f4a <_svfprintf_r+0x11ae>
  402c80:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402c82:	42a3      	cmp	r3, r4
  402c84:	d206      	bcs.n	402c94 <_svfprintf_r+0xef8>
  402c86:	2130      	movs	r1, #48	; 0x30
  402c88:	1c5a      	adds	r2, r3, #1
  402c8a:	9223      	str	r2, [sp, #140]	; 0x8c
  402c8c:	7019      	strb	r1, [r3, #0]
  402c8e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402c90:	429c      	cmp	r4, r3
  402c92:	d8f9      	bhi.n	402c88 <_svfprintf_r+0xeec>
  402c94:	1b9b      	subs	r3, r3, r6
  402c96:	9313      	str	r3, [sp, #76]	; 0x4c
  402c98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402c9a:	2b47      	cmp	r3, #71	; 0x47
  402c9c:	f000 80e9 	beq.w	402e72 <_svfprintf_r+0x10d6>
  402ca0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402ca2:	2b65      	cmp	r3, #101	; 0x65
  402ca4:	f340 81cd 	ble.w	403042 <_svfprintf_r+0x12a6>
  402ca8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402caa:	2b66      	cmp	r3, #102	; 0x66
  402cac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402cae:	9312      	str	r3, [sp, #72]	; 0x48
  402cb0:	f000 819e 	beq.w	402ff0 <_svfprintf_r+0x1254>
  402cb4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402cb6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402cb8:	4619      	mov	r1, r3
  402cba:	4291      	cmp	r1, r2
  402cbc:	f300 818a 	bgt.w	402fd4 <_svfprintf_r+0x1238>
  402cc0:	f01b 0f01 	tst.w	fp, #1
  402cc4:	f040 8213 	bne.w	4030ee <_svfprintf_r+0x1352>
  402cc8:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402ccc:	9308      	str	r3, [sp, #32]
  402cce:	2367      	movs	r3, #103	; 0x67
  402cd0:	920e      	str	r2, [sp, #56]	; 0x38
  402cd2:	9311      	str	r3, [sp, #68]	; 0x44
  402cd4:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402cd6:	2b00      	cmp	r3, #0
  402cd8:	f040 80c4 	bne.w	402e64 <_svfprintf_r+0x10c8>
  402cdc:	930a      	str	r3, [sp, #40]	; 0x28
  402cde:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402ce2:	f7ff b973 	b.w	401fcc <_svfprintf_r+0x230>
  402ce6:	4635      	mov	r5, r6
  402ce8:	460c      	mov	r4, r1
  402cea:	4646      	mov	r6, r8
  402cec:	4690      	mov	r8, r2
  402cee:	3301      	adds	r3, #1
  402cf0:	443c      	add	r4, r7
  402cf2:	2b07      	cmp	r3, #7
  402cf4:	9427      	str	r4, [sp, #156]	; 0x9c
  402cf6:	9326      	str	r3, [sp, #152]	; 0x98
  402cf8:	e888 00a0 	stmia.w	r8, {r5, r7}
  402cfc:	f73f aed1 	bgt.w	402aa2 <_svfprintf_r+0xd06>
  402d00:	f108 0808 	add.w	r8, r8, #8
  402d04:	e6d7      	b.n	402ab6 <_svfprintf_r+0xd1a>
  402d06:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402d08:	6813      	ldr	r3, [r2, #0]
  402d0a:	3204      	adds	r2, #4
  402d0c:	920f      	str	r2, [sp, #60]	; 0x3c
  402d0e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402d10:	601a      	str	r2, [r3, #0]
  402d12:	f7ff b86a 	b.w	401dea <_svfprintf_r+0x4e>
  402d16:	aa25      	add	r2, sp, #148	; 0x94
  402d18:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d1a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d1c:	f002 fc74 	bl	405608 <__ssprint_r>
  402d20:	2800      	cmp	r0, #0
  402d22:	f47f a90d 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402d26:	46c8      	mov	r8, r9
  402d28:	e48d      	b.n	402646 <_svfprintf_r+0x8aa>
  402d2a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d2c:	4a27      	ldr	r2, [pc, #156]	; (402dcc <_svfprintf_r+0x1030>)
  402d2e:	f8c8 2000 	str.w	r2, [r8]
  402d32:	3301      	adds	r3, #1
  402d34:	3401      	adds	r4, #1
  402d36:	2201      	movs	r2, #1
  402d38:	2b07      	cmp	r3, #7
  402d3a:	9427      	str	r4, [sp, #156]	; 0x9c
  402d3c:	9326      	str	r3, [sp, #152]	; 0x98
  402d3e:	f8c8 2004 	str.w	r2, [r8, #4]
  402d42:	dc72      	bgt.n	402e2a <_svfprintf_r+0x108e>
  402d44:	f108 0808 	add.w	r8, r8, #8
  402d48:	b929      	cbnz	r1, 402d56 <_svfprintf_r+0xfba>
  402d4a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402d4c:	b91b      	cbnz	r3, 402d56 <_svfprintf_r+0xfba>
  402d4e:	9b07      	ldr	r3, [sp, #28]
  402d50:	07d8      	lsls	r0, r3, #31
  402d52:	f57f aa03 	bpl.w	40215c <_svfprintf_r+0x3c0>
  402d56:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d58:	9819      	ldr	r0, [sp, #100]	; 0x64
  402d5a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402d5c:	f8c8 2000 	str.w	r2, [r8]
  402d60:	3301      	adds	r3, #1
  402d62:	4602      	mov	r2, r0
  402d64:	4422      	add	r2, r4
  402d66:	2b07      	cmp	r3, #7
  402d68:	9227      	str	r2, [sp, #156]	; 0x9c
  402d6a:	f8c8 0004 	str.w	r0, [r8, #4]
  402d6e:	9326      	str	r3, [sp, #152]	; 0x98
  402d70:	f300 818d 	bgt.w	40308e <_svfprintf_r+0x12f2>
  402d74:	f108 0808 	add.w	r8, r8, #8
  402d78:	2900      	cmp	r1, #0
  402d7a:	f2c0 8165 	blt.w	403048 <_svfprintf_r+0x12ac>
  402d7e:	9913      	ldr	r1, [sp, #76]	; 0x4c
  402d80:	f8c8 6000 	str.w	r6, [r8]
  402d84:	3301      	adds	r3, #1
  402d86:	188c      	adds	r4, r1, r2
  402d88:	2b07      	cmp	r3, #7
  402d8a:	9427      	str	r4, [sp, #156]	; 0x9c
  402d8c:	9326      	str	r3, [sp, #152]	; 0x98
  402d8e:	f8c8 1004 	str.w	r1, [r8, #4]
  402d92:	f77f a9e1 	ble.w	402158 <_svfprintf_r+0x3bc>
  402d96:	e52c      	b.n	4027f2 <_svfprintf_r+0xa56>
  402d98:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402d9a:	9909      	ldr	r1, [sp, #36]	; 0x24
  402d9c:	6813      	ldr	r3, [r2, #0]
  402d9e:	17cd      	asrs	r5, r1, #31
  402da0:	4608      	mov	r0, r1
  402da2:	3204      	adds	r2, #4
  402da4:	4629      	mov	r1, r5
  402da6:	920f      	str	r2, [sp, #60]	; 0x3c
  402da8:	e9c3 0100 	strd	r0, r1, [r3]
  402dac:	f7ff b81d 	b.w	401dea <_svfprintf_r+0x4e>
  402db0:	aa25      	add	r2, sp, #148	; 0x94
  402db2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402db4:	980c      	ldr	r0, [sp, #48]	; 0x30
  402db6:	f002 fc27 	bl	405608 <__ssprint_r>
  402dba:	2800      	cmp	r0, #0
  402dbc:	f47f a8c0 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402dc0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402dc2:	46c8      	mov	r8, r9
  402dc4:	e458      	b.n	402678 <_svfprintf_r+0x8dc>
  402dc6:	bf00      	nop
  402dc8:	00406c68 	.word	0x00406c68
  402dcc:	00406c54 	.word	0x00406c54
  402dd0:	2140      	movs	r1, #64	; 0x40
  402dd2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402dd4:	f001 fb40 	bl	404458 <_malloc_r>
  402dd8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402dda:	6010      	str	r0, [r2, #0]
  402ddc:	6110      	str	r0, [r2, #16]
  402dde:	2800      	cmp	r0, #0
  402de0:	f000 81f2 	beq.w	4031c8 <_svfprintf_r+0x142c>
  402de4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402de6:	2340      	movs	r3, #64	; 0x40
  402de8:	6153      	str	r3, [r2, #20]
  402dea:	f7fe bfee 	b.w	401dca <_svfprintf_r+0x2e>
  402dee:	a823      	add	r0, sp, #140	; 0x8c
  402df0:	a920      	add	r1, sp, #128	; 0x80
  402df2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402df4:	9004      	str	r0, [sp, #16]
  402df6:	9103      	str	r1, [sp, #12]
  402df8:	a81f      	add	r0, sp, #124	; 0x7c
  402dfa:	2103      	movs	r1, #3
  402dfc:	9002      	str	r0, [sp, #8]
  402dfe:	9a08      	ldr	r2, [sp, #32]
  402e00:	9401      	str	r4, [sp, #4]
  402e02:	463b      	mov	r3, r7
  402e04:	9100      	str	r1, [sp, #0]
  402e06:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e08:	f000 fa9a 	bl	403340 <_dtoa_r>
  402e0c:	4625      	mov	r5, r4
  402e0e:	4606      	mov	r6, r0
  402e10:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402e12:	2b46      	cmp	r3, #70	; 0x46
  402e14:	eb06 0405 	add.w	r4, r6, r5
  402e18:	f47f af29 	bne.w	402c6e <_svfprintf_r+0xed2>
  402e1c:	7833      	ldrb	r3, [r6, #0]
  402e1e:	2b30      	cmp	r3, #48	; 0x30
  402e20:	f000 8178 	beq.w	403114 <_svfprintf_r+0x1378>
  402e24:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  402e26:	442c      	add	r4, r5
  402e28:	e721      	b.n	402c6e <_svfprintf_r+0xed2>
  402e2a:	aa25      	add	r2, sp, #148	; 0x94
  402e2c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e2e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e30:	f002 fbea 	bl	405608 <__ssprint_r>
  402e34:	2800      	cmp	r0, #0
  402e36:	f47f a883 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402e3a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402e3c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e3e:	46c8      	mov	r8, r9
  402e40:	e782      	b.n	402d48 <_svfprintf_r+0xfac>
  402e42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402e44:	2b00      	cmp	r3, #0
  402e46:	bf08      	it	eq
  402e48:	2301      	moveq	r3, #1
  402e4a:	930a      	str	r3, [sp, #40]	; 0x28
  402e4c:	e6db      	b.n	402c06 <_svfprintf_r+0xe6a>
  402e4e:	4630      	mov	r0, r6
  402e50:	940a      	str	r4, [sp, #40]	; 0x28
  402e52:	f7fe ff35 	bl	401cc0 <strlen>
  402e56:	950f      	str	r5, [sp, #60]	; 0x3c
  402e58:	900e      	str	r0, [sp, #56]	; 0x38
  402e5a:	f8cd b01c 	str.w	fp, [sp, #28]
  402e5e:	4603      	mov	r3, r0
  402e60:	f7ff b9f9 	b.w	402256 <_svfprintf_r+0x4ba>
  402e64:	272d      	movs	r7, #45	; 0x2d
  402e66:	2300      	movs	r3, #0
  402e68:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402e6c:	930a      	str	r3, [sp, #40]	; 0x28
  402e6e:	f7ff b8ae 	b.w	401fce <_svfprintf_r+0x232>
  402e72:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402e74:	9312      	str	r3, [sp, #72]	; 0x48
  402e76:	461a      	mov	r2, r3
  402e78:	3303      	adds	r3, #3
  402e7a:	db04      	blt.n	402e86 <_svfprintf_r+0x10ea>
  402e7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402e7e:	4619      	mov	r1, r3
  402e80:	4291      	cmp	r1, r2
  402e82:	f6bf af17 	bge.w	402cb4 <_svfprintf_r+0xf18>
  402e86:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402e88:	3b02      	subs	r3, #2
  402e8a:	9311      	str	r3, [sp, #68]	; 0x44
  402e8c:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  402e90:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  402e94:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402e96:	3b01      	subs	r3, #1
  402e98:	2b00      	cmp	r3, #0
  402e9a:	931f      	str	r3, [sp, #124]	; 0x7c
  402e9c:	bfbd      	ittte	lt
  402e9e:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  402ea0:	f1c3 0301 	rsblt	r3, r3, #1
  402ea4:	222d      	movlt	r2, #45	; 0x2d
  402ea6:	222b      	movge	r2, #43	; 0x2b
  402ea8:	2b09      	cmp	r3, #9
  402eaa:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  402eae:	f340 8116 	ble.w	4030de <_svfprintf_r+0x1342>
  402eb2:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  402eb6:	4620      	mov	r0, r4
  402eb8:	4dab      	ldr	r5, [pc, #684]	; (403168 <_svfprintf_r+0x13cc>)
  402eba:	e000      	b.n	402ebe <_svfprintf_r+0x1122>
  402ebc:	4610      	mov	r0, r2
  402ebe:	fb85 1203 	smull	r1, r2, r5, r3
  402ec2:	17d9      	asrs	r1, r3, #31
  402ec4:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  402ec8:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  402ecc:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  402ed0:	3230      	adds	r2, #48	; 0x30
  402ed2:	2909      	cmp	r1, #9
  402ed4:	f800 2c01 	strb.w	r2, [r0, #-1]
  402ed8:	460b      	mov	r3, r1
  402eda:	f100 32ff 	add.w	r2, r0, #4294967295
  402ede:	dced      	bgt.n	402ebc <_svfprintf_r+0x1120>
  402ee0:	3330      	adds	r3, #48	; 0x30
  402ee2:	3802      	subs	r0, #2
  402ee4:	b2d9      	uxtb	r1, r3
  402ee6:	4284      	cmp	r4, r0
  402ee8:	f802 1c01 	strb.w	r1, [r2, #-1]
  402eec:	f240 8165 	bls.w	4031ba <_svfprintf_r+0x141e>
  402ef0:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  402ef4:	4613      	mov	r3, r2
  402ef6:	e001      	b.n	402efc <_svfprintf_r+0x1160>
  402ef8:	f813 1b01 	ldrb.w	r1, [r3], #1
  402efc:	f800 1b01 	strb.w	r1, [r0], #1
  402f00:	42a3      	cmp	r3, r4
  402f02:	d1f9      	bne.n	402ef8 <_svfprintf_r+0x115c>
  402f04:	3301      	adds	r3, #1
  402f06:	1a9b      	subs	r3, r3, r2
  402f08:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  402f0c:	4413      	add	r3, r2
  402f0e:	aa21      	add	r2, sp, #132	; 0x84
  402f10:	1a9b      	subs	r3, r3, r2
  402f12:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402f14:	931b      	str	r3, [sp, #108]	; 0x6c
  402f16:	2a01      	cmp	r2, #1
  402f18:	4413      	add	r3, r2
  402f1a:	930e      	str	r3, [sp, #56]	; 0x38
  402f1c:	f340 8119 	ble.w	403152 <_svfprintf_r+0x13b6>
  402f20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402f22:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402f24:	4413      	add	r3, r2
  402f26:	930e      	str	r3, [sp, #56]	; 0x38
  402f28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402f2c:	9308      	str	r3, [sp, #32]
  402f2e:	2300      	movs	r3, #0
  402f30:	9312      	str	r3, [sp, #72]	; 0x48
  402f32:	e6cf      	b.n	402cd4 <_svfprintf_r+0xf38>
  402f34:	aa25      	add	r2, sp, #148	; 0x94
  402f36:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f38:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f3a:	f002 fb65 	bl	405608 <__ssprint_r>
  402f3e:	2800      	cmp	r0, #0
  402f40:	f47e affe 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402f44:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f46:	46c8      	mov	r8, r9
  402f48:	e4d7      	b.n	4028fa <_svfprintf_r+0xb5e>
  402f4a:	4623      	mov	r3, r4
  402f4c:	e6a2      	b.n	402c94 <_svfprintf_r+0xef8>
  402f4e:	aa25      	add	r2, sp, #148	; 0x94
  402f50:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f52:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f54:	f002 fb58 	bl	405608 <__ssprint_r>
  402f58:	2800      	cmp	r0, #0
  402f5a:	f47e aff1 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402f5e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402f60:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f62:	46c8      	mov	r8, r9
  402f64:	e5ae      	b.n	402ac4 <_svfprintf_r+0xd28>
  402f66:	aa25      	add	r2, sp, #148	; 0x94
  402f68:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f6a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f6c:	f002 fb4c 	bl	405608 <__ssprint_r>
  402f70:	2800      	cmp	r0, #0
  402f72:	f47e afe5 	bne.w	401f40 <_svfprintf_r+0x1a4>
  402f76:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402f78:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402f7a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f7c:	1a9a      	subs	r2, r3, r2
  402f7e:	46c8      	mov	r8, r9
  402f80:	e5b8      	b.n	402af4 <_svfprintf_r+0xd58>
  402f82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402f84:	9612      	str	r6, [sp, #72]	; 0x48
  402f86:	2b06      	cmp	r3, #6
  402f88:	bf28      	it	cs
  402f8a:	2306      	movcs	r3, #6
  402f8c:	960a      	str	r6, [sp, #40]	; 0x28
  402f8e:	4637      	mov	r7, r6
  402f90:	9308      	str	r3, [sp, #32]
  402f92:	950f      	str	r5, [sp, #60]	; 0x3c
  402f94:	f8cd b01c 	str.w	fp, [sp, #28]
  402f98:	930e      	str	r3, [sp, #56]	; 0x38
  402f9a:	4e74      	ldr	r6, [pc, #464]	; (40316c <_svfprintf_r+0x13d0>)
  402f9c:	f7ff b816 	b.w	401fcc <_svfprintf_r+0x230>
  402fa0:	a823      	add	r0, sp, #140	; 0x8c
  402fa2:	a920      	add	r1, sp, #128	; 0x80
  402fa4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402fa6:	9004      	str	r0, [sp, #16]
  402fa8:	9103      	str	r1, [sp, #12]
  402faa:	a81f      	add	r0, sp, #124	; 0x7c
  402fac:	2103      	movs	r1, #3
  402fae:	9002      	str	r0, [sp, #8]
  402fb0:	9a08      	ldr	r2, [sp, #32]
  402fb2:	9501      	str	r5, [sp, #4]
  402fb4:	463b      	mov	r3, r7
  402fb6:	9100      	str	r1, [sp, #0]
  402fb8:	980c      	ldr	r0, [sp, #48]	; 0x30
  402fba:	f000 f9c1 	bl	403340 <_dtoa_r>
  402fbe:	4606      	mov	r6, r0
  402fc0:	1944      	adds	r4, r0, r5
  402fc2:	e72b      	b.n	402e1c <_svfprintf_r+0x1080>
  402fc4:	2306      	movs	r3, #6
  402fc6:	930a      	str	r3, [sp, #40]	; 0x28
  402fc8:	e61d      	b.n	402c06 <_svfprintf_r+0xe6a>
  402fca:	272d      	movs	r7, #45	; 0x2d
  402fcc:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402fd0:	f7ff bacd 	b.w	40256e <_svfprintf_r+0x7d2>
  402fd4:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402fd6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402fd8:	4413      	add	r3, r2
  402fda:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402fdc:	930e      	str	r3, [sp, #56]	; 0x38
  402fde:	2a00      	cmp	r2, #0
  402fe0:	f340 80b0 	ble.w	403144 <_svfprintf_r+0x13a8>
  402fe4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402fe8:	9308      	str	r3, [sp, #32]
  402fea:	2367      	movs	r3, #103	; 0x67
  402fec:	9311      	str	r3, [sp, #68]	; 0x44
  402fee:	e671      	b.n	402cd4 <_svfprintf_r+0xf38>
  402ff0:	2b00      	cmp	r3, #0
  402ff2:	f340 80c3 	ble.w	40317c <_svfprintf_r+0x13e0>
  402ff6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402ff8:	2a00      	cmp	r2, #0
  402ffa:	f040 8099 	bne.w	403130 <_svfprintf_r+0x1394>
  402ffe:	f01b 0f01 	tst.w	fp, #1
  403002:	f040 8095 	bne.w	403130 <_svfprintf_r+0x1394>
  403006:	9308      	str	r3, [sp, #32]
  403008:	930e      	str	r3, [sp, #56]	; 0x38
  40300a:	e663      	b.n	402cd4 <_svfprintf_r+0xf38>
  40300c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40300e:	9308      	str	r3, [sp, #32]
  403010:	930e      	str	r3, [sp, #56]	; 0x38
  403012:	900a      	str	r0, [sp, #40]	; 0x28
  403014:	950f      	str	r5, [sp, #60]	; 0x3c
  403016:	f8cd b01c 	str.w	fp, [sp, #28]
  40301a:	9012      	str	r0, [sp, #72]	; 0x48
  40301c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403020:	f7fe bfd4 	b.w	401fcc <_svfprintf_r+0x230>
  403024:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403026:	2b47      	cmp	r3, #71	; 0x47
  403028:	f47f ae20 	bne.w	402c6c <_svfprintf_r+0xed0>
  40302c:	f01b 0f01 	tst.w	fp, #1
  403030:	f47f aeee 	bne.w	402e10 <_svfprintf_r+0x1074>
  403034:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403036:	1b9b      	subs	r3, r3, r6
  403038:	9313      	str	r3, [sp, #76]	; 0x4c
  40303a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40303c:	2b47      	cmp	r3, #71	; 0x47
  40303e:	f43f af18 	beq.w	402e72 <_svfprintf_r+0x10d6>
  403042:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403044:	9312      	str	r3, [sp, #72]	; 0x48
  403046:	e721      	b.n	402e8c <_svfprintf_r+0x10f0>
  403048:	424f      	negs	r7, r1
  40304a:	3110      	adds	r1, #16
  40304c:	4d48      	ldr	r5, [pc, #288]	; (403170 <_svfprintf_r+0x13d4>)
  40304e:	da2f      	bge.n	4030b0 <_svfprintf_r+0x1314>
  403050:	2410      	movs	r4, #16
  403052:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403056:	e004      	b.n	403062 <_svfprintf_r+0x12c6>
  403058:	f108 0808 	add.w	r8, r8, #8
  40305c:	3f10      	subs	r7, #16
  40305e:	2f10      	cmp	r7, #16
  403060:	dd26      	ble.n	4030b0 <_svfprintf_r+0x1314>
  403062:	3301      	adds	r3, #1
  403064:	3210      	adds	r2, #16
  403066:	2b07      	cmp	r3, #7
  403068:	9227      	str	r2, [sp, #156]	; 0x9c
  40306a:	9326      	str	r3, [sp, #152]	; 0x98
  40306c:	f8c8 5000 	str.w	r5, [r8]
  403070:	f8c8 4004 	str.w	r4, [r8, #4]
  403074:	ddf0      	ble.n	403058 <_svfprintf_r+0x12bc>
  403076:	aa25      	add	r2, sp, #148	; 0x94
  403078:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40307a:	4658      	mov	r0, fp
  40307c:	f002 fac4 	bl	405608 <__ssprint_r>
  403080:	2800      	cmp	r0, #0
  403082:	f47e af5d 	bne.w	401f40 <_svfprintf_r+0x1a4>
  403086:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403088:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40308a:	46c8      	mov	r8, r9
  40308c:	e7e6      	b.n	40305c <_svfprintf_r+0x12c0>
  40308e:	aa25      	add	r2, sp, #148	; 0x94
  403090:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403092:	980c      	ldr	r0, [sp, #48]	; 0x30
  403094:	f002 fab8 	bl	405608 <__ssprint_r>
  403098:	2800      	cmp	r0, #0
  40309a:	f47e af51 	bne.w	401f40 <_svfprintf_r+0x1a4>
  40309e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4030a0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4030a2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4030a4:	46c8      	mov	r8, r9
  4030a6:	e667      	b.n	402d78 <_svfprintf_r+0xfdc>
  4030a8:	2000      	movs	r0, #0
  4030aa:	900a      	str	r0, [sp, #40]	; 0x28
  4030ac:	f7fe bed0 	b.w	401e50 <_svfprintf_r+0xb4>
  4030b0:	3301      	adds	r3, #1
  4030b2:	443a      	add	r2, r7
  4030b4:	2b07      	cmp	r3, #7
  4030b6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4030ba:	9227      	str	r2, [sp, #156]	; 0x9c
  4030bc:	9326      	str	r3, [sp, #152]	; 0x98
  4030be:	f108 0808 	add.w	r8, r8, #8
  4030c2:	f77f ae5c 	ble.w	402d7e <_svfprintf_r+0xfe2>
  4030c6:	aa25      	add	r2, sp, #148	; 0x94
  4030c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030ca:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030cc:	f002 fa9c 	bl	405608 <__ssprint_r>
  4030d0:	2800      	cmp	r0, #0
  4030d2:	f47e af35 	bne.w	401f40 <_svfprintf_r+0x1a4>
  4030d6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4030d8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4030da:	46c8      	mov	r8, r9
  4030dc:	e64f      	b.n	402d7e <_svfprintf_r+0xfe2>
  4030de:	3330      	adds	r3, #48	; 0x30
  4030e0:	2230      	movs	r2, #48	; 0x30
  4030e2:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  4030e6:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  4030ea:	ab22      	add	r3, sp, #136	; 0x88
  4030ec:	e70f      	b.n	402f0e <_svfprintf_r+0x1172>
  4030ee:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4030f0:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4030f2:	4413      	add	r3, r2
  4030f4:	930e      	str	r3, [sp, #56]	; 0x38
  4030f6:	e775      	b.n	402fe4 <_svfprintf_r+0x1248>
  4030f8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4030fa:	e5cb      	b.n	402c94 <_svfprintf_r+0xef8>
  4030fc:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4030fe:	4e1d      	ldr	r6, [pc, #116]	; (403174 <_svfprintf_r+0x13d8>)
  403100:	2b00      	cmp	r3, #0
  403102:	bfb6      	itet	lt
  403104:	272d      	movlt	r7, #45	; 0x2d
  403106:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  40310a:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  40310e:	4b1a      	ldr	r3, [pc, #104]	; (403178 <_svfprintf_r+0x13dc>)
  403110:	f7ff ba2f 	b.w	402572 <_svfprintf_r+0x7d6>
  403114:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403116:	9808      	ldr	r0, [sp, #32]
  403118:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40311a:	4639      	mov	r1, r7
  40311c:	f002 ffb2 	bl	406084 <__aeabi_dcmpeq>
  403120:	2800      	cmp	r0, #0
  403122:	f47f ae7f 	bne.w	402e24 <_svfprintf_r+0x1088>
  403126:	f1c5 0501 	rsb	r5, r5, #1
  40312a:	951f      	str	r5, [sp, #124]	; 0x7c
  40312c:	442c      	add	r4, r5
  40312e:	e59e      	b.n	402c6e <_svfprintf_r+0xed2>
  403130:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403132:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403134:	4413      	add	r3, r2
  403136:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403138:	441a      	add	r2, r3
  40313a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  40313e:	920e      	str	r2, [sp, #56]	; 0x38
  403140:	9308      	str	r3, [sp, #32]
  403142:	e5c7      	b.n	402cd4 <_svfprintf_r+0xf38>
  403144:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403146:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403148:	f1c3 0301 	rsb	r3, r3, #1
  40314c:	441a      	add	r2, r3
  40314e:	4613      	mov	r3, r2
  403150:	e7d0      	b.n	4030f4 <_svfprintf_r+0x1358>
  403152:	f01b 0301 	ands.w	r3, fp, #1
  403156:	9312      	str	r3, [sp, #72]	; 0x48
  403158:	f47f aee2 	bne.w	402f20 <_svfprintf_r+0x1184>
  40315c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40315e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403162:	9308      	str	r3, [sp, #32]
  403164:	e5b6      	b.n	402cd4 <_svfprintf_r+0xf38>
  403166:	bf00      	nop
  403168:	66666667 	.word	0x66666667
  40316c:	00406c4c 	.word	0x00406c4c
  403170:	00406c68 	.word	0x00406c68
  403174:	00406c20 	.word	0x00406c20
  403178:	00406c1c 	.word	0x00406c1c
  40317c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40317e:	b913      	cbnz	r3, 403186 <_svfprintf_r+0x13ea>
  403180:	f01b 0f01 	tst.w	fp, #1
  403184:	d002      	beq.n	40318c <_svfprintf_r+0x13f0>
  403186:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403188:	3301      	adds	r3, #1
  40318a:	e7d4      	b.n	403136 <_svfprintf_r+0x139a>
  40318c:	2301      	movs	r3, #1
  40318e:	e73a      	b.n	403006 <_svfprintf_r+0x126a>
  403190:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  403192:	f89a 3001 	ldrb.w	r3, [sl, #1]
  403196:	6828      	ldr	r0, [r5, #0]
  403198:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  40319c:	900a      	str	r0, [sp, #40]	; 0x28
  40319e:	4628      	mov	r0, r5
  4031a0:	3004      	adds	r0, #4
  4031a2:	46a2      	mov	sl, r4
  4031a4:	900f      	str	r0, [sp, #60]	; 0x3c
  4031a6:	f7fe be51 	b.w	401e4c <_svfprintf_r+0xb0>
  4031aa:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031ae:	f7ff b867 	b.w	402280 <_svfprintf_r+0x4e4>
  4031b2:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031b6:	f7ff ba15 	b.w	4025e4 <_svfprintf_r+0x848>
  4031ba:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  4031be:	e6a6      	b.n	402f0e <_svfprintf_r+0x1172>
  4031c0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031c4:	f7ff b8eb 	b.w	40239e <_svfprintf_r+0x602>
  4031c8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4031ca:	230c      	movs	r3, #12
  4031cc:	6013      	str	r3, [r2, #0]
  4031ce:	f04f 33ff 	mov.w	r3, #4294967295
  4031d2:	9309      	str	r3, [sp, #36]	; 0x24
  4031d4:	f7fe bebd 	b.w	401f52 <_svfprintf_r+0x1b6>
  4031d8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031dc:	f7ff b99a 	b.w	402514 <_svfprintf_r+0x778>
  4031e0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031e4:	f7ff b976 	b.w	4024d4 <_svfprintf_r+0x738>
  4031e8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031ec:	f7ff b959 	b.w	4024a2 <_svfprintf_r+0x706>
  4031f0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031f4:	f7ff b912 	b.w	40241c <_svfprintf_r+0x680>

004031f8 <register_fini>:
  4031f8:	4b02      	ldr	r3, [pc, #8]	; (403204 <register_fini+0xc>)
  4031fa:	b113      	cbz	r3, 403202 <register_fini+0xa>
  4031fc:	4802      	ldr	r0, [pc, #8]	; (403208 <register_fini+0x10>)
  4031fe:	f000 b805 	b.w	40320c <atexit>
  403202:	4770      	bx	lr
  403204:	00000000 	.word	0x00000000
  403208:	00404195 	.word	0x00404195

0040320c <atexit>:
  40320c:	2300      	movs	r3, #0
  40320e:	4601      	mov	r1, r0
  403210:	461a      	mov	r2, r3
  403212:	4618      	mov	r0, r3
  403214:	f002 ba84 	b.w	405720 <__register_exitproc>

00403218 <quorem>:
  403218:	6902      	ldr	r2, [r0, #16]
  40321a:	690b      	ldr	r3, [r1, #16]
  40321c:	4293      	cmp	r3, r2
  40321e:	f300 808d 	bgt.w	40333c <quorem+0x124>
  403222:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403226:	f103 38ff 	add.w	r8, r3, #4294967295
  40322a:	f101 0714 	add.w	r7, r1, #20
  40322e:	f100 0b14 	add.w	fp, r0, #20
  403232:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  403236:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  40323a:	ea4f 0488 	mov.w	r4, r8, lsl #2
  40323e:	b083      	sub	sp, #12
  403240:	3201      	adds	r2, #1
  403242:	fbb3 f9f2 	udiv	r9, r3, r2
  403246:	eb0b 0304 	add.w	r3, fp, r4
  40324a:	9400      	str	r4, [sp, #0]
  40324c:	eb07 0a04 	add.w	sl, r7, r4
  403250:	9301      	str	r3, [sp, #4]
  403252:	f1b9 0f00 	cmp.w	r9, #0
  403256:	d039      	beq.n	4032cc <quorem+0xb4>
  403258:	2500      	movs	r5, #0
  40325a:	462e      	mov	r6, r5
  40325c:	46bc      	mov	ip, r7
  40325e:	46de      	mov	lr, fp
  403260:	f85c 4b04 	ldr.w	r4, [ip], #4
  403264:	f8de 3000 	ldr.w	r3, [lr]
  403268:	b2a2      	uxth	r2, r4
  40326a:	fb09 5502 	mla	r5, r9, r2, r5
  40326e:	0c22      	lsrs	r2, r4, #16
  403270:	0c2c      	lsrs	r4, r5, #16
  403272:	fb09 4202 	mla	r2, r9, r2, r4
  403276:	b2ad      	uxth	r5, r5
  403278:	1b75      	subs	r5, r6, r5
  40327a:	b296      	uxth	r6, r2
  40327c:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403280:	fa15 f383 	uxtah	r3, r5, r3
  403284:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403288:	b29b      	uxth	r3, r3
  40328a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  40328e:	45e2      	cmp	sl, ip
  403290:	ea4f 4512 	mov.w	r5, r2, lsr #16
  403294:	f84e 3b04 	str.w	r3, [lr], #4
  403298:	ea4f 4626 	mov.w	r6, r6, asr #16
  40329c:	d2e0      	bcs.n	403260 <quorem+0x48>
  40329e:	9b00      	ldr	r3, [sp, #0]
  4032a0:	f85b 3003 	ldr.w	r3, [fp, r3]
  4032a4:	b993      	cbnz	r3, 4032cc <quorem+0xb4>
  4032a6:	9c01      	ldr	r4, [sp, #4]
  4032a8:	1f23      	subs	r3, r4, #4
  4032aa:	459b      	cmp	fp, r3
  4032ac:	d20c      	bcs.n	4032c8 <quorem+0xb0>
  4032ae:	f854 3c04 	ldr.w	r3, [r4, #-4]
  4032b2:	b94b      	cbnz	r3, 4032c8 <quorem+0xb0>
  4032b4:	f1a4 0308 	sub.w	r3, r4, #8
  4032b8:	e002      	b.n	4032c0 <quorem+0xa8>
  4032ba:	681a      	ldr	r2, [r3, #0]
  4032bc:	3b04      	subs	r3, #4
  4032be:	b91a      	cbnz	r2, 4032c8 <quorem+0xb0>
  4032c0:	459b      	cmp	fp, r3
  4032c2:	f108 38ff 	add.w	r8, r8, #4294967295
  4032c6:	d3f8      	bcc.n	4032ba <quorem+0xa2>
  4032c8:	f8c0 8010 	str.w	r8, [r0, #16]
  4032cc:	4604      	mov	r4, r0
  4032ce:	f001 fee7 	bl	4050a0 <__mcmp>
  4032d2:	2800      	cmp	r0, #0
  4032d4:	db2e      	blt.n	403334 <quorem+0x11c>
  4032d6:	f109 0901 	add.w	r9, r9, #1
  4032da:	465d      	mov	r5, fp
  4032dc:	2300      	movs	r3, #0
  4032de:	f857 1b04 	ldr.w	r1, [r7], #4
  4032e2:	6828      	ldr	r0, [r5, #0]
  4032e4:	b28a      	uxth	r2, r1
  4032e6:	1a9a      	subs	r2, r3, r2
  4032e8:	0c0b      	lsrs	r3, r1, #16
  4032ea:	fa12 f280 	uxtah	r2, r2, r0
  4032ee:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  4032f2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4032f6:	b292      	uxth	r2, r2
  4032f8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4032fc:	45ba      	cmp	sl, r7
  4032fe:	f845 2b04 	str.w	r2, [r5], #4
  403302:	ea4f 4323 	mov.w	r3, r3, asr #16
  403306:	d2ea      	bcs.n	4032de <quorem+0xc6>
  403308:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  40330c:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  403310:	b982      	cbnz	r2, 403334 <quorem+0x11c>
  403312:	1f1a      	subs	r2, r3, #4
  403314:	4593      	cmp	fp, r2
  403316:	d20b      	bcs.n	403330 <quorem+0x118>
  403318:	f853 2c04 	ldr.w	r2, [r3, #-4]
  40331c:	b942      	cbnz	r2, 403330 <quorem+0x118>
  40331e:	3b08      	subs	r3, #8
  403320:	e002      	b.n	403328 <quorem+0x110>
  403322:	681a      	ldr	r2, [r3, #0]
  403324:	3b04      	subs	r3, #4
  403326:	b91a      	cbnz	r2, 403330 <quorem+0x118>
  403328:	459b      	cmp	fp, r3
  40332a:	f108 38ff 	add.w	r8, r8, #4294967295
  40332e:	d3f8      	bcc.n	403322 <quorem+0x10a>
  403330:	f8c4 8010 	str.w	r8, [r4, #16]
  403334:	4648      	mov	r0, r9
  403336:	b003      	add	sp, #12
  403338:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40333c:	2000      	movs	r0, #0
  40333e:	4770      	bx	lr

00403340 <_dtoa_r>:
  403340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403344:	6c01      	ldr	r1, [r0, #64]	; 0x40
  403346:	b09b      	sub	sp, #108	; 0x6c
  403348:	4604      	mov	r4, r0
  40334a:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  40334c:	4692      	mov	sl, r2
  40334e:	469b      	mov	fp, r3
  403350:	b141      	cbz	r1, 403364 <_dtoa_r+0x24>
  403352:	6c42      	ldr	r2, [r0, #68]	; 0x44
  403354:	604a      	str	r2, [r1, #4]
  403356:	2301      	movs	r3, #1
  403358:	4093      	lsls	r3, r2
  40335a:	608b      	str	r3, [r1, #8]
  40335c:	f001 fcc8 	bl	404cf0 <_Bfree>
  403360:	2300      	movs	r3, #0
  403362:	6423      	str	r3, [r4, #64]	; 0x40
  403364:	f1bb 0f00 	cmp.w	fp, #0
  403368:	465d      	mov	r5, fp
  40336a:	db35      	blt.n	4033d8 <_dtoa_r+0x98>
  40336c:	2300      	movs	r3, #0
  40336e:	6033      	str	r3, [r6, #0]
  403370:	4b9d      	ldr	r3, [pc, #628]	; (4035e8 <_dtoa_r+0x2a8>)
  403372:	43ab      	bics	r3, r5
  403374:	d015      	beq.n	4033a2 <_dtoa_r+0x62>
  403376:	4650      	mov	r0, sl
  403378:	4659      	mov	r1, fp
  40337a:	2200      	movs	r2, #0
  40337c:	2300      	movs	r3, #0
  40337e:	f002 fe81 	bl	406084 <__aeabi_dcmpeq>
  403382:	4680      	mov	r8, r0
  403384:	2800      	cmp	r0, #0
  403386:	d02d      	beq.n	4033e4 <_dtoa_r+0xa4>
  403388:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40338a:	2301      	movs	r3, #1
  40338c:	6013      	str	r3, [r2, #0]
  40338e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403390:	2b00      	cmp	r3, #0
  403392:	f000 80bd 	beq.w	403510 <_dtoa_r+0x1d0>
  403396:	4895      	ldr	r0, [pc, #596]	; (4035ec <_dtoa_r+0x2ac>)
  403398:	6018      	str	r0, [r3, #0]
  40339a:	3801      	subs	r0, #1
  40339c:	b01b      	add	sp, #108	; 0x6c
  40339e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4033a2:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4033a4:	f242 730f 	movw	r3, #9999	; 0x270f
  4033a8:	6013      	str	r3, [r2, #0]
  4033aa:	f1ba 0f00 	cmp.w	sl, #0
  4033ae:	d10d      	bne.n	4033cc <_dtoa_r+0x8c>
  4033b0:	f3c5 0513 	ubfx	r5, r5, #0, #20
  4033b4:	b955      	cbnz	r5, 4033cc <_dtoa_r+0x8c>
  4033b6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4033b8:	488d      	ldr	r0, [pc, #564]	; (4035f0 <_dtoa_r+0x2b0>)
  4033ba:	2b00      	cmp	r3, #0
  4033bc:	d0ee      	beq.n	40339c <_dtoa_r+0x5c>
  4033be:	f100 0308 	add.w	r3, r0, #8
  4033c2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  4033c4:	6013      	str	r3, [r2, #0]
  4033c6:	b01b      	add	sp, #108	; 0x6c
  4033c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4033cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4033ce:	4889      	ldr	r0, [pc, #548]	; (4035f4 <_dtoa_r+0x2b4>)
  4033d0:	2b00      	cmp	r3, #0
  4033d2:	d0e3      	beq.n	40339c <_dtoa_r+0x5c>
  4033d4:	1cc3      	adds	r3, r0, #3
  4033d6:	e7f4      	b.n	4033c2 <_dtoa_r+0x82>
  4033d8:	2301      	movs	r3, #1
  4033da:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  4033de:	6033      	str	r3, [r6, #0]
  4033e0:	46ab      	mov	fp, r5
  4033e2:	e7c5      	b.n	403370 <_dtoa_r+0x30>
  4033e4:	aa18      	add	r2, sp, #96	; 0x60
  4033e6:	ab19      	add	r3, sp, #100	; 0x64
  4033e8:	9201      	str	r2, [sp, #4]
  4033ea:	9300      	str	r3, [sp, #0]
  4033ec:	4652      	mov	r2, sl
  4033ee:	465b      	mov	r3, fp
  4033f0:	4620      	mov	r0, r4
  4033f2:	f001 fef5 	bl	4051e0 <__d2b>
  4033f6:	0d2b      	lsrs	r3, r5, #20
  4033f8:	4681      	mov	r9, r0
  4033fa:	d071      	beq.n	4034e0 <_dtoa_r+0x1a0>
  4033fc:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403400:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403404:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403406:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  40340a:	4650      	mov	r0, sl
  40340c:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403410:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403414:	2200      	movs	r2, #0
  403416:	4b78      	ldr	r3, [pc, #480]	; (4035f8 <_dtoa_r+0x2b8>)
  403418:	f002 fa18 	bl	40584c <__aeabi_dsub>
  40341c:	a36c      	add	r3, pc, #432	; (adr r3, 4035d0 <_dtoa_r+0x290>)
  40341e:	e9d3 2300 	ldrd	r2, r3, [r3]
  403422:	f002 fbc7 	bl	405bb4 <__aeabi_dmul>
  403426:	a36c      	add	r3, pc, #432	; (adr r3, 4035d8 <_dtoa_r+0x298>)
  403428:	e9d3 2300 	ldrd	r2, r3, [r3]
  40342c:	f002 fa10 	bl	405850 <__adddf3>
  403430:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403434:	4630      	mov	r0, r6
  403436:	f002 fb57 	bl	405ae8 <__aeabi_i2d>
  40343a:	a369      	add	r3, pc, #420	; (adr r3, 4035e0 <_dtoa_r+0x2a0>)
  40343c:	e9d3 2300 	ldrd	r2, r3, [r3]
  403440:	f002 fbb8 	bl	405bb4 <__aeabi_dmul>
  403444:	4602      	mov	r2, r0
  403446:	460b      	mov	r3, r1
  403448:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40344c:	f002 fa00 	bl	405850 <__adddf3>
  403450:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403454:	f002 fe5e 	bl	406114 <__aeabi_d2iz>
  403458:	2200      	movs	r2, #0
  40345a:	9002      	str	r0, [sp, #8]
  40345c:	2300      	movs	r3, #0
  40345e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403462:	f002 fe19 	bl	406098 <__aeabi_dcmplt>
  403466:	2800      	cmp	r0, #0
  403468:	f040 8173 	bne.w	403752 <_dtoa_r+0x412>
  40346c:	9d02      	ldr	r5, [sp, #8]
  40346e:	2d16      	cmp	r5, #22
  403470:	f200 815d 	bhi.w	40372e <_dtoa_r+0x3ee>
  403474:	4b61      	ldr	r3, [pc, #388]	; (4035fc <_dtoa_r+0x2bc>)
  403476:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  40347a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40347e:	4652      	mov	r2, sl
  403480:	465b      	mov	r3, fp
  403482:	f002 fe27 	bl	4060d4 <__aeabi_dcmpgt>
  403486:	2800      	cmp	r0, #0
  403488:	f000 81c5 	beq.w	403816 <_dtoa_r+0x4d6>
  40348c:	1e6b      	subs	r3, r5, #1
  40348e:	9302      	str	r3, [sp, #8]
  403490:	2300      	movs	r3, #0
  403492:	930e      	str	r3, [sp, #56]	; 0x38
  403494:	1bbf      	subs	r7, r7, r6
  403496:	1e7b      	subs	r3, r7, #1
  403498:	9306      	str	r3, [sp, #24]
  40349a:	f100 8154 	bmi.w	403746 <_dtoa_r+0x406>
  40349e:	2300      	movs	r3, #0
  4034a0:	9308      	str	r3, [sp, #32]
  4034a2:	9b02      	ldr	r3, [sp, #8]
  4034a4:	2b00      	cmp	r3, #0
  4034a6:	f2c0 8145 	blt.w	403734 <_dtoa_r+0x3f4>
  4034aa:	9a06      	ldr	r2, [sp, #24]
  4034ac:	930d      	str	r3, [sp, #52]	; 0x34
  4034ae:	4611      	mov	r1, r2
  4034b0:	4419      	add	r1, r3
  4034b2:	2300      	movs	r3, #0
  4034b4:	9106      	str	r1, [sp, #24]
  4034b6:	930c      	str	r3, [sp, #48]	; 0x30
  4034b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4034ba:	2b09      	cmp	r3, #9
  4034bc:	d82a      	bhi.n	403514 <_dtoa_r+0x1d4>
  4034be:	2b05      	cmp	r3, #5
  4034c0:	f340 865b 	ble.w	40417a <_dtoa_r+0xe3a>
  4034c4:	3b04      	subs	r3, #4
  4034c6:	9324      	str	r3, [sp, #144]	; 0x90
  4034c8:	2500      	movs	r5, #0
  4034ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4034cc:	3b02      	subs	r3, #2
  4034ce:	2b03      	cmp	r3, #3
  4034d0:	f200 8642 	bhi.w	404158 <_dtoa_r+0xe18>
  4034d4:	e8df f013 	tbh	[pc, r3, lsl #1]
  4034d8:	02c903d4 	.word	0x02c903d4
  4034dc:	046103df 	.word	0x046103df
  4034e0:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4034e2:	9e19      	ldr	r6, [sp, #100]	; 0x64
  4034e4:	443e      	add	r6, r7
  4034e6:	f206 4332 	addw	r3, r6, #1074	; 0x432
  4034ea:	2b20      	cmp	r3, #32
  4034ec:	f340 818e 	ble.w	40380c <_dtoa_r+0x4cc>
  4034f0:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4034f4:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4034f8:	409d      	lsls	r5, r3
  4034fa:	fa2a f000 	lsr.w	r0, sl, r0
  4034fe:	4328      	orrs	r0, r5
  403500:	f002 fae2 	bl	405ac8 <__aeabi_ui2d>
  403504:	2301      	movs	r3, #1
  403506:	3e01      	subs	r6, #1
  403508:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  40350c:	9314      	str	r3, [sp, #80]	; 0x50
  40350e:	e781      	b.n	403414 <_dtoa_r+0xd4>
  403510:	483b      	ldr	r0, [pc, #236]	; (403600 <_dtoa_r+0x2c0>)
  403512:	e743      	b.n	40339c <_dtoa_r+0x5c>
  403514:	2100      	movs	r1, #0
  403516:	6461      	str	r1, [r4, #68]	; 0x44
  403518:	4620      	mov	r0, r4
  40351a:	9125      	str	r1, [sp, #148]	; 0x94
  40351c:	f001 fbc2 	bl	404ca4 <_Balloc>
  403520:	f04f 33ff 	mov.w	r3, #4294967295
  403524:	930a      	str	r3, [sp, #40]	; 0x28
  403526:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403528:	930f      	str	r3, [sp, #60]	; 0x3c
  40352a:	2301      	movs	r3, #1
  40352c:	9004      	str	r0, [sp, #16]
  40352e:	6420      	str	r0, [r4, #64]	; 0x40
  403530:	9224      	str	r2, [sp, #144]	; 0x90
  403532:	930b      	str	r3, [sp, #44]	; 0x2c
  403534:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403536:	2b00      	cmp	r3, #0
  403538:	f2c0 80d9 	blt.w	4036ee <_dtoa_r+0x3ae>
  40353c:	9a02      	ldr	r2, [sp, #8]
  40353e:	2a0e      	cmp	r2, #14
  403540:	f300 80d5 	bgt.w	4036ee <_dtoa_r+0x3ae>
  403544:	4b2d      	ldr	r3, [pc, #180]	; (4035fc <_dtoa_r+0x2bc>)
  403546:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40354a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40354e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403552:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403554:	2b00      	cmp	r3, #0
  403556:	f2c0 83ba 	blt.w	403cce <_dtoa_r+0x98e>
  40355a:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  40355e:	4650      	mov	r0, sl
  403560:	462a      	mov	r2, r5
  403562:	4633      	mov	r3, r6
  403564:	4659      	mov	r1, fp
  403566:	f002 fc4f 	bl	405e08 <__aeabi_ddiv>
  40356a:	f002 fdd3 	bl	406114 <__aeabi_d2iz>
  40356e:	4680      	mov	r8, r0
  403570:	f002 faba 	bl	405ae8 <__aeabi_i2d>
  403574:	462a      	mov	r2, r5
  403576:	4633      	mov	r3, r6
  403578:	f002 fb1c 	bl	405bb4 <__aeabi_dmul>
  40357c:	460b      	mov	r3, r1
  40357e:	4602      	mov	r2, r0
  403580:	4659      	mov	r1, fp
  403582:	4650      	mov	r0, sl
  403584:	f002 f962 	bl	40584c <__aeabi_dsub>
  403588:	9d04      	ldr	r5, [sp, #16]
  40358a:	f108 0330 	add.w	r3, r8, #48	; 0x30
  40358e:	702b      	strb	r3, [r5, #0]
  403590:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403592:	2b01      	cmp	r3, #1
  403594:	4606      	mov	r6, r0
  403596:	460f      	mov	r7, r1
  403598:	f105 0501 	add.w	r5, r5, #1
  40359c:	d068      	beq.n	403670 <_dtoa_r+0x330>
  40359e:	2200      	movs	r2, #0
  4035a0:	4b18      	ldr	r3, [pc, #96]	; (403604 <_dtoa_r+0x2c4>)
  4035a2:	f002 fb07 	bl	405bb4 <__aeabi_dmul>
  4035a6:	2200      	movs	r2, #0
  4035a8:	2300      	movs	r3, #0
  4035aa:	4606      	mov	r6, r0
  4035ac:	460f      	mov	r7, r1
  4035ae:	f002 fd69 	bl	406084 <__aeabi_dcmpeq>
  4035b2:	2800      	cmp	r0, #0
  4035b4:	f040 8088 	bne.w	4036c8 <_dtoa_r+0x388>
  4035b8:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  4035bc:	f04f 0a00 	mov.w	sl, #0
  4035c0:	f8df b040 	ldr.w	fp, [pc, #64]	; 403604 <_dtoa_r+0x2c4>
  4035c4:	940c      	str	r4, [sp, #48]	; 0x30
  4035c6:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  4035ca:	e028      	b.n	40361e <_dtoa_r+0x2de>
  4035cc:	f3af 8000 	nop.w
  4035d0:	636f4361 	.word	0x636f4361
  4035d4:	3fd287a7 	.word	0x3fd287a7
  4035d8:	8b60c8b3 	.word	0x8b60c8b3
  4035dc:	3fc68a28 	.word	0x3fc68a28
  4035e0:	509f79fb 	.word	0x509f79fb
  4035e4:	3fd34413 	.word	0x3fd34413
  4035e8:	7ff00000 	.word	0x7ff00000
  4035ec:	00406c55 	.word	0x00406c55
  4035f0:	00406c78 	.word	0x00406c78
  4035f4:	00406c84 	.word	0x00406c84
  4035f8:	3ff80000 	.word	0x3ff80000
  4035fc:	00406cc0 	.word	0x00406cc0
  403600:	00406c54 	.word	0x00406c54
  403604:	40240000 	.word	0x40240000
  403608:	f002 fad4 	bl	405bb4 <__aeabi_dmul>
  40360c:	2200      	movs	r2, #0
  40360e:	2300      	movs	r3, #0
  403610:	4606      	mov	r6, r0
  403612:	460f      	mov	r7, r1
  403614:	f002 fd36 	bl	406084 <__aeabi_dcmpeq>
  403618:	2800      	cmp	r0, #0
  40361a:	f040 83c1 	bne.w	403da0 <_dtoa_r+0xa60>
  40361e:	4642      	mov	r2, r8
  403620:	464b      	mov	r3, r9
  403622:	4630      	mov	r0, r6
  403624:	4639      	mov	r1, r7
  403626:	f002 fbef 	bl	405e08 <__aeabi_ddiv>
  40362a:	f002 fd73 	bl	406114 <__aeabi_d2iz>
  40362e:	4604      	mov	r4, r0
  403630:	f002 fa5a 	bl	405ae8 <__aeabi_i2d>
  403634:	4642      	mov	r2, r8
  403636:	464b      	mov	r3, r9
  403638:	f002 fabc 	bl	405bb4 <__aeabi_dmul>
  40363c:	4602      	mov	r2, r0
  40363e:	460b      	mov	r3, r1
  403640:	4630      	mov	r0, r6
  403642:	4639      	mov	r1, r7
  403644:	f002 f902 	bl	40584c <__aeabi_dsub>
  403648:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  40364c:	9e04      	ldr	r6, [sp, #16]
  40364e:	f805 eb01 	strb.w	lr, [r5], #1
  403652:	eba5 0e06 	sub.w	lr, r5, r6
  403656:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403658:	45b6      	cmp	lr, r6
  40365a:	e9cd 0106 	strd	r0, r1, [sp, #24]
  40365e:	4652      	mov	r2, sl
  403660:	465b      	mov	r3, fp
  403662:	d1d1      	bne.n	403608 <_dtoa_r+0x2c8>
  403664:	46a0      	mov	r8, r4
  403666:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40366a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40366c:	4606      	mov	r6, r0
  40366e:	460f      	mov	r7, r1
  403670:	4632      	mov	r2, r6
  403672:	463b      	mov	r3, r7
  403674:	4630      	mov	r0, r6
  403676:	4639      	mov	r1, r7
  403678:	f002 f8ea 	bl	405850 <__adddf3>
  40367c:	4606      	mov	r6, r0
  40367e:	460f      	mov	r7, r1
  403680:	4602      	mov	r2, r0
  403682:	460b      	mov	r3, r1
  403684:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403688:	f002 fd06 	bl	406098 <__aeabi_dcmplt>
  40368c:	b948      	cbnz	r0, 4036a2 <_dtoa_r+0x362>
  40368e:	4632      	mov	r2, r6
  403690:	463b      	mov	r3, r7
  403692:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403696:	f002 fcf5 	bl	406084 <__aeabi_dcmpeq>
  40369a:	b1a8      	cbz	r0, 4036c8 <_dtoa_r+0x388>
  40369c:	f018 0f01 	tst.w	r8, #1
  4036a0:	d012      	beq.n	4036c8 <_dtoa_r+0x388>
  4036a2:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4036a6:	9a04      	ldr	r2, [sp, #16]
  4036a8:	1e6b      	subs	r3, r5, #1
  4036aa:	e004      	b.n	4036b6 <_dtoa_r+0x376>
  4036ac:	429a      	cmp	r2, r3
  4036ae:	f000 8401 	beq.w	403eb4 <_dtoa_r+0xb74>
  4036b2:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  4036b6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  4036ba:	f103 0501 	add.w	r5, r3, #1
  4036be:	d0f5      	beq.n	4036ac <_dtoa_r+0x36c>
  4036c0:	f108 0801 	add.w	r8, r8, #1
  4036c4:	f883 8000 	strb.w	r8, [r3]
  4036c8:	4649      	mov	r1, r9
  4036ca:	4620      	mov	r0, r4
  4036cc:	f001 fb10 	bl	404cf0 <_Bfree>
  4036d0:	2200      	movs	r2, #0
  4036d2:	9b02      	ldr	r3, [sp, #8]
  4036d4:	702a      	strb	r2, [r5, #0]
  4036d6:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4036d8:	3301      	adds	r3, #1
  4036da:	6013      	str	r3, [r2, #0]
  4036dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4036de:	2b00      	cmp	r3, #0
  4036e0:	f000 839e 	beq.w	403e20 <_dtoa_r+0xae0>
  4036e4:	9804      	ldr	r0, [sp, #16]
  4036e6:	601d      	str	r5, [r3, #0]
  4036e8:	b01b      	add	sp, #108	; 0x6c
  4036ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4036ee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4036f0:	2a00      	cmp	r2, #0
  4036f2:	d03e      	beq.n	403772 <_dtoa_r+0x432>
  4036f4:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4036f6:	2a01      	cmp	r2, #1
  4036f8:	f340 8311 	ble.w	403d1e <_dtoa_r+0x9de>
  4036fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4036fe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403700:	1e5f      	subs	r7, r3, #1
  403702:	42ba      	cmp	r2, r7
  403704:	f2c0 838f 	blt.w	403e26 <_dtoa_r+0xae6>
  403708:	1bd7      	subs	r7, r2, r7
  40370a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40370c:	2b00      	cmp	r3, #0
  40370e:	f2c0 848b 	blt.w	404028 <_dtoa_r+0xce8>
  403712:	9d08      	ldr	r5, [sp, #32]
  403714:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403716:	9a08      	ldr	r2, [sp, #32]
  403718:	441a      	add	r2, r3
  40371a:	9208      	str	r2, [sp, #32]
  40371c:	9a06      	ldr	r2, [sp, #24]
  40371e:	2101      	movs	r1, #1
  403720:	441a      	add	r2, r3
  403722:	4620      	mov	r0, r4
  403724:	9206      	str	r2, [sp, #24]
  403726:	f001 fb7d 	bl	404e24 <__i2b>
  40372a:	4606      	mov	r6, r0
  40372c:	e024      	b.n	403778 <_dtoa_r+0x438>
  40372e:	2301      	movs	r3, #1
  403730:	930e      	str	r3, [sp, #56]	; 0x38
  403732:	e6af      	b.n	403494 <_dtoa_r+0x154>
  403734:	9a08      	ldr	r2, [sp, #32]
  403736:	9b02      	ldr	r3, [sp, #8]
  403738:	1ad2      	subs	r2, r2, r3
  40373a:	425b      	negs	r3, r3
  40373c:	930c      	str	r3, [sp, #48]	; 0x30
  40373e:	2300      	movs	r3, #0
  403740:	9208      	str	r2, [sp, #32]
  403742:	930d      	str	r3, [sp, #52]	; 0x34
  403744:	e6b8      	b.n	4034b8 <_dtoa_r+0x178>
  403746:	f1c7 0301 	rsb	r3, r7, #1
  40374a:	9308      	str	r3, [sp, #32]
  40374c:	2300      	movs	r3, #0
  40374e:	9306      	str	r3, [sp, #24]
  403750:	e6a7      	b.n	4034a2 <_dtoa_r+0x162>
  403752:	9d02      	ldr	r5, [sp, #8]
  403754:	4628      	mov	r0, r5
  403756:	f002 f9c7 	bl	405ae8 <__aeabi_i2d>
  40375a:	4602      	mov	r2, r0
  40375c:	460b      	mov	r3, r1
  40375e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403762:	f002 fc8f 	bl	406084 <__aeabi_dcmpeq>
  403766:	2800      	cmp	r0, #0
  403768:	f47f ae80 	bne.w	40346c <_dtoa_r+0x12c>
  40376c:	1e6b      	subs	r3, r5, #1
  40376e:	9302      	str	r3, [sp, #8]
  403770:	e67c      	b.n	40346c <_dtoa_r+0x12c>
  403772:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403774:	9d08      	ldr	r5, [sp, #32]
  403776:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403778:	2d00      	cmp	r5, #0
  40377a:	dd0c      	ble.n	403796 <_dtoa_r+0x456>
  40377c:	9906      	ldr	r1, [sp, #24]
  40377e:	2900      	cmp	r1, #0
  403780:	460b      	mov	r3, r1
  403782:	dd08      	ble.n	403796 <_dtoa_r+0x456>
  403784:	42a9      	cmp	r1, r5
  403786:	9a08      	ldr	r2, [sp, #32]
  403788:	bfa8      	it	ge
  40378a:	462b      	movge	r3, r5
  40378c:	1ad2      	subs	r2, r2, r3
  40378e:	1aed      	subs	r5, r5, r3
  403790:	1acb      	subs	r3, r1, r3
  403792:	9208      	str	r2, [sp, #32]
  403794:	9306      	str	r3, [sp, #24]
  403796:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403798:	b1d3      	cbz	r3, 4037d0 <_dtoa_r+0x490>
  40379a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40379c:	2b00      	cmp	r3, #0
  40379e:	f000 82b7 	beq.w	403d10 <_dtoa_r+0x9d0>
  4037a2:	2f00      	cmp	r7, #0
  4037a4:	dd10      	ble.n	4037c8 <_dtoa_r+0x488>
  4037a6:	4631      	mov	r1, r6
  4037a8:	463a      	mov	r2, r7
  4037aa:	4620      	mov	r0, r4
  4037ac:	f001 fbd6 	bl	404f5c <__pow5mult>
  4037b0:	464a      	mov	r2, r9
  4037b2:	4601      	mov	r1, r0
  4037b4:	4606      	mov	r6, r0
  4037b6:	4620      	mov	r0, r4
  4037b8:	f001 fb3e 	bl	404e38 <__multiply>
  4037bc:	4649      	mov	r1, r9
  4037be:	4680      	mov	r8, r0
  4037c0:	4620      	mov	r0, r4
  4037c2:	f001 fa95 	bl	404cf0 <_Bfree>
  4037c6:	46c1      	mov	r9, r8
  4037c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4037ca:	1bda      	subs	r2, r3, r7
  4037cc:	f040 82a1 	bne.w	403d12 <_dtoa_r+0x9d2>
  4037d0:	2101      	movs	r1, #1
  4037d2:	4620      	mov	r0, r4
  4037d4:	f001 fb26 	bl	404e24 <__i2b>
  4037d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4037da:	2b00      	cmp	r3, #0
  4037dc:	4680      	mov	r8, r0
  4037de:	dd1c      	ble.n	40381a <_dtoa_r+0x4da>
  4037e0:	4601      	mov	r1, r0
  4037e2:	461a      	mov	r2, r3
  4037e4:	4620      	mov	r0, r4
  4037e6:	f001 fbb9 	bl	404f5c <__pow5mult>
  4037ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4037ec:	2b01      	cmp	r3, #1
  4037ee:	4680      	mov	r8, r0
  4037f0:	f340 8254 	ble.w	403c9c <_dtoa_r+0x95c>
  4037f4:	2300      	movs	r3, #0
  4037f6:	930c      	str	r3, [sp, #48]	; 0x30
  4037f8:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4037fc:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403800:	6918      	ldr	r0, [r3, #16]
  403802:	f001 fabf 	bl	404d84 <__hi0bits>
  403806:	f1c0 0020 	rsb	r0, r0, #32
  40380a:	e010      	b.n	40382e <_dtoa_r+0x4ee>
  40380c:	f1c3 0520 	rsb	r5, r3, #32
  403810:	fa0a f005 	lsl.w	r0, sl, r5
  403814:	e674      	b.n	403500 <_dtoa_r+0x1c0>
  403816:	900e      	str	r0, [sp, #56]	; 0x38
  403818:	e63c      	b.n	403494 <_dtoa_r+0x154>
  40381a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40381c:	2b01      	cmp	r3, #1
  40381e:	f340 8287 	ble.w	403d30 <_dtoa_r+0x9f0>
  403822:	2300      	movs	r3, #0
  403824:	930c      	str	r3, [sp, #48]	; 0x30
  403826:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403828:	2001      	movs	r0, #1
  40382a:	2b00      	cmp	r3, #0
  40382c:	d1e4      	bne.n	4037f8 <_dtoa_r+0x4b8>
  40382e:	9a06      	ldr	r2, [sp, #24]
  403830:	4410      	add	r0, r2
  403832:	f010 001f 	ands.w	r0, r0, #31
  403836:	f000 80a1 	beq.w	40397c <_dtoa_r+0x63c>
  40383a:	f1c0 0320 	rsb	r3, r0, #32
  40383e:	2b04      	cmp	r3, #4
  403840:	f340 849e 	ble.w	404180 <_dtoa_r+0xe40>
  403844:	9b08      	ldr	r3, [sp, #32]
  403846:	f1c0 001c 	rsb	r0, r0, #28
  40384a:	4403      	add	r3, r0
  40384c:	9308      	str	r3, [sp, #32]
  40384e:	4613      	mov	r3, r2
  403850:	4403      	add	r3, r0
  403852:	4405      	add	r5, r0
  403854:	9306      	str	r3, [sp, #24]
  403856:	9b08      	ldr	r3, [sp, #32]
  403858:	2b00      	cmp	r3, #0
  40385a:	dd05      	ble.n	403868 <_dtoa_r+0x528>
  40385c:	4649      	mov	r1, r9
  40385e:	461a      	mov	r2, r3
  403860:	4620      	mov	r0, r4
  403862:	f001 fbcb 	bl	404ffc <__lshift>
  403866:	4681      	mov	r9, r0
  403868:	9b06      	ldr	r3, [sp, #24]
  40386a:	2b00      	cmp	r3, #0
  40386c:	dd05      	ble.n	40387a <_dtoa_r+0x53a>
  40386e:	4641      	mov	r1, r8
  403870:	461a      	mov	r2, r3
  403872:	4620      	mov	r0, r4
  403874:	f001 fbc2 	bl	404ffc <__lshift>
  403878:	4680      	mov	r8, r0
  40387a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40387c:	2b00      	cmp	r3, #0
  40387e:	f040 8086 	bne.w	40398e <_dtoa_r+0x64e>
  403882:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403884:	2b00      	cmp	r3, #0
  403886:	f340 8266 	ble.w	403d56 <_dtoa_r+0xa16>
  40388a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40388c:	2b00      	cmp	r3, #0
  40388e:	f000 8098 	beq.w	4039c2 <_dtoa_r+0x682>
  403892:	2d00      	cmp	r5, #0
  403894:	dd05      	ble.n	4038a2 <_dtoa_r+0x562>
  403896:	4631      	mov	r1, r6
  403898:	462a      	mov	r2, r5
  40389a:	4620      	mov	r0, r4
  40389c:	f001 fbae 	bl	404ffc <__lshift>
  4038a0:	4606      	mov	r6, r0
  4038a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4038a4:	2b00      	cmp	r3, #0
  4038a6:	f040 8337 	bne.w	403f18 <_dtoa_r+0xbd8>
  4038aa:	9606      	str	r6, [sp, #24]
  4038ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4038ae:	9a04      	ldr	r2, [sp, #16]
  4038b0:	f8dd b018 	ldr.w	fp, [sp, #24]
  4038b4:	3b01      	subs	r3, #1
  4038b6:	18d3      	adds	r3, r2, r3
  4038b8:	930b      	str	r3, [sp, #44]	; 0x2c
  4038ba:	f00a 0301 	and.w	r3, sl, #1
  4038be:	930c      	str	r3, [sp, #48]	; 0x30
  4038c0:	4617      	mov	r7, r2
  4038c2:	46c2      	mov	sl, r8
  4038c4:	4651      	mov	r1, sl
  4038c6:	4648      	mov	r0, r9
  4038c8:	f7ff fca6 	bl	403218 <quorem>
  4038cc:	4631      	mov	r1, r6
  4038ce:	4605      	mov	r5, r0
  4038d0:	4648      	mov	r0, r9
  4038d2:	f001 fbe5 	bl	4050a0 <__mcmp>
  4038d6:	465a      	mov	r2, fp
  4038d8:	900a      	str	r0, [sp, #40]	; 0x28
  4038da:	4651      	mov	r1, sl
  4038dc:	4620      	mov	r0, r4
  4038de:	f001 fbfb 	bl	4050d8 <__mdiff>
  4038e2:	68c2      	ldr	r2, [r0, #12]
  4038e4:	4680      	mov	r8, r0
  4038e6:	f105 0330 	add.w	r3, r5, #48	; 0x30
  4038ea:	2a00      	cmp	r2, #0
  4038ec:	f040 822b 	bne.w	403d46 <_dtoa_r+0xa06>
  4038f0:	4601      	mov	r1, r0
  4038f2:	4648      	mov	r0, r9
  4038f4:	9308      	str	r3, [sp, #32]
  4038f6:	f001 fbd3 	bl	4050a0 <__mcmp>
  4038fa:	4641      	mov	r1, r8
  4038fc:	9006      	str	r0, [sp, #24]
  4038fe:	4620      	mov	r0, r4
  403900:	f001 f9f6 	bl	404cf0 <_Bfree>
  403904:	9a06      	ldr	r2, [sp, #24]
  403906:	9b08      	ldr	r3, [sp, #32]
  403908:	b932      	cbnz	r2, 403918 <_dtoa_r+0x5d8>
  40390a:	9924      	ldr	r1, [sp, #144]	; 0x90
  40390c:	b921      	cbnz	r1, 403918 <_dtoa_r+0x5d8>
  40390e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403910:	2a00      	cmp	r2, #0
  403912:	f000 83ef 	beq.w	4040f4 <_dtoa_r+0xdb4>
  403916:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403918:	990a      	ldr	r1, [sp, #40]	; 0x28
  40391a:	2900      	cmp	r1, #0
  40391c:	f2c0 829f 	blt.w	403e5e <_dtoa_r+0xb1e>
  403920:	d105      	bne.n	40392e <_dtoa_r+0x5ee>
  403922:	9924      	ldr	r1, [sp, #144]	; 0x90
  403924:	b919      	cbnz	r1, 40392e <_dtoa_r+0x5ee>
  403926:	990c      	ldr	r1, [sp, #48]	; 0x30
  403928:	2900      	cmp	r1, #0
  40392a:	f000 8298 	beq.w	403e5e <_dtoa_r+0xb1e>
  40392e:	2a00      	cmp	r2, #0
  403930:	f300 8306 	bgt.w	403f40 <_dtoa_r+0xc00>
  403934:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403936:	703b      	strb	r3, [r7, #0]
  403938:	f107 0801 	add.w	r8, r7, #1
  40393c:	4297      	cmp	r7, r2
  40393e:	4645      	mov	r5, r8
  403940:	f000 830c 	beq.w	403f5c <_dtoa_r+0xc1c>
  403944:	4649      	mov	r1, r9
  403946:	2300      	movs	r3, #0
  403948:	220a      	movs	r2, #10
  40394a:	4620      	mov	r0, r4
  40394c:	f001 f9da 	bl	404d04 <__multadd>
  403950:	455e      	cmp	r6, fp
  403952:	4681      	mov	r9, r0
  403954:	4631      	mov	r1, r6
  403956:	f04f 0300 	mov.w	r3, #0
  40395a:	f04f 020a 	mov.w	r2, #10
  40395e:	4620      	mov	r0, r4
  403960:	f000 81eb 	beq.w	403d3a <_dtoa_r+0x9fa>
  403964:	f001 f9ce 	bl	404d04 <__multadd>
  403968:	4659      	mov	r1, fp
  40396a:	4606      	mov	r6, r0
  40396c:	2300      	movs	r3, #0
  40396e:	220a      	movs	r2, #10
  403970:	4620      	mov	r0, r4
  403972:	f001 f9c7 	bl	404d04 <__multadd>
  403976:	4647      	mov	r7, r8
  403978:	4683      	mov	fp, r0
  40397a:	e7a3      	b.n	4038c4 <_dtoa_r+0x584>
  40397c:	201c      	movs	r0, #28
  40397e:	9b08      	ldr	r3, [sp, #32]
  403980:	4403      	add	r3, r0
  403982:	9308      	str	r3, [sp, #32]
  403984:	9b06      	ldr	r3, [sp, #24]
  403986:	4403      	add	r3, r0
  403988:	4405      	add	r5, r0
  40398a:	9306      	str	r3, [sp, #24]
  40398c:	e763      	b.n	403856 <_dtoa_r+0x516>
  40398e:	4641      	mov	r1, r8
  403990:	4648      	mov	r0, r9
  403992:	f001 fb85 	bl	4050a0 <__mcmp>
  403996:	2800      	cmp	r0, #0
  403998:	f6bf af73 	bge.w	403882 <_dtoa_r+0x542>
  40399c:	9f02      	ldr	r7, [sp, #8]
  40399e:	4649      	mov	r1, r9
  4039a0:	2300      	movs	r3, #0
  4039a2:	220a      	movs	r2, #10
  4039a4:	4620      	mov	r0, r4
  4039a6:	3f01      	subs	r7, #1
  4039a8:	9702      	str	r7, [sp, #8]
  4039aa:	f001 f9ab 	bl	404d04 <__multadd>
  4039ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4039b0:	4681      	mov	r9, r0
  4039b2:	2b00      	cmp	r3, #0
  4039b4:	f040 83b6 	bne.w	404124 <_dtoa_r+0xde4>
  4039b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4039ba:	2b00      	cmp	r3, #0
  4039bc:	f340 83bf 	ble.w	40413e <_dtoa_r+0xdfe>
  4039c0:	930a      	str	r3, [sp, #40]	; 0x28
  4039c2:	f8dd b010 	ldr.w	fp, [sp, #16]
  4039c6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4039c8:	465d      	mov	r5, fp
  4039ca:	e002      	b.n	4039d2 <_dtoa_r+0x692>
  4039cc:	f001 f99a 	bl	404d04 <__multadd>
  4039d0:	4681      	mov	r9, r0
  4039d2:	4641      	mov	r1, r8
  4039d4:	4648      	mov	r0, r9
  4039d6:	f7ff fc1f 	bl	403218 <quorem>
  4039da:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  4039de:	f805 ab01 	strb.w	sl, [r5], #1
  4039e2:	eba5 030b 	sub.w	r3, r5, fp
  4039e6:	42bb      	cmp	r3, r7
  4039e8:	f04f 020a 	mov.w	r2, #10
  4039ec:	f04f 0300 	mov.w	r3, #0
  4039f0:	4649      	mov	r1, r9
  4039f2:	4620      	mov	r0, r4
  4039f4:	dbea      	blt.n	4039cc <_dtoa_r+0x68c>
  4039f6:	9b04      	ldr	r3, [sp, #16]
  4039f8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4039fa:	2a01      	cmp	r2, #1
  4039fc:	bfac      	ite	ge
  4039fe:	189b      	addge	r3, r3, r2
  403a00:	3301      	addlt	r3, #1
  403a02:	461d      	mov	r5, r3
  403a04:	f04f 0b00 	mov.w	fp, #0
  403a08:	4649      	mov	r1, r9
  403a0a:	2201      	movs	r2, #1
  403a0c:	4620      	mov	r0, r4
  403a0e:	f001 faf5 	bl	404ffc <__lshift>
  403a12:	4641      	mov	r1, r8
  403a14:	4681      	mov	r9, r0
  403a16:	f001 fb43 	bl	4050a0 <__mcmp>
  403a1a:	2800      	cmp	r0, #0
  403a1c:	f340 823d 	ble.w	403e9a <_dtoa_r+0xb5a>
  403a20:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  403a24:	9904      	ldr	r1, [sp, #16]
  403a26:	1e6b      	subs	r3, r5, #1
  403a28:	e004      	b.n	403a34 <_dtoa_r+0x6f4>
  403a2a:	428b      	cmp	r3, r1
  403a2c:	f000 81ae 	beq.w	403d8c <_dtoa_r+0xa4c>
  403a30:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  403a34:	2a39      	cmp	r2, #57	; 0x39
  403a36:	f103 0501 	add.w	r5, r3, #1
  403a3a:	d0f6      	beq.n	403a2a <_dtoa_r+0x6ea>
  403a3c:	3201      	adds	r2, #1
  403a3e:	701a      	strb	r2, [r3, #0]
  403a40:	4641      	mov	r1, r8
  403a42:	4620      	mov	r0, r4
  403a44:	f001 f954 	bl	404cf0 <_Bfree>
  403a48:	2e00      	cmp	r6, #0
  403a4a:	f43f ae3d 	beq.w	4036c8 <_dtoa_r+0x388>
  403a4e:	f1bb 0f00 	cmp.w	fp, #0
  403a52:	d005      	beq.n	403a60 <_dtoa_r+0x720>
  403a54:	45b3      	cmp	fp, r6
  403a56:	d003      	beq.n	403a60 <_dtoa_r+0x720>
  403a58:	4659      	mov	r1, fp
  403a5a:	4620      	mov	r0, r4
  403a5c:	f001 f948 	bl	404cf0 <_Bfree>
  403a60:	4631      	mov	r1, r6
  403a62:	4620      	mov	r0, r4
  403a64:	f001 f944 	bl	404cf0 <_Bfree>
  403a68:	e62e      	b.n	4036c8 <_dtoa_r+0x388>
  403a6a:	2300      	movs	r3, #0
  403a6c:	930b      	str	r3, [sp, #44]	; 0x2c
  403a6e:	9b02      	ldr	r3, [sp, #8]
  403a70:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403a72:	4413      	add	r3, r2
  403a74:	930f      	str	r3, [sp, #60]	; 0x3c
  403a76:	3301      	adds	r3, #1
  403a78:	2b01      	cmp	r3, #1
  403a7a:	461f      	mov	r7, r3
  403a7c:	461e      	mov	r6, r3
  403a7e:	930a      	str	r3, [sp, #40]	; 0x28
  403a80:	bfb8      	it	lt
  403a82:	2701      	movlt	r7, #1
  403a84:	2100      	movs	r1, #0
  403a86:	2f17      	cmp	r7, #23
  403a88:	6461      	str	r1, [r4, #68]	; 0x44
  403a8a:	d90a      	bls.n	403aa2 <_dtoa_r+0x762>
  403a8c:	2201      	movs	r2, #1
  403a8e:	2304      	movs	r3, #4
  403a90:	005b      	lsls	r3, r3, #1
  403a92:	f103 0014 	add.w	r0, r3, #20
  403a96:	4287      	cmp	r7, r0
  403a98:	4611      	mov	r1, r2
  403a9a:	f102 0201 	add.w	r2, r2, #1
  403a9e:	d2f7      	bcs.n	403a90 <_dtoa_r+0x750>
  403aa0:	6461      	str	r1, [r4, #68]	; 0x44
  403aa2:	4620      	mov	r0, r4
  403aa4:	f001 f8fe 	bl	404ca4 <_Balloc>
  403aa8:	2e0e      	cmp	r6, #14
  403aaa:	9004      	str	r0, [sp, #16]
  403aac:	6420      	str	r0, [r4, #64]	; 0x40
  403aae:	f63f ad41 	bhi.w	403534 <_dtoa_r+0x1f4>
  403ab2:	2d00      	cmp	r5, #0
  403ab4:	f43f ad3e 	beq.w	403534 <_dtoa_r+0x1f4>
  403ab8:	9902      	ldr	r1, [sp, #8]
  403aba:	2900      	cmp	r1, #0
  403abc:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403ac0:	f340 8202 	ble.w	403ec8 <_dtoa_r+0xb88>
  403ac4:	4bb8      	ldr	r3, [pc, #736]	; (403da8 <_dtoa_r+0xa68>)
  403ac6:	f001 020f 	and.w	r2, r1, #15
  403aca:	110d      	asrs	r5, r1, #4
  403acc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403ad0:	06e9      	lsls	r1, r5, #27
  403ad2:	e9d3 6700 	ldrd	r6, r7, [r3]
  403ad6:	f140 81ae 	bpl.w	403e36 <_dtoa_r+0xaf6>
  403ada:	4bb4      	ldr	r3, [pc, #720]	; (403dac <_dtoa_r+0xa6c>)
  403adc:	4650      	mov	r0, sl
  403ade:	4659      	mov	r1, fp
  403ae0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403ae4:	f002 f990 	bl	405e08 <__aeabi_ddiv>
  403ae8:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403aec:	f005 050f 	and.w	r5, r5, #15
  403af0:	f04f 0a03 	mov.w	sl, #3
  403af4:	b18d      	cbz	r5, 403b1a <_dtoa_r+0x7da>
  403af6:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 403dac <_dtoa_r+0xa6c>
  403afa:	07ea      	lsls	r2, r5, #31
  403afc:	d509      	bpl.n	403b12 <_dtoa_r+0x7d2>
  403afe:	4630      	mov	r0, r6
  403b00:	4639      	mov	r1, r7
  403b02:	e9d8 2300 	ldrd	r2, r3, [r8]
  403b06:	f002 f855 	bl	405bb4 <__aeabi_dmul>
  403b0a:	f10a 0a01 	add.w	sl, sl, #1
  403b0e:	4606      	mov	r6, r0
  403b10:	460f      	mov	r7, r1
  403b12:	106d      	asrs	r5, r5, #1
  403b14:	f108 0808 	add.w	r8, r8, #8
  403b18:	d1ef      	bne.n	403afa <_dtoa_r+0x7ba>
  403b1a:	463b      	mov	r3, r7
  403b1c:	4632      	mov	r2, r6
  403b1e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403b22:	f002 f971 	bl	405e08 <__aeabi_ddiv>
  403b26:	4607      	mov	r7, r0
  403b28:	4688      	mov	r8, r1
  403b2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403b2c:	b143      	cbz	r3, 403b40 <_dtoa_r+0x800>
  403b2e:	2200      	movs	r2, #0
  403b30:	4b9f      	ldr	r3, [pc, #636]	; (403db0 <_dtoa_r+0xa70>)
  403b32:	4638      	mov	r0, r7
  403b34:	4641      	mov	r1, r8
  403b36:	f002 faaf 	bl	406098 <__aeabi_dcmplt>
  403b3a:	2800      	cmp	r0, #0
  403b3c:	f040 8286 	bne.w	40404c <_dtoa_r+0xd0c>
  403b40:	4650      	mov	r0, sl
  403b42:	f001 ffd1 	bl	405ae8 <__aeabi_i2d>
  403b46:	463a      	mov	r2, r7
  403b48:	4643      	mov	r3, r8
  403b4a:	f002 f833 	bl	405bb4 <__aeabi_dmul>
  403b4e:	4b99      	ldr	r3, [pc, #612]	; (403db4 <_dtoa_r+0xa74>)
  403b50:	2200      	movs	r2, #0
  403b52:	f001 fe7d 	bl	405850 <__adddf3>
  403b56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b58:	4605      	mov	r5, r0
  403b5a:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403b5e:	2b00      	cmp	r3, #0
  403b60:	f000 813e 	beq.w	403de0 <_dtoa_r+0xaa0>
  403b64:	9b02      	ldr	r3, [sp, #8]
  403b66:	9315      	str	r3, [sp, #84]	; 0x54
  403b68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b6a:	9312      	str	r3, [sp, #72]	; 0x48
  403b6c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403b6e:	2b00      	cmp	r3, #0
  403b70:	f000 81fa 	beq.w	403f68 <_dtoa_r+0xc28>
  403b74:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403b76:	4b8c      	ldr	r3, [pc, #560]	; (403da8 <_dtoa_r+0xa68>)
  403b78:	498f      	ldr	r1, [pc, #572]	; (403db8 <_dtoa_r+0xa78>)
  403b7a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403b7e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  403b82:	2000      	movs	r0, #0
  403b84:	f002 f940 	bl	405e08 <__aeabi_ddiv>
  403b88:	462a      	mov	r2, r5
  403b8a:	4633      	mov	r3, r6
  403b8c:	f001 fe5e 	bl	40584c <__aeabi_dsub>
  403b90:	4682      	mov	sl, r0
  403b92:	468b      	mov	fp, r1
  403b94:	4638      	mov	r0, r7
  403b96:	4641      	mov	r1, r8
  403b98:	f002 fabc 	bl	406114 <__aeabi_d2iz>
  403b9c:	4605      	mov	r5, r0
  403b9e:	f001 ffa3 	bl	405ae8 <__aeabi_i2d>
  403ba2:	4602      	mov	r2, r0
  403ba4:	460b      	mov	r3, r1
  403ba6:	4638      	mov	r0, r7
  403ba8:	4641      	mov	r1, r8
  403baa:	f001 fe4f 	bl	40584c <__aeabi_dsub>
  403bae:	3530      	adds	r5, #48	; 0x30
  403bb0:	fa5f f885 	uxtb.w	r8, r5
  403bb4:	9d04      	ldr	r5, [sp, #16]
  403bb6:	4606      	mov	r6, r0
  403bb8:	460f      	mov	r7, r1
  403bba:	f885 8000 	strb.w	r8, [r5]
  403bbe:	4602      	mov	r2, r0
  403bc0:	460b      	mov	r3, r1
  403bc2:	4650      	mov	r0, sl
  403bc4:	4659      	mov	r1, fp
  403bc6:	3501      	adds	r5, #1
  403bc8:	f002 fa84 	bl	4060d4 <__aeabi_dcmpgt>
  403bcc:	2800      	cmp	r0, #0
  403bce:	d154      	bne.n	403c7a <_dtoa_r+0x93a>
  403bd0:	4632      	mov	r2, r6
  403bd2:	463b      	mov	r3, r7
  403bd4:	2000      	movs	r0, #0
  403bd6:	4976      	ldr	r1, [pc, #472]	; (403db0 <_dtoa_r+0xa70>)
  403bd8:	f001 fe38 	bl	40584c <__aeabi_dsub>
  403bdc:	4602      	mov	r2, r0
  403bde:	460b      	mov	r3, r1
  403be0:	4650      	mov	r0, sl
  403be2:	4659      	mov	r1, fp
  403be4:	f002 fa76 	bl	4060d4 <__aeabi_dcmpgt>
  403be8:	2800      	cmp	r0, #0
  403bea:	f040 8270 	bne.w	4040ce <_dtoa_r+0xd8e>
  403bee:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403bf0:	2a01      	cmp	r2, #1
  403bf2:	f000 8111 	beq.w	403e18 <_dtoa_r+0xad8>
  403bf6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403bf8:	9a04      	ldr	r2, [sp, #16]
  403bfa:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403bfe:	4413      	add	r3, r2
  403c00:	4699      	mov	r9, r3
  403c02:	e00d      	b.n	403c20 <_dtoa_r+0x8e0>
  403c04:	2000      	movs	r0, #0
  403c06:	496a      	ldr	r1, [pc, #424]	; (403db0 <_dtoa_r+0xa70>)
  403c08:	f001 fe20 	bl	40584c <__aeabi_dsub>
  403c0c:	4652      	mov	r2, sl
  403c0e:	465b      	mov	r3, fp
  403c10:	f002 fa42 	bl	406098 <__aeabi_dcmplt>
  403c14:	2800      	cmp	r0, #0
  403c16:	f040 8258 	bne.w	4040ca <_dtoa_r+0xd8a>
  403c1a:	454d      	cmp	r5, r9
  403c1c:	f000 80fa 	beq.w	403e14 <_dtoa_r+0xad4>
  403c20:	4650      	mov	r0, sl
  403c22:	4659      	mov	r1, fp
  403c24:	2200      	movs	r2, #0
  403c26:	4b65      	ldr	r3, [pc, #404]	; (403dbc <_dtoa_r+0xa7c>)
  403c28:	f001 ffc4 	bl	405bb4 <__aeabi_dmul>
  403c2c:	2200      	movs	r2, #0
  403c2e:	4b63      	ldr	r3, [pc, #396]	; (403dbc <_dtoa_r+0xa7c>)
  403c30:	4682      	mov	sl, r0
  403c32:	468b      	mov	fp, r1
  403c34:	4630      	mov	r0, r6
  403c36:	4639      	mov	r1, r7
  403c38:	f001 ffbc 	bl	405bb4 <__aeabi_dmul>
  403c3c:	460f      	mov	r7, r1
  403c3e:	4606      	mov	r6, r0
  403c40:	f002 fa68 	bl	406114 <__aeabi_d2iz>
  403c44:	4680      	mov	r8, r0
  403c46:	f001 ff4f 	bl	405ae8 <__aeabi_i2d>
  403c4a:	4602      	mov	r2, r0
  403c4c:	460b      	mov	r3, r1
  403c4e:	4630      	mov	r0, r6
  403c50:	4639      	mov	r1, r7
  403c52:	f001 fdfb 	bl	40584c <__aeabi_dsub>
  403c56:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403c5a:	fa5f f888 	uxtb.w	r8, r8
  403c5e:	4652      	mov	r2, sl
  403c60:	465b      	mov	r3, fp
  403c62:	f805 8b01 	strb.w	r8, [r5], #1
  403c66:	4606      	mov	r6, r0
  403c68:	460f      	mov	r7, r1
  403c6a:	f002 fa15 	bl	406098 <__aeabi_dcmplt>
  403c6e:	4632      	mov	r2, r6
  403c70:	463b      	mov	r3, r7
  403c72:	2800      	cmp	r0, #0
  403c74:	d0c6      	beq.n	403c04 <_dtoa_r+0x8c4>
  403c76:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403c7a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403c7c:	9302      	str	r3, [sp, #8]
  403c7e:	e523      	b.n	4036c8 <_dtoa_r+0x388>
  403c80:	2300      	movs	r3, #0
  403c82:	930b      	str	r3, [sp, #44]	; 0x2c
  403c84:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403c86:	2b00      	cmp	r3, #0
  403c88:	f340 80dc 	ble.w	403e44 <_dtoa_r+0xb04>
  403c8c:	461f      	mov	r7, r3
  403c8e:	461e      	mov	r6, r3
  403c90:	930f      	str	r3, [sp, #60]	; 0x3c
  403c92:	930a      	str	r3, [sp, #40]	; 0x28
  403c94:	e6f6      	b.n	403a84 <_dtoa_r+0x744>
  403c96:	2301      	movs	r3, #1
  403c98:	930b      	str	r3, [sp, #44]	; 0x2c
  403c9a:	e7f3      	b.n	403c84 <_dtoa_r+0x944>
  403c9c:	f1ba 0f00 	cmp.w	sl, #0
  403ca0:	f47f ada8 	bne.w	4037f4 <_dtoa_r+0x4b4>
  403ca4:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403ca8:	2b00      	cmp	r3, #0
  403caa:	f47f adba 	bne.w	403822 <_dtoa_r+0x4e2>
  403cae:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403cb2:	0d3f      	lsrs	r7, r7, #20
  403cb4:	053f      	lsls	r7, r7, #20
  403cb6:	2f00      	cmp	r7, #0
  403cb8:	f000 820d 	beq.w	4040d6 <_dtoa_r+0xd96>
  403cbc:	9b08      	ldr	r3, [sp, #32]
  403cbe:	3301      	adds	r3, #1
  403cc0:	9308      	str	r3, [sp, #32]
  403cc2:	9b06      	ldr	r3, [sp, #24]
  403cc4:	3301      	adds	r3, #1
  403cc6:	9306      	str	r3, [sp, #24]
  403cc8:	2301      	movs	r3, #1
  403cca:	930c      	str	r3, [sp, #48]	; 0x30
  403ccc:	e5ab      	b.n	403826 <_dtoa_r+0x4e6>
  403cce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403cd0:	2b00      	cmp	r3, #0
  403cd2:	f73f ac42 	bgt.w	40355a <_dtoa_r+0x21a>
  403cd6:	f040 8221 	bne.w	40411c <_dtoa_r+0xddc>
  403cda:	2200      	movs	r2, #0
  403cdc:	4b38      	ldr	r3, [pc, #224]	; (403dc0 <_dtoa_r+0xa80>)
  403cde:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403ce2:	f001 ff67 	bl	405bb4 <__aeabi_dmul>
  403ce6:	4652      	mov	r2, sl
  403ce8:	465b      	mov	r3, fp
  403cea:	f002 f9e9 	bl	4060c0 <__aeabi_dcmpge>
  403cee:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  403cf2:	4646      	mov	r6, r8
  403cf4:	2800      	cmp	r0, #0
  403cf6:	d041      	beq.n	403d7c <_dtoa_r+0xa3c>
  403cf8:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403cfa:	9d04      	ldr	r5, [sp, #16]
  403cfc:	43db      	mvns	r3, r3
  403cfe:	9302      	str	r3, [sp, #8]
  403d00:	4641      	mov	r1, r8
  403d02:	4620      	mov	r0, r4
  403d04:	f000 fff4 	bl	404cf0 <_Bfree>
  403d08:	2e00      	cmp	r6, #0
  403d0a:	f43f acdd 	beq.w	4036c8 <_dtoa_r+0x388>
  403d0e:	e6a7      	b.n	403a60 <_dtoa_r+0x720>
  403d10:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403d12:	4649      	mov	r1, r9
  403d14:	4620      	mov	r0, r4
  403d16:	f001 f921 	bl	404f5c <__pow5mult>
  403d1a:	4681      	mov	r9, r0
  403d1c:	e558      	b.n	4037d0 <_dtoa_r+0x490>
  403d1e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403d20:	2a00      	cmp	r2, #0
  403d22:	f000 8187 	beq.w	404034 <_dtoa_r+0xcf4>
  403d26:	f203 4333 	addw	r3, r3, #1075	; 0x433
  403d2a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403d2c:	9d08      	ldr	r5, [sp, #32]
  403d2e:	e4f2      	b.n	403716 <_dtoa_r+0x3d6>
  403d30:	f1ba 0f00 	cmp.w	sl, #0
  403d34:	f47f ad75 	bne.w	403822 <_dtoa_r+0x4e2>
  403d38:	e7b4      	b.n	403ca4 <_dtoa_r+0x964>
  403d3a:	f000 ffe3 	bl	404d04 <__multadd>
  403d3e:	4647      	mov	r7, r8
  403d40:	4606      	mov	r6, r0
  403d42:	4683      	mov	fp, r0
  403d44:	e5be      	b.n	4038c4 <_dtoa_r+0x584>
  403d46:	4601      	mov	r1, r0
  403d48:	4620      	mov	r0, r4
  403d4a:	9306      	str	r3, [sp, #24]
  403d4c:	f000 ffd0 	bl	404cf0 <_Bfree>
  403d50:	2201      	movs	r2, #1
  403d52:	9b06      	ldr	r3, [sp, #24]
  403d54:	e5e0      	b.n	403918 <_dtoa_r+0x5d8>
  403d56:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403d58:	2b02      	cmp	r3, #2
  403d5a:	f77f ad96 	ble.w	40388a <_dtoa_r+0x54a>
  403d5e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d60:	2b00      	cmp	r3, #0
  403d62:	d1c9      	bne.n	403cf8 <_dtoa_r+0x9b8>
  403d64:	4641      	mov	r1, r8
  403d66:	2205      	movs	r2, #5
  403d68:	4620      	mov	r0, r4
  403d6a:	f000 ffcb 	bl	404d04 <__multadd>
  403d6e:	4601      	mov	r1, r0
  403d70:	4680      	mov	r8, r0
  403d72:	4648      	mov	r0, r9
  403d74:	f001 f994 	bl	4050a0 <__mcmp>
  403d78:	2800      	cmp	r0, #0
  403d7a:	ddbd      	ble.n	403cf8 <_dtoa_r+0x9b8>
  403d7c:	9a02      	ldr	r2, [sp, #8]
  403d7e:	9904      	ldr	r1, [sp, #16]
  403d80:	2331      	movs	r3, #49	; 0x31
  403d82:	3201      	adds	r2, #1
  403d84:	9202      	str	r2, [sp, #8]
  403d86:	700b      	strb	r3, [r1, #0]
  403d88:	1c4d      	adds	r5, r1, #1
  403d8a:	e7b9      	b.n	403d00 <_dtoa_r+0x9c0>
  403d8c:	9a02      	ldr	r2, [sp, #8]
  403d8e:	3201      	adds	r2, #1
  403d90:	9202      	str	r2, [sp, #8]
  403d92:	9a04      	ldr	r2, [sp, #16]
  403d94:	2331      	movs	r3, #49	; 0x31
  403d96:	7013      	strb	r3, [r2, #0]
  403d98:	e652      	b.n	403a40 <_dtoa_r+0x700>
  403d9a:	2301      	movs	r3, #1
  403d9c:	930b      	str	r3, [sp, #44]	; 0x2c
  403d9e:	e666      	b.n	403a6e <_dtoa_r+0x72e>
  403da0:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403da4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403da6:	e48f      	b.n	4036c8 <_dtoa_r+0x388>
  403da8:	00406cc0 	.word	0x00406cc0
  403dac:	00406c98 	.word	0x00406c98
  403db0:	3ff00000 	.word	0x3ff00000
  403db4:	401c0000 	.word	0x401c0000
  403db8:	3fe00000 	.word	0x3fe00000
  403dbc:	40240000 	.word	0x40240000
  403dc0:	40140000 	.word	0x40140000
  403dc4:	4650      	mov	r0, sl
  403dc6:	f001 fe8f 	bl	405ae8 <__aeabi_i2d>
  403dca:	463a      	mov	r2, r7
  403dcc:	4643      	mov	r3, r8
  403dce:	f001 fef1 	bl	405bb4 <__aeabi_dmul>
  403dd2:	2200      	movs	r2, #0
  403dd4:	4bc1      	ldr	r3, [pc, #772]	; (4040dc <_dtoa_r+0xd9c>)
  403dd6:	f001 fd3b 	bl	405850 <__adddf3>
  403dda:	4605      	mov	r5, r0
  403ddc:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403de0:	4641      	mov	r1, r8
  403de2:	2200      	movs	r2, #0
  403de4:	4bbe      	ldr	r3, [pc, #760]	; (4040e0 <_dtoa_r+0xda0>)
  403de6:	4638      	mov	r0, r7
  403de8:	f001 fd30 	bl	40584c <__aeabi_dsub>
  403dec:	462a      	mov	r2, r5
  403dee:	4633      	mov	r3, r6
  403df0:	4682      	mov	sl, r0
  403df2:	468b      	mov	fp, r1
  403df4:	f002 f96e 	bl	4060d4 <__aeabi_dcmpgt>
  403df8:	4680      	mov	r8, r0
  403dfa:	2800      	cmp	r0, #0
  403dfc:	f040 8110 	bne.w	404020 <_dtoa_r+0xce0>
  403e00:	462a      	mov	r2, r5
  403e02:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  403e06:	4650      	mov	r0, sl
  403e08:	4659      	mov	r1, fp
  403e0a:	f002 f945 	bl	406098 <__aeabi_dcmplt>
  403e0e:	b118      	cbz	r0, 403e18 <_dtoa_r+0xad8>
  403e10:	4646      	mov	r6, r8
  403e12:	e771      	b.n	403cf8 <_dtoa_r+0x9b8>
  403e14:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403e18:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  403e1c:	f7ff bb8a 	b.w	403534 <_dtoa_r+0x1f4>
  403e20:	9804      	ldr	r0, [sp, #16]
  403e22:	f7ff babb 	b.w	40339c <_dtoa_r+0x5c>
  403e26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403e28:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403e2a:	970c      	str	r7, [sp, #48]	; 0x30
  403e2c:	1afb      	subs	r3, r7, r3
  403e2e:	441a      	add	r2, r3
  403e30:	920d      	str	r2, [sp, #52]	; 0x34
  403e32:	2700      	movs	r7, #0
  403e34:	e469      	b.n	40370a <_dtoa_r+0x3ca>
  403e36:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  403e3a:	f04f 0a02 	mov.w	sl, #2
  403e3e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  403e42:	e657      	b.n	403af4 <_dtoa_r+0x7b4>
  403e44:	2100      	movs	r1, #0
  403e46:	2301      	movs	r3, #1
  403e48:	6461      	str	r1, [r4, #68]	; 0x44
  403e4a:	4620      	mov	r0, r4
  403e4c:	9325      	str	r3, [sp, #148]	; 0x94
  403e4e:	f000 ff29 	bl	404ca4 <_Balloc>
  403e52:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403e54:	9004      	str	r0, [sp, #16]
  403e56:	6420      	str	r0, [r4, #64]	; 0x40
  403e58:	930a      	str	r3, [sp, #40]	; 0x28
  403e5a:	930f      	str	r3, [sp, #60]	; 0x3c
  403e5c:	e629      	b.n	403ab2 <_dtoa_r+0x772>
  403e5e:	2a00      	cmp	r2, #0
  403e60:	46d0      	mov	r8, sl
  403e62:	f8cd b018 	str.w	fp, [sp, #24]
  403e66:	469a      	mov	sl, r3
  403e68:	dd11      	ble.n	403e8e <_dtoa_r+0xb4e>
  403e6a:	4649      	mov	r1, r9
  403e6c:	2201      	movs	r2, #1
  403e6e:	4620      	mov	r0, r4
  403e70:	f001 f8c4 	bl	404ffc <__lshift>
  403e74:	4641      	mov	r1, r8
  403e76:	4681      	mov	r9, r0
  403e78:	f001 f912 	bl	4050a0 <__mcmp>
  403e7c:	2800      	cmp	r0, #0
  403e7e:	f340 8146 	ble.w	40410e <_dtoa_r+0xdce>
  403e82:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  403e86:	f000 8106 	beq.w	404096 <_dtoa_r+0xd56>
  403e8a:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  403e8e:	46b3      	mov	fp, r6
  403e90:	f887 a000 	strb.w	sl, [r7]
  403e94:	1c7d      	adds	r5, r7, #1
  403e96:	9e06      	ldr	r6, [sp, #24]
  403e98:	e5d2      	b.n	403a40 <_dtoa_r+0x700>
  403e9a:	d104      	bne.n	403ea6 <_dtoa_r+0xb66>
  403e9c:	f01a 0f01 	tst.w	sl, #1
  403ea0:	d001      	beq.n	403ea6 <_dtoa_r+0xb66>
  403ea2:	e5bd      	b.n	403a20 <_dtoa_r+0x6e0>
  403ea4:	4615      	mov	r5, r2
  403ea6:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403eaa:	2b30      	cmp	r3, #48	; 0x30
  403eac:	f105 32ff 	add.w	r2, r5, #4294967295
  403eb0:	d0f8      	beq.n	403ea4 <_dtoa_r+0xb64>
  403eb2:	e5c5      	b.n	403a40 <_dtoa_r+0x700>
  403eb4:	9904      	ldr	r1, [sp, #16]
  403eb6:	2230      	movs	r2, #48	; 0x30
  403eb8:	700a      	strb	r2, [r1, #0]
  403eba:	9a02      	ldr	r2, [sp, #8]
  403ebc:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403ec0:	3201      	adds	r2, #1
  403ec2:	9202      	str	r2, [sp, #8]
  403ec4:	f7ff bbfc 	b.w	4036c0 <_dtoa_r+0x380>
  403ec8:	f000 80bb 	beq.w	404042 <_dtoa_r+0xd02>
  403ecc:	9b02      	ldr	r3, [sp, #8]
  403ece:	425d      	negs	r5, r3
  403ed0:	4b84      	ldr	r3, [pc, #528]	; (4040e4 <_dtoa_r+0xda4>)
  403ed2:	f005 020f 	and.w	r2, r5, #15
  403ed6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403eda:	e9d3 2300 	ldrd	r2, r3, [r3]
  403ede:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  403ee2:	f001 fe67 	bl	405bb4 <__aeabi_dmul>
  403ee6:	112d      	asrs	r5, r5, #4
  403ee8:	4607      	mov	r7, r0
  403eea:	4688      	mov	r8, r1
  403eec:	f000 812c 	beq.w	404148 <_dtoa_r+0xe08>
  403ef0:	4e7d      	ldr	r6, [pc, #500]	; (4040e8 <_dtoa_r+0xda8>)
  403ef2:	f04f 0a02 	mov.w	sl, #2
  403ef6:	07eb      	lsls	r3, r5, #31
  403ef8:	d509      	bpl.n	403f0e <_dtoa_r+0xbce>
  403efa:	4638      	mov	r0, r7
  403efc:	4641      	mov	r1, r8
  403efe:	e9d6 2300 	ldrd	r2, r3, [r6]
  403f02:	f001 fe57 	bl	405bb4 <__aeabi_dmul>
  403f06:	f10a 0a01 	add.w	sl, sl, #1
  403f0a:	4607      	mov	r7, r0
  403f0c:	4688      	mov	r8, r1
  403f0e:	106d      	asrs	r5, r5, #1
  403f10:	f106 0608 	add.w	r6, r6, #8
  403f14:	d1ef      	bne.n	403ef6 <_dtoa_r+0xbb6>
  403f16:	e608      	b.n	403b2a <_dtoa_r+0x7ea>
  403f18:	6871      	ldr	r1, [r6, #4]
  403f1a:	4620      	mov	r0, r4
  403f1c:	f000 fec2 	bl	404ca4 <_Balloc>
  403f20:	6933      	ldr	r3, [r6, #16]
  403f22:	3302      	adds	r3, #2
  403f24:	009a      	lsls	r2, r3, #2
  403f26:	4605      	mov	r5, r0
  403f28:	f106 010c 	add.w	r1, r6, #12
  403f2c:	300c      	adds	r0, #12
  403f2e:	f000 fdaf 	bl	404a90 <memcpy>
  403f32:	4629      	mov	r1, r5
  403f34:	2201      	movs	r2, #1
  403f36:	4620      	mov	r0, r4
  403f38:	f001 f860 	bl	404ffc <__lshift>
  403f3c:	9006      	str	r0, [sp, #24]
  403f3e:	e4b5      	b.n	4038ac <_dtoa_r+0x56c>
  403f40:	2b39      	cmp	r3, #57	; 0x39
  403f42:	f8cd b018 	str.w	fp, [sp, #24]
  403f46:	46d0      	mov	r8, sl
  403f48:	f000 80a5 	beq.w	404096 <_dtoa_r+0xd56>
  403f4c:	f103 0a01 	add.w	sl, r3, #1
  403f50:	46b3      	mov	fp, r6
  403f52:	f887 a000 	strb.w	sl, [r7]
  403f56:	1c7d      	adds	r5, r7, #1
  403f58:	9e06      	ldr	r6, [sp, #24]
  403f5a:	e571      	b.n	403a40 <_dtoa_r+0x700>
  403f5c:	465a      	mov	r2, fp
  403f5e:	46d0      	mov	r8, sl
  403f60:	46b3      	mov	fp, r6
  403f62:	469a      	mov	sl, r3
  403f64:	4616      	mov	r6, r2
  403f66:	e54f      	b.n	403a08 <_dtoa_r+0x6c8>
  403f68:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403f6a:	495e      	ldr	r1, [pc, #376]	; (4040e4 <_dtoa_r+0xda4>)
  403f6c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  403f70:	462a      	mov	r2, r5
  403f72:	4633      	mov	r3, r6
  403f74:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  403f78:	f001 fe1c 	bl	405bb4 <__aeabi_dmul>
  403f7c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  403f80:	4638      	mov	r0, r7
  403f82:	4641      	mov	r1, r8
  403f84:	f002 f8c6 	bl	406114 <__aeabi_d2iz>
  403f88:	4605      	mov	r5, r0
  403f8a:	f001 fdad 	bl	405ae8 <__aeabi_i2d>
  403f8e:	460b      	mov	r3, r1
  403f90:	4602      	mov	r2, r0
  403f92:	4641      	mov	r1, r8
  403f94:	4638      	mov	r0, r7
  403f96:	f001 fc59 	bl	40584c <__aeabi_dsub>
  403f9a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403f9c:	460f      	mov	r7, r1
  403f9e:	9904      	ldr	r1, [sp, #16]
  403fa0:	3530      	adds	r5, #48	; 0x30
  403fa2:	2b01      	cmp	r3, #1
  403fa4:	700d      	strb	r5, [r1, #0]
  403fa6:	4606      	mov	r6, r0
  403fa8:	f101 0501 	add.w	r5, r1, #1
  403fac:	d026      	beq.n	403ffc <_dtoa_r+0xcbc>
  403fae:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403fb0:	9a04      	ldr	r2, [sp, #16]
  403fb2:	f8df b13c 	ldr.w	fp, [pc, #316]	; 4040f0 <_dtoa_r+0xdb0>
  403fb6:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403fba:	4413      	add	r3, r2
  403fbc:	f04f 0a00 	mov.w	sl, #0
  403fc0:	4699      	mov	r9, r3
  403fc2:	4652      	mov	r2, sl
  403fc4:	465b      	mov	r3, fp
  403fc6:	4630      	mov	r0, r6
  403fc8:	4639      	mov	r1, r7
  403fca:	f001 fdf3 	bl	405bb4 <__aeabi_dmul>
  403fce:	460f      	mov	r7, r1
  403fd0:	4606      	mov	r6, r0
  403fd2:	f002 f89f 	bl	406114 <__aeabi_d2iz>
  403fd6:	4680      	mov	r8, r0
  403fd8:	f001 fd86 	bl	405ae8 <__aeabi_i2d>
  403fdc:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403fe0:	4602      	mov	r2, r0
  403fe2:	460b      	mov	r3, r1
  403fe4:	4630      	mov	r0, r6
  403fe6:	4639      	mov	r1, r7
  403fe8:	f001 fc30 	bl	40584c <__aeabi_dsub>
  403fec:	f805 8b01 	strb.w	r8, [r5], #1
  403ff0:	454d      	cmp	r5, r9
  403ff2:	4606      	mov	r6, r0
  403ff4:	460f      	mov	r7, r1
  403ff6:	d1e4      	bne.n	403fc2 <_dtoa_r+0xc82>
  403ff8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403ffc:	4b3b      	ldr	r3, [pc, #236]	; (4040ec <_dtoa_r+0xdac>)
  403ffe:	2200      	movs	r2, #0
  404000:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  404004:	f001 fc24 	bl	405850 <__adddf3>
  404008:	4632      	mov	r2, r6
  40400a:	463b      	mov	r3, r7
  40400c:	f002 f844 	bl	406098 <__aeabi_dcmplt>
  404010:	2800      	cmp	r0, #0
  404012:	d046      	beq.n	4040a2 <_dtoa_r+0xd62>
  404014:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404016:	9302      	str	r3, [sp, #8]
  404018:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40401c:	f7ff bb43 	b.w	4036a6 <_dtoa_r+0x366>
  404020:	f04f 0800 	mov.w	r8, #0
  404024:	4646      	mov	r6, r8
  404026:	e6a9      	b.n	403d7c <_dtoa_r+0xa3c>
  404028:	9b08      	ldr	r3, [sp, #32]
  40402a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40402c:	1a9d      	subs	r5, r3, r2
  40402e:	2300      	movs	r3, #0
  404030:	f7ff bb71 	b.w	403716 <_dtoa_r+0x3d6>
  404034:	9b18      	ldr	r3, [sp, #96]	; 0x60
  404036:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404038:	9d08      	ldr	r5, [sp, #32]
  40403a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  40403e:	f7ff bb6a 	b.w	403716 <_dtoa_r+0x3d6>
  404042:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  404046:	f04f 0a02 	mov.w	sl, #2
  40404a:	e56e      	b.n	403b2a <_dtoa_r+0x7ea>
  40404c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40404e:	2b00      	cmp	r3, #0
  404050:	f43f aeb8 	beq.w	403dc4 <_dtoa_r+0xa84>
  404054:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404056:	2b00      	cmp	r3, #0
  404058:	f77f aede 	ble.w	403e18 <_dtoa_r+0xad8>
  40405c:	2200      	movs	r2, #0
  40405e:	4b24      	ldr	r3, [pc, #144]	; (4040f0 <_dtoa_r+0xdb0>)
  404060:	4638      	mov	r0, r7
  404062:	4641      	mov	r1, r8
  404064:	f001 fda6 	bl	405bb4 <__aeabi_dmul>
  404068:	4607      	mov	r7, r0
  40406a:	4688      	mov	r8, r1
  40406c:	f10a 0001 	add.w	r0, sl, #1
  404070:	f001 fd3a 	bl	405ae8 <__aeabi_i2d>
  404074:	463a      	mov	r2, r7
  404076:	4643      	mov	r3, r8
  404078:	f001 fd9c 	bl	405bb4 <__aeabi_dmul>
  40407c:	2200      	movs	r2, #0
  40407e:	4b17      	ldr	r3, [pc, #92]	; (4040dc <_dtoa_r+0xd9c>)
  404080:	f001 fbe6 	bl	405850 <__adddf3>
  404084:	9a02      	ldr	r2, [sp, #8]
  404086:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404088:	9312      	str	r3, [sp, #72]	; 0x48
  40408a:	3a01      	subs	r2, #1
  40408c:	4605      	mov	r5, r0
  40408e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404092:	9215      	str	r2, [sp, #84]	; 0x54
  404094:	e56a      	b.n	403b6c <_dtoa_r+0x82c>
  404096:	2239      	movs	r2, #57	; 0x39
  404098:	46b3      	mov	fp, r6
  40409a:	703a      	strb	r2, [r7, #0]
  40409c:	9e06      	ldr	r6, [sp, #24]
  40409e:	1c7d      	adds	r5, r7, #1
  4040a0:	e4c0      	b.n	403a24 <_dtoa_r+0x6e4>
  4040a2:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  4040a6:	2000      	movs	r0, #0
  4040a8:	4910      	ldr	r1, [pc, #64]	; (4040ec <_dtoa_r+0xdac>)
  4040aa:	f001 fbcf 	bl	40584c <__aeabi_dsub>
  4040ae:	4632      	mov	r2, r6
  4040b0:	463b      	mov	r3, r7
  4040b2:	f002 f80f 	bl	4060d4 <__aeabi_dcmpgt>
  4040b6:	b908      	cbnz	r0, 4040bc <_dtoa_r+0xd7c>
  4040b8:	e6ae      	b.n	403e18 <_dtoa_r+0xad8>
  4040ba:	4615      	mov	r5, r2
  4040bc:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4040c0:	2b30      	cmp	r3, #48	; 0x30
  4040c2:	f105 32ff 	add.w	r2, r5, #4294967295
  4040c6:	d0f8      	beq.n	4040ba <_dtoa_r+0xd7a>
  4040c8:	e5d7      	b.n	403c7a <_dtoa_r+0x93a>
  4040ca:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4040ce:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4040d0:	9302      	str	r3, [sp, #8]
  4040d2:	f7ff bae8 	b.w	4036a6 <_dtoa_r+0x366>
  4040d6:	970c      	str	r7, [sp, #48]	; 0x30
  4040d8:	f7ff bba5 	b.w	403826 <_dtoa_r+0x4e6>
  4040dc:	401c0000 	.word	0x401c0000
  4040e0:	40140000 	.word	0x40140000
  4040e4:	00406cc0 	.word	0x00406cc0
  4040e8:	00406c98 	.word	0x00406c98
  4040ec:	3fe00000 	.word	0x3fe00000
  4040f0:	40240000 	.word	0x40240000
  4040f4:	2b39      	cmp	r3, #57	; 0x39
  4040f6:	f8cd b018 	str.w	fp, [sp, #24]
  4040fa:	46d0      	mov	r8, sl
  4040fc:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404100:	469a      	mov	sl, r3
  404102:	d0c8      	beq.n	404096 <_dtoa_r+0xd56>
  404104:	f1bb 0f00 	cmp.w	fp, #0
  404108:	f73f aebf 	bgt.w	403e8a <_dtoa_r+0xb4a>
  40410c:	e6bf      	b.n	403e8e <_dtoa_r+0xb4e>
  40410e:	f47f aebe 	bne.w	403e8e <_dtoa_r+0xb4e>
  404112:	f01a 0f01 	tst.w	sl, #1
  404116:	f43f aeba 	beq.w	403e8e <_dtoa_r+0xb4e>
  40411a:	e6b2      	b.n	403e82 <_dtoa_r+0xb42>
  40411c:	f04f 0800 	mov.w	r8, #0
  404120:	4646      	mov	r6, r8
  404122:	e5e9      	b.n	403cf8 <_dtoa_r+0x9b8>
  404124:	4631      	mov	r1, r6
  404126:	2300      	movs	r3, #0
  404128:	220a      	movs	r2, #10
  40412a:	4620      	mov	r0, r4
  40412c:	f000 fdea 	bl	404d04 <__multadd>
  404130:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404132:	2b00      	cmp	r3, #0
  404134:	4606      	mov	r6, r0
  404136:	dd0a      	ble.n	40414e <_dtoa_r+0xe0e>
  404138:	930a      	str	r3, [sp, #40]	; 0x28
  40413a:	f7ff bbaa 	b.w	403892 <_dtoa_r+0x552>
  40413e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404140:	2b02      	cmp	r3, #2
  404142:	dc23      	bgt.n	40418c <_dtoa_r+0xe4c>
  404144:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404146:	e43b      	b.n	4039c0 <_dtoa_r+0x680>
  404148:	f04f 0a02 	mov.w	sl, #2
  40414c:	e4ed      	b.n	403b2a <_dtoa_r+0x7ea>
  40414e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404150:	2b02      	cmp	r3, #2
  404152:	dc1b      	bgt.n	40418c <_dtoa_r+0xe4c>
  404154:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404156:	e7ef      	b.n	404138 <_dtoa_r+0xdf8>
  404158:	2500      	movs	r5, #0
  40415a:	6465      	str	r5, [r4, #68]	; 0x44
  40415c:	4629      	mov	r1, r5
  40415e:	4620      	mov	r0, r4
  404160:	f000 fda0 	bl	404ca4 <_Balloc>
  404164:	f04f 33ff 	mov.w	r3, #4294967295
  404168:	930a      	str	r3, [sp, #40]	; 0x28
  40416a:	930f      	str	r3, [sp, #60]	; 0x3c
  40416c:	2301      	movs	r3, #1
  40416e:	9004      	str	r0, [sp, #16]
  404170:	9525      	str	r5, [sp, #148]	; 0x94
  404172:	6420      	str	r0, [r4, #64]	; 0x40
  404174:	930b      	str	r3, [sp, #44]	; 0x2c
  404176:	f7ff b9dd 	b.w	403534 <_dtoa_r+0x1f4>
  40417a:	2501      	movs	r5, #1
  40417c:	f7ff b9a5 	b.w	4034ca <_dtoa_r+0x18a>
  404180:	f43f ab69 	beq.w	403856 <_dtoa_r+0x516>
  404184:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404188:	f7ff bbf9 	b.w	40397e <_dtoa_r+0x63e>
  40418c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40418e:	930a      	str	r3, [sp, #40]	; 0x28
  404190:	e5e5      	b.n	403d5e <_dtoa_r+0xa1e>
  404192:	bf00      	nop

00404194 <__libc_fini_array>:
  404194:	b538      	push	{r3, r4, r5, lr}
  404196:	4c0a      	ldr	r4, [pc, #40]	; (4041c0 <__libc_fini_array+0x2c>)
  404198:	4d0a      	ldr	r5, [pc, #40]	; (4041c4 <__libc_fini_array+0x30>)
  40419a:	1b64      	subs	r4, r4, r5
  40419c:	10a4      	asrs	r4, r4, #2
  40419e:	d00a      	beq.n	4041b6 <__libc_fini_array+0x22>
  4041a0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4041a4:	3b01      	subs	r3, #1
  4041a6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4041aa:	3c01      	subs	r4, #1
  4041ac:	f855 3904 	ldr.w	r3, [r5], #-4
  4041b0:	4798      	blx	r3
  4041b2:	2c00      	cmp	r4, #0
  4041b4:	d1f9      	bne.n	4041aa <__libc_fini_array+0x16>
  4041b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4041ba:	f002 be77 	b.w	406eac <_fini>
  4041be:	bf00      	nop
  4041c0:	00406ebc 	.word	0x00406ebc
  4041c4:	00406eb8 	.word	0x00406eb8

004041c8 <_malloc_trim_r>:
  4041c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4041ca:	4f24      	ldr	r7, [pc, #144]	; (40425c <_malloc_trim_r+0x94>)
  4041cc:	460c      	mov	r4, r1
  4041ce:	4606      	mov	r6, r0
  4041d0:	f000 fd5c 	bl	404c8c <__malloc_lock>
  4041d4:	68bb      	ldr	r3, [r7, #8]
  4041d6:	685d      	ldr	r5, [r3, #4]
  4041d8:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  4041dc:	310f      	adds	r1, #15
  4041de:	f025 0503 	bic.w	r5, r5, #3
  4041e2:	4429      	add	r1, r5
  4041e4:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  4041e8:	f021 010f 	bic.w	r1, r1, #15
  4041ec:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4041f0:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4041f4:	db07      	blt.n	404206 <_malloc_trim_r+0x3e>
  4041f6:	2100      	movs	r1, #0
  4041f8:	4630      	mov	r0, r6
  4041fa:	f001 f9f3 	bl	4055e4 <_sbrk_r>
  4041fe:	68bb      	ldr	r3, [r7, #8]
  404200:	442b      	add	r3, r5
  404202:	4298      	cmp	r0, r3
  404204:	d004      	beq.n	404210 <_malloc_trim_r+0x48>
  404206:	4630      	mov	r0, r6
  404208:	f000 fd46 	bl	404c98 <__malloc_unlock>
  40420c:	2000      	movs	r0, #0
  40420e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404210:	4261      	negs	r1, r4
  404212:	4630      	mov	r0, r6
  404214:	f001 f9e6 	bl	4055e4 <_sbrk_r>
  404218:	3001      	adds	r0, #1
  40421a:	d00d      	beq.n	404238 <_malloc_trim_r+0x70>
  40421c:	4b10      	ldr	r3, [pc, #64]	; (404260 <_malloc_trim_r+0x98>)
  40421e:	68ba      	ldr	r2, [r7, #8]
  404220:	6819      	ldr	r1, [r3, #0]
  404222:	1b2d      	subs	r5, r5, r4
  404224:	f045 0501 	orr.w	r5, r5, #1
  404228:	4630      	mov	r0, r6
  40422a:	1b09      	subs	r1, r1, r4
  40422c:	6055      	str	r5, [r2, #4]
  40422e:	6019      	str	r1, [r3, #0]
  404230:	f000 fd32 	bl	404c98 <__malloc_unlock>
  404234:	2001      	movs	r0, #1
  404236:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404238:	2100      	movs	r1, #0
  40423a:	4630      	mov	r0, r6
  40423c:	f001 f9d2 	bl	4055e4 <_sbrk_r>
  404240:	68ba      	ldr	r2, [r7, #8]
  404242:	1a83      	subs	r3, r0, r2
  404244:	2b0f      	cmp	r3, #15
  404246:	ddde      	ble.n	404206 <_malloc_trim_r+0x3e>
  404248:	4c06      	ldr	r4, [pc, #24]	; (404264 <_malloc_trim_r+0x9c>)
  40424a:	4905      	ldr	r1, [pc, #20]	; (404260 <_malloc_trim_r+0x98>)
  40424c:	6824      	ldr	r4, [r4, #0]
  40424e:	f043 0301 	orr.w	r3, r3, #1
  404252:	1b00      	subs	r0, r0, r4
  404254:	6053      	str	r3, [r2, #4]
  404256:	6008      	str	r0, [r1, #0]
  404258:	e7d5      	b.n	404206 <_malloc_trim_r+0x3e>
  40425a:	bf00      	nop
  40425c:	200005b0 	.word	0x200005b0
  404260:	20000e24 	.word	0x20000e24
  404264:	200009b8 	.word	0x200009b8

00404268 <_free_r>:
  404268:	2900      	cmp	r1, #0
  40426a:	d044      	beq.n	4042f6 <_free_r+0x8e>
  40426c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404270:	460d      	mov	r5, r1
  404272:	4680      	mov	r8, r0
  404274:	f000 fd0a 	bl	404c8c <__malloc_lock>
  404278:	f855 7c04 	ldr.w	r7, [r5, #-4]
  40427c:	4969      	ldr	r1, [pc, #420]	; (404424 <_free_r+0x1bc>)
  40427e:	f027 0301 	bic.w	r3, r7, #1
  404282:	f1a5 0408 	sub.w	r4, r5, #8
  404286:	18e2      	adds	r2, r4, r3
  404288:	688e      	ldr	r6, [r1, #8]
  40428a:	6850      	ldr	r0, [r2, #4]
  40428c:	42b2      	cmp	r2, r6
  40428e:	f020 0003 	bic.w	r0, r0, #3
  404292:	d05e      	beq.n	404352 <_free_r+0xea>
  404294:	07fe      	lsls	r6, r7, #31
  404296:	6050      	str	r0, [r2, #4]
  404298:	d40b      	bmi.n	4042b2 <_free_r+0x4a>
  40429a:	f855 7c08 	ldr.w	r7, [r5, #-8]
  40429e:	1be4      	subs	r4, r4, r7
  4042a0:	f101 0e08 	add.w	lr, r1, #8
  4042a4:	68a5      	ldr	r5, [r4, #8]
  4042a6:	4575      	cmp	r5, lr
  4042a8:	443b      	add	r3, r7
  4042aa:	d06d      	beq.n	404388 <_free_r+0x120>
  4042ac:	68e7      	ldr	r7, [r4, #12]
  4042ae:	60ef      	str	r7, [r5, #12]
  4042b0:	60bd      	str	r5, [r7, #8]
  4042b2:	1815      	adds	r5, r2, r0
  4042b4:	686d      	ldr	r5, [r5, #4]
  4042b6:	07ed      	lsls	r5, r5, #31
  4042b8:	d53e      	bpl.n	404338 <_free_r+0xd0>
  4042ba:	f043 0201 	orr.w	r2, r3, #1
  4042be:	6062      	str	r2, [r4, #4]
  4042c0:	50e3      	str	r3, [r4, r3]
  4042c2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4042c6:	d217      	bcs.n	4042f8 <_free_r+0x90>
  4042c8:	08db      	lsrs	r3, r3, #3
  4042ca:	1c58      	adds	r0, r3, #1
  4042cc:	109a      	asrs	r2, r3, #2
  4042ce:	684d      	ldr	r5, [r1, #4]
  4042d0:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  4042d4:	60a7      	str	r7, [r4, #8]
  4042d6:	2301      	movs	r3, #1
  4042d8:	4093      	lsls	r3, r2
  4042da:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  4042de:	432b      	orrs	r3, r5
  4042e0:	3a08      	subs	r2, #8
  4042e2:	60e2      	str	r2, [r4, #12]
  4042e4:	604b      	str	r3, [r1, #4]
  4042e6:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  4042ea:	60fc      	str	r4, [r7, #12]
  4042ec:	4640      	mov	r0, r8
  4042ee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4042f2:	f000 bcd1 	b.w	404c98 <__malloc_unlock>
  4042f6:	4770      	bx	lr
  4042f8:	0a5a      	lsrs	r2, r3, #9
  4042fa:	2a04      	cmp	r2, #4
  4042fc:	d852      	bhi.n	4043a4 <_free_r+0x13c>
  4042fe:	099a      	lsrs	r2, r3, #6
  404300:	f102 0739 	add.w	r7, r2, #57	; 0x39
  404304:	00ff      	lsls	r7, r7, #3
  404306:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40430a:	19c8      	adds	r0, r1, r7
  40430c:	59ca      	ldr	r2, [r1, r7]
  40430e:	3808      	subs	r0, #8
  404310:	4290      	cmp	r0, r2
  404312:	d04f      	beq.n	4043b4 <_free_r+0x14c>
  404314:	6851      	ldr	r1, [r2, #4]
  404316:	f021 0103 	bic.w	r1, r1, #3
  40431a:	428b      	cmp	r3, r1
  40431c:	d232      	bcs.n	404384 <_free_r+0x11c>
  40431e:	6892      	ldr	r2, [r2, #8]
  404320:	4290      	cmp	r0, r2
  404322:	d1f7      	bne.n	404314 <_free_r+0xac>
  404324:	68c3      	ldr	r3, [r0, #12]
  404326:	60a0      	str	r0, [r4, #8]
  404328:	60e3      	str	r3, [r4, #12]
  40432a:	609c      	str	r4, [r3, #8]
  40432c:	60c4      	str	r4, [r0, #12]
  40432e:	4640      	mov	r0, r8
  404330:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404334:	f000 bcb0 	b.w	404c98 <__malloc_unlock>
  404338:	6895      	ldr	r5, [r2, #8]
  40433a:	4f3b      	ldr	r7, [pc, #236]	; (404428 <_free_r+0x1c0>)
  40433c:	42bd      	cmp	r5, r7
  40433e:	4403      	add	r3, r0
  404340:	d040      	beq.n	4043c4 <_free_r+0x15c>
  404342:	68d0      	ldr	r0, [r2, #12]
  404344:	60e8      	str	r0, [r5, #12]
  404346:	f043 0201 	orr.w	r2, r3, #1
  40434a:	6085      	str	r5, [r0, #8]
  40434c:	6062      	str	r2, [r4, #4]
  40434e:	50e3      	str	r3, [r4, r3]
  404350:	e7b7      	b.n	4042c2 <_free_r+0x5a>
  404352:	07ff      	lsls	r7, r7, #31
  404354:	4403      	add	r3, r0
  404356:	d407      	bmi.n	404368 <_free_r+0x100>
  404358:	f855 2c08 	ldr.w	r2, [r5, #-8]
  40435c:	1aa4      	subs	r4, r4, r2
  40435e:	4413      	add	r3, r2
  404360:	68a0      	ldr	r0, [r4, #8]
  404362:	68e2      	ldr	r2, [r4, #12]
  404364:	60c2      	str	r2, [r0, #12]
  404366:	6090      	str	r0, [r2, #8]
  404368:	4a30      	ldr	r2, [pc, #192]	; (40442c <_free_r+0x1c4>)
  40436a:	6812      	ldr	r2, [r2, #0]
  40436c:	f043 0001 	orr.w	r0, r3, #1
  404370:	4293      	cmp	r3, r2
  404372:	6060      	str	r0, [r4, #4]
  404374:	608c      	str	r4, [r1, #8]
  404376:	d3b9      	bcc.n	4042ec <_free_r+0x84>
  404378:	4b2d      	ldr	r3, [pc, #180]	; (404430 <_free_r+0x1c8>)
  40437a:	4640      	mov	r0, r8
  40437c:	6819      	ldr	r1, [r3, #0]
  40437e:	f7ff ff23 	bl	4041c8 <_malloc_trim_r>
  404382:	e7b3      	b.n	4042ec <_free_r+0x84>
  404384:	4610      	mov	r0, r2
  404386:	e7cd      	b.n	404324 <_free_r+0xbc>
  404388:	1811      	adds	r1, r2, r0
  40438a:	6849      	ldr	r1, [r1, #4]
  40438c:	07c9      	lsls	r1, r1, #31
  40438e:	d444      	bmi.n	40441a <_free_r+0x1b2>
  404390:	6891      	ldr	r1, [r2, #8]
  404392:	68d2      	ldr	r2, [r2, #12]
  404394:	60ca      	str	r2, [r1, #12]
  404396:	4403      	add	r3, r0
  404398:	f043 0001 	orr.w	r0, r3, #1
  40439c:	6091      	str	r1, [r2, #8]
  40439e:	6060      	str	r0, [r4, #4]
  4043a0:	50e3      	str	r3, [r4, r3]
  4043a2:	e7a3      	b.n	4042ec <_free_r+0x84>
  4043a4:	2a14      	cmp	r2, #20
  4043a6:	d816      	bhi.n	4043d6 <_free_r+0x16e>
  4043a8:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  4043ac:	00ff      	lsls	r7, r7, #3
  4043ae:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  4043b2:	e7aa      	b.n	40430a <_free_r+0xa2>
  4043b4:	10aa      	asrs	r2, r5, #2
  4043b6:	2301      	movs	r3, #1
  4043b8:	684d      	ldr	r5, [r1, #4]
  4043ba:	4093      	lsls	r3, r2
  4043bc:	432b      	orrs	r3, r5
  4043be:	604b      	str	r3, [r1, #4]
  4043c0:	4603      	mov	r3, r0
  4043c2:	e7b0      	b.n	404326 <_free_r+0xbe>
  4043c4:	f043 0201 	orr.w	r2, r3, #1
  4043c8:	614c      	str	r4, [r1, #20]
  4043ca:	610c      	str	r4, [r1, #16]
  4043cc:	60e5      	str	r5, [r4, #12]
  4043ce:	60a5      	str	r5, [r4, #8]
  4043d0:	6062      	str	r2, [r4, #4]
  4043d2:	50e3      	str	r3, [r4, r3]
  4043d4:	e78a      	b.n	4042ec <_free_r+0x84>
  4043d6:	2a54      	cmp	r2, #84	; 0x54
  4043d8:	d806      	bhi.n	4043e8 <_free_r+0x180>
  4043da:	0b1a      	lsrs	r2, r3, #12
  4043dc:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  4043e0:	00ff      	lsls	r7, r7, #3
  4043e2:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  4043e6:	e790      	b.n	40430a <_free_r+0xa2>
  4043e8:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4043ec:	d806      	bhi.n	4043fc <_free_r+0x194>
  4043ee:	0bda      	lsrs	r2, r3, #15
  4043f0:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4043f4:	00ff      	lsls	r7, r7, #3
  4043f6:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4043fa:	e786      	b.n	40430a <_free_r+0xa2>
  4043fc:	f240 5054 	movw	r0, #1364	; 0x554
  404400:	4282      	cmp	r2, r0
  404402:	d806      	bhi.n	404412 <_free_r+0x1aa>
  404404:	0c9a      	lsrs	r2, r3, #18
  404406:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40440a:	00ff      	lsls	r7, r7, #3
  40440c:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  404410:	e77b      	b.n	40430a <_free_r+0xa2>
  404412:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  404416:	257e      	movs	r5, #126	; 0x7e
  404418:	e777      	b.n	40430a <_free_r+0xa2>
  40441a:	f043 0101 	orr.w	r1, r3, #1
  40441e:	6061      	str	r1, [r4, #4]
  404420:	6013      	str	r3, [r2, #0]
  404422:	e763      	b.n	4042ec <_free_r+0x84>
  404424:	200005b0 	.word	0x200005b0
  404428:	200005b8 	.word	0x200005b8
  40442c:	200009bc 	.word	0x200009bc
  404430:	20000e54 	.word	0x20000e54

00404434 <_localeconv_r>:
  404434:	4a04      	ldr	r2, [pc, #16]	; (404448 <_localeconv_r+0x14>)
  404436:	4b05      	ldr	r3, [pc, #20]	; (40444c <_localeconv_r+0x18>)
  404438:	6812      	ldr	r2, [r2, #0]
  40443a:	6b50      	ldr	r0, [r2, #52]	; 0x34
  40443c:	2800      	cmp	r0, #0
  40443e:	bf08      	it	eq
  404440:	4618      	moveq	r0, r3
  404442:	30f0      	adds	r0, #240	; 0xf0
  404444:	4770      	bx	lr
  404446:	bf00      	nop
  404448:	20000014 	.word	0x20000014
  40444c:	20000444 	.word	0x20000444

00404450 <__retarget_lock_acquire_recursive>:
  404450:	4770      	bx	lr
  404452:	bf00      	nop

00404454 <__retarget_lock_release_recursive>:
  404454:	4770      	bx	lr
  404456:	bf00      	nop

00404458 <_malloc_r>:
  404458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40445c:	f101 060b 	add.w	r6, r1, #11
  404460:	2e16      	cmp	r6, #22
  404462:	b083      	sub	sp, #12
  404464:	4605      	mov	r5, r0
  404466:	f240 809e 	bls.w	4045a6 <_malloc_r+0x14e>
  40446a:	f036 0607 	bics.w	r6, r6, #7
  40446e:	f100 80bd 	bmi.w	4045ec <_malloc_r+0x194>
  404472:	42b1      	cmp	r1, r6
  404474:	f200 80ba 	bhi.w	4045ec <_malloc_r+0x194>
  404478:	f000 fc08 	bl	404c8c <__malloc_lock>
  40447c:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  404480:	f0c0 8293 	bcc.w	4049aa <_malloc_r+0x552>
  404484:	0a73      	lsrs	r3, r6, #9
  404486:	f000 80b8 	beq.w	4045fa <_malloc_r+0x1a2>
  40448a:	2b04      	cmp	r3, #4
  40448c:	f200 8179 	bhi.w	404782 <_malloc_r+0x32a>
  404490:	09b3      	lsrs	r3, r6, #6
  404492:	f103 0039 	add.w	r0, r3, #57	; 0x39
  404496:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40449a:	00c3      	lsls	r3, r0, #3
  40449c:	4fbf      	ldr	r7, [pc, #764]	; (40479c <_malloc_r+0x344>)
  40449e:	443b      	add	r3, r7
  4044a0:	f1a3 0108 	sub.w	r1, r3, #8
  4044a4:	685c      	ldr	r4, [r3, #4]
  4044a6:	42a1      	cmp	r1, r4
  4044a8:	d106      	bne.n	4044b8 <_malloc_r+0x60>
  4044aa:	e00c      	b.n	4044c6 <_malloc_r+0x6e>
  4044ac:	2a00      	cmp	r2, #0
  4044ae:	f280 80aa 	bge.w	404606 <_malloc_r+0x1ae>
  4044b2:	68e4      	ldr	r4, [r4, #12]
  4044b4:	42a1      	cmp	r1, r4
  4044b6:	d006      	beq.n	4044c6 <_malloc_r+0x6e>
  4044b8:	6863      	ldr	r3, [r4, #4]
  4044ba:	f023 0303 	bic.w	r3, r3, #3
  4044be:	1b9a      	subs	r2, r3, r6
  4044c0:	2a0f      	cmp	r2, #15
  4044c2:	ddf3      	ble.n	4044ac <_malloc_r+0x54>
  4044c4:	4670      	mov	r0, lr
  4044c6:	693c      	ldr	r4, [r7, #16]
  4044c8:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4047b0 <_malloc_r+0x358>
  4044cc:	4574      	cmp	r4, lr
  4044ce:	f000 81ab 	beq.w	404828 <_malloc_r+0x3d0>
  4044d2:	6863      	ldr	r3, [r4, #4]
  4044d4:	f023 0303 	bic.w	r3, r3, #3
  4044d8:	1b9a      	subs	r2, r3, r6
  4044da:	2a0f      	cmp	r2, #15
  4044dc:	f300 8190 	bgt.w	404800 <_malloc_r+0x3a8>
  4044e0:	2a00      	cmp	r2, #0
  4044e2:	f8c7 e014 	str.w	lr, [r7, #20]
  4044e6:	f8c7 e010 	str.w	lr, [r7, #16]
  4044ea:	f280 809d 	bge.w	404628 <_malloc_r+0x1d0>
  4044ee:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4044f2:	f080 8161 	bcs.w	4047b8 <_malloc_r+0x360>
  4044f6:	08db      	lsrs	r3, r3, #3
  4044f8:	f103 0c01 	add.w	ip, r3, #1
  4044fc:	1099      	asrs	r1, r3, #2
  4044fe:	687a      	ldr	r2, [r7, #4]
  404500:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404504:	f8c4 8008 	str.w	r8, [r4, #8]
  404508:	2301      	movs	r3, #1
  40450a:	408b      	lsls	r3, r1
  40450c:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  404510:	4313      	orrs	r3, r2
  404512:	3908      	subs	r1, #8
  404514:	60e1      	str	r1, [r4, #12]
  404516:	607b      	str	r3, [r7, #4]
  404518:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  40451c:	f8c8 400c 	str.w	r4, [r8, #12]
  404520:	1082      	asrs	r2, r0, #2
  404522:	2401      	movs	r4, #1
  404524:	4094      	lsls	r4, r2
  404526:	429c      	cmp	r4, r3
  404528:	f200 808b 	bhi.w	404642 <_malloc_r+0x1ea>
  40452c:	421c      	tst	r4, r3
  40452e:	d106      	bne.n	40453e <_malloc_r+0xe6>
  404530:	f020 0003 	bic.w	r0, r0, #3
  404534:	0064      	lsls	r4, r4, #1
  404536:	421c      	tst	r4, r3
  404538:	f100 0004 	add.w	r0, r0, #4
  40453c:	d0fa      	beq.n	404534 <_malloc_r+0xdc>
  40453e:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  404542:	46cc      	mov	ip, r9
  404544:	4680      	mov	r8, r0
  404546:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40454a:	459c      	cmp	ip, r3
  40454c:	d107      	bne.n	40455e <_malloc_r+0x106>
  40454e:	e16d      	b.n	40482c <_malloc_r+0x3d4>
  404550:	2a00      	cmp	r2, #0
  404552:	f280 817b 	bge.w	40484c <_malloc_r+0x3f4>
  404556:	68db      	ldr	r3, [r3, #12]
  404558:	459c      	cmp	ip, r3
  40455a:	f000 8167 	beq.w	40482c <_malloc_r+0x3d4>
  40455e:	6859      	ldr	r1, [r3, #4]
  404560:	f021 0103 	bic.w	r1, r1, #3
  404564:	1b8a      	subs	r2, r1, r6
  404566:	2a0f      	cmp	r2, #15
  404568:	ddf2      	ble.n	404550 <_malloc_r+0xf8>
  40456a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  40456e:	f8d3 8008 	ldr.w	r8, [r3, #8]
  404572:	9300      	str	r3, [sp, #0]
  404574:	199c      	adds	r4, r3, r6
  404576:	4628      	mov	r0, r5
  404578:	f046 0601 	orr.w	r6, r6, #1
  40457c:	f042 0501 	orr.w	r5, r2, #1
  404580:	605e      	str	r6, [r3, #4]
  404582:	f8c8 c00c 	str.w	ip, [r8, #12]
  404586:	f8cc 8008 	str.w	r8, [ip, #8]
  40458a:	617c      	str	r4, [r7, #20]
  40458c:	613c      	str	r4, [r7, #16]
  40458e:	f8c4 e00c 	str.w	lr, [r4, #12]
  404592:	f8c4 e008 	str.w	lr, [r4, #8]
  404596:	6065      	str	r5, [r4, #4]
  404598:	505a      	str	r2, [r3, r1]
  40459a:	f000 fb7d 	bl	404c98 <__malloc_unlock>
  40459e:	9b00      	ldr	r3, [sp, #0]
  4045a0:	f103 0408 	add.w	r4, r3, #8
  4045a4:	e01e      	b.n	4045e4 <_malloc_r+0x18c>
  4045a6:	2910      	cmp	r1, #16
  4045a8:	d820      	bhi.n	4045ec <_malloc_r+0x194>
  4045aa:	f000 fb6f 	bl	404c8c <__malloc_lock>
  4045ae:	2610      	movs	r6, #16
  4045b0:	2318      	movs	r3, #24
  4045b2:	2002      	movs	r0, #2
  4045b4:	4f79      	ldr	r7, [pc, #484]	; (40479c <_malloc_r+0x344>)
  4045b6:	443b      	add	r3, r7
  4045b8:	f1a3 0208 	sub.w	r2, r3, #8
  4045bc:	685c      	ldr	r4, [r3, #4]
  4045be:	4294      	cmp	r4, r2
  4045c0:	f000 813d 	beq.w	40483e <_malloc_r+0x3e6>
  4045c4:	6863      	ldr	r3, [r4, #4]
  4045c6:	68e1      	ldr	r1, [r4, #12]
  4045c8:	68a6      	ldr	r6, [r4, #8]
  4045ca:	f023 0303 	bic.w	r3, r3, #3
  4045ce:	4423      	add	r3, r4
  4045d0:	4628      	mov	r0, r5
  4045d2:	685a      	ldr	r2, [r3, #4]
  4045d4:	60f1      	str	r1, [r6, #12]
  4045d6:	f042 0201 	orr.w	r2, r2, #1
  4045da:	608e      	str	r6, [r1, #8]
  4045dc:	605a      	str	r2, [r3, #4]
  4045de:	f000 fb5b 	bl	404c98 <__malloc_unlock>
  4045e2:	3408      	adds	r4, #8
  4045e4:	4620      	mov	r0, r4
  4045e6:	b003      	add	sp, #12
  4045e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4045ec:	2400      	movs	r4, #0
  4045ee:	230c      	movs	r3, #12
  4045f0:	4620      	mov	r0, r4
  4045f2:	602b      	str	r3, [r5, #0]
  4045f4:	b003      	add	sp, #12
  4045f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4045fa:	2040      	movs	r0, #64	; 0x40
  4045fc:	f44f 7300 	mov.w	r3, #512	; 0x200
  404600:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404604:	e74a      	b.n	40449c <_malloc_r+0x44>
  404606:	4423      	add	r3, r4
  404608:	68e1      	ldr	r1, [r4, #12]
  40460a:	685a      	ldr	r2, [r3, #4]
  40460c:	68a6      	ldr	r6, [r4, #8]
  40460e:	f042 0201 	orr.w	r2, r2, #1
  404612:	60f1      	str	r1, [r6, #12]
  404614:	4628      	mov	r0, r5
  404616:	608e      	str	r6, [r1, #8]
  404618:	605a      	str	r2, [r3, #4]
  40461a:	f000 fb3d 	bl	404c98 <__malloc_unlock>
  40461e:	3408      	adds	r4, #8
  404620:	4620      	mov	r0, r4
  404622:	b003      	add	sp, #12
  404624:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404628:	4423      	add	r3, r4
  40462a:	4628      	mov	r0, r5
  40462c:	685a      	ldr	r2, [r3, #4]
  40462e:	f042 0201 	orr.w	r2, r2, #1
  404632:	605a      	str	r2, [r3, #4]
  404634:	f000 fb30 	bl	404c98 <__malloc_unlock>
  404638:	3408      	adds	r4, #8
  40463a:	4620      	mov	r0, r4
  40463c:	b003      	add	sp, #12
  40463e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404642:	68bc      	ldr	r4, [r7, #8]
  404644:	6863      	ldr	r3, [r4, #4]
  404646:	f023 0803 	bic.w	r8, r3, #3
  40464a:	45b0      	cmp	r8, r6
  40464c:	d304      	bcc.n	404658 <_malloc_r+0x200>
  40464e:	eba8 0306 	sub.w	r3, r8, r6
  404652:	2b0f      	cmp	r3, #15
  404654:	f300 8085 	bgt.w	404762 <_malloc_r+0x30a>
  404658:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4047b4 <_malloc_r+0x35c>
  40465c:	4b50      	ldr	r3, [pc, #320]	; (4047a0 <_malloc_r+0x348>)
  40465e:	f8d9 2000 	ldr.w	r2, [r9]
  404662:	681b      	ldr	r3, [r3, #0]
  404664:	3201      	adds	r2, #1
  404666:	4433      	add	r3, r6
  404668:	eb04 0a08 	add.w	sl, r4, r8
  40466c:	f000 8155 	beq.w	40491a <_malloc_r+0x4c2>
  404670:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404674:	330f      	adds	r3, #15
  404676:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  40467a:	f02b 0b0f 	bic.w	fp, fp, #15
  40467e:	4659      	mov	r1, fp
  404680:	4628      	mov	r0, r5
  404682:	f000 ffaf 	bl	4055e4 <_sbrk_r>
  404686:	1c41      	adds	r1, r0, #1
  404688:	4602      	mov	r2, r0
  40468a:	f000 80fc 	beq.w	404886 <_malloc_r+0x42e>
  40468e:	4582      	cmp	sl, r0
  404690:	f200 80f7 	bhi.w	404882 <_malloc_r+0x42a>
  404694:	4b43      	ldr	r3, [pc, #268]	; (4047a4 <_malloc_r+0x34c>)
  404696:	6819      	ldr	r1, [r3, #0]
  404698:	4459      	add	r1, fp
  40469a:	6019      	str	r1, [r3, #0]
  40469c:	f000 814d 	beq.w	40493a <_malloc_r+0x4e2>
  4046a0:	f8d9 0000 	ldr.w	r0, [r9]
  4046a4:	3001      	adds	r0, #1
  4046a6:	bf1b      	ittet	ne
  4046a8:	eba2 0a0a 	subne.w	sl, r2, sl
  4046ac:	4451      	addne	r1, sl
  4046ae:	f8c9 2000 	streq.w	r2, [r9]
  4046b2:	6019      	strne	r1, [r3, #0]
  4046b4:	f012 0107 	ands.w	r1, r2, #7
  4046b8:	f000 8115 	beq.w	4048e6 <_malloc_r+0x48e>
  4046bc:	f1c1 0008 	rsb	r0, r1, #8
  4046c0:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  4046c4:	4402      	add	r2, r0
  4046c6:	3108      	adds	r1, #8
  4046c8:	eb02 090b 	add.w	r9, r2, fp
  4046cc:	f3c9 090b 	ubfx	r9, r9, #0, #12
  4046d0:	eba1 0909 	sub.w	r9, r1, r9
  4046d4:	4649      	mov	r1, r9
  4046d6:	4628      	mov	r0, r5
  4046d8:	9301      	str	r3, [sp, #4]
  4046da:	9200      	str	r2, [sp, #0]
  4046dc:	f000 ff82 	bl	4055e4 <_sbrk_r>
  4046e0:	1c43      	adds	r3, r0, #1
  4046e2:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4046e6:	f000 8143 	beq.w	404970 <_malloc_r+0x518>
  4046ea:	1a80      	subs	r0, r0, r2
  4046ec:	4448      	add	r0, r9
  4046ee:	f040 0001 	orr.w	r0, r0, #1
  4046f2:	6819      	ldr	r1, [r3, #0]
  4046f4:	60ba      	str	r2, [r7, #8]
  4046f6:	4449      	add	r1, r9
  4046f8:	42bc      	cmp	r4, r7
  4046fa:	6050      	str	r0, [r2, #4]
  4046fc:	6019      	str	r1, [r3, #0]
  4046fe:	d017      	beq.n	404730 <_malloc_r+0x2d8>
  404700:	f1b8 0f0f 	cmp.w	r8, #15
  404704:	f240 80fb 	bls.w	4048fe <_malloc_r+0x4a6>
  404708:	6860      	ldr	r0, [r4, #4]
  40470a:	f1a8 020c 	sub.w	r2, r8, #12
  40470e:	f022 0207 	bic.w	r2, r2, #7
  404712:	eb04 0e02 	add.w	lr, r4, r2
  404716:	f000 0001 	and.w	r0, r0, #1
  40471a:	f04f 0c05 	mov.w	ip, #5
  40471e:	4310      	orrs	r0, r2
  404720:	2a0f      	cmp	r2, #15
  404722:	6060      	str	r0, [r4, #4]
  404724:	f8ce c004 	str.w	ip, [lr, #4]
  404728:	f8ce c008 	str.w	ip, [lr, #8]
  40472c:	f200 8117 	bhi.w	40495e <_malloc_r+0x506>
  404730:	4b1d      	ldr	r3, [pc, #116]	; (4047a8 <_malloc_r+0x350>)
  404732:	68bc      	ldr	r4, [r7, #8]
  404734:	681a      	ldr	r2, [r3, #0]
  404736:	4291      	cmp	r1, r2
  404738:	bf88      	it	hi
  40473a:	6019      	strhi	r1, [r3, #0]
  40473c:	4b1b      	ldr	r3, [pc, #108]	; (4047ac <_malloc_r+0x354>)
  40473e:	681a      	ldr	r2, [r3, #0]
  404740:	4291      	cmp	r1, r2
  404742:	6862      	ldr	r2, [r4, #4]
  404744:	bf88      	it	hi
  404746:	6019      	strhi	r1, [r3, #0]
  404748:	f022 0203 	bic.w	r2, r2, #3
  40474c:	4296      	cmp	r6, r2
  40474e:	eba2 0306 	sub.w	r3, r2, r6
  404752:	d801      	bhi.n	404758 <_malloc_r+0x300>
  404754:	2b0f      	cmp	r3, #15
  404756:	dc04      	bgt.n	404762 <_malloc_r+0x30a>
  404758:	4628      	mov	r0, r5
  40475a:	f000 fa9d 	bl	404c98 <__malloc_unlock>
  40475e:	2400      	movs	r4, #0
  404760:	e740      	b.n	4045e4 <_malloc_r+0x18c>
  404762:	19a2      	adds	r2, r4, r6
  404764:	f043 0301 	orr.w	r3, r3, #1
  404768:	f046 0601 	orr.w	r6, r6, #1
  40476c:	6066      	str	r6, [r4, #4]
  40476e:	4628      	mov	r0, r5
  404770:	60ba      	str	r2, [r7, #8]
  404772:	6053      	str	r3, [r2, #4]
  404774:	f000 fa90 	bl	404c98 <__malloc_unlock>
  404778:	3408      	adds	r4, #8
  40477a:	4620      	mov	r0, r4
  40477c:	b003      	add	sp, #12
  40477e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404782:	2b14      	cmp	r3, #20
  404784:	d971      	bls.n	40486a <_malloc_r+0x412>
  404786:	2b54      	cmp	r3, #84	; 0x54
  404788:	f200 80a3 	bhi.w	4048d2 <_malloc_r+0x47a>
  40478c:	0b33      	lsrs	r3, r6, #12
  40478e:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404792:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404796:	00c3      	lsls	r3, r0, #3
  404798:	e680      	b.n	40449c <_malloc_r+0x44>
  40479a:	bf00      	nop
  40479c:	200005b0 	.word	0x200005b0
  4047a0:	20000e54 	.word	0x20000e54
  4047a4:	20000e24 	.word	0x20000e24
  4047a8:	20000e4c 	.word	0x20000e4c
  4047ac:	20000e50 	.word	0x20000e50
  4047b0:	200005b8 	.word	0x200005b8
  4047b4:	200009b8 	.word	0x200009b8
  4047b8:	0a5a      	lsrs	r2, r3, #9
  4047ba:	2a04      	cmp	r2, #4
  4047bc:	d95b      	bls.n	404876 <_malloc_r+0x41e>
  4047be:	2a14      	cmp	r2, #20
  4047c0:	f200 80ae 	bhi.w	404920 <_malloc_r+0x4c8>
  4047c4:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  4047c8:	00c9      	lsls	r1, r1, #3
  4047ca:	325b      	adds	r2, #91	; 0x5b
  4047cc:	eb07 0c01 	add.w	ip, r7, r1
  4047d0:	5879      	ldr	r1, [r7, r1]
  4047d2:	f1ac 0c08 	sub.w	ip, ip, #8
  4047d6:	458c      	cmp	ip, r1
  4047d8:	f000 8088 	beq.w	4048ec <_malloc_r+0x494>
  4047dc:	684a      	ldr	r2, [r1, #4]
  4047de:	f022 0203 	bic.w	r2, r2, #3
  4047e2:	4293      	cmp	r3, r2
  4047e4:	d273      	bcs.n	4048ce <_malloc_r+0x476>
  4047e6:	6889      	ldr	r1, [r1, #8]
  4047e8:	458c      	cmp	ip, r1
  4047ea:	d1f7      	bne.n	4047dc <_malloc_r+0x384>
  4047ec:	f8dc 200c 	ldr.w	r2, [ip, #12]
  4047f0:	687b      	ldr	r3, [r7, #4]
  4047f2:	60e2      	str	r2, [r4, #12]
  4047f4:	f8c4 c008 	str.w	ip, [r4, #8]
  4047f8:	6094      	str	r4, [r2, #8]
  4047fa:	f8cc 400c 	str.w	r4, [ip, #12]
  4047fe:	e68f      	b.n	404520 <_malloc_r+0xc8>
  404800:	19a1      	adds	r1, r4, r6
  404802:	f046 0c01 	orr.w	ip, r6, #1
  404806:	f042 0601 	orr.w	r6, r2, #1
  40480a:	f8c4 c004 	str.w	ip, [r4, #4]
  40480e:	4628      	mov	r0, r5
  404810:	6179      	str	r1, [r7, #20]
  404812:	6139      	str	r1, [r7, #16]
  404814:	f8c1 e00c 	str.w	lr, [r1, #12]
  404818:	f8c1 e008 	str.w	lr, [r1, #8]
  40481c:	604e      	str	r6, [r1, #4]
  40481e:	50e2      	str	r2, [r4, r3]
  404820:	f000 fa3a 	bl	404c98 <__malloc_unlock>
  404824:	3408      	adds	r4, #8
  404826:	e6dd      	b.n	4045e4 <_malloc_r+0x18c>
  404828:	687b      	ldr	r3, [r7, #4]
  40482a:	e679      	b.n	404520 <_malloc_r+0xc8>
  40482c:	f108 0801 	add.w	r8, r8, #1
  404830:	f018 0f03 	tst.w	r8, #3
  404834:	f10c 0c08 	add.w	ip, ip, #8
  404838:	f47f ae85 	bne.w	404546 <_malloc_r+0xee>
  40483c:	e02d      	b.n	40489a <_malloc_r+0x442>
  40483e:	68dc      	ldr	r4, [r3, #12]
  404840:	42a3      	cmp	r3, r4
  404842:	bf08      	it	eq
  404844:	3002      	addeq	r0, #2
  404846:	f43f ae3e 	beq.w	4044c6 <_malloc_r+0x6e>
  40484a:	e6bb      	b.n	4045c4 <_malloc_r+0x16c>
  40484c:	4419      	add	r1, r3
  40484e:	461c      	mov	r4, r3
  404850:	684a      	ldr	r2, [r1, #4]
  404852:	68db      	ldr	r3, [r3, #12]
  404854:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404858:	f042 0201 	orr.w	r2, r2, #1
  40485c:	604a      	str	r2, [r1, #4]
  40485e:	4628      	mov	r0, r5
  404860:	60f3      	str	r3, [r6, #12]
  404862:	609e      	str	r6, [r3, #8]
  404864:	f000 fa18 	bl	404c98 <__malloc_unlock>
  404868:	e6bc      	b.n	4045e4 <_malloc_r+0x18c>
  40486a:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  40486e:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404872:	00c3      	lsls	r3, r0, #3
  404874:	e612      	b.n	40449c <_malloc_r+0x44>
  404876:	099a      	lsrs	r2, r3, #6
  404878:	f102 0139 	add.w	r1, r2, #57	; 0x39
  40487c:	00c9      	lsls	r1, r1, #3
  40487e:	3238      	adds	r2, #56	; 0x38
  404880:	e7a4      	b.n	4047cc <_malloc_r+0x374>
  404882:	42bc      	cmp	r4, r7
  404884:	d054      	beq.n	404930 <_malloc_r+0x4d8>
  404886:	68bc      	ldr	r4, [r7, #8]
  404888:	6862      	ldr	r2, [r4, #4]
  40488a:	f022 0203 	bic.w	r2, r2, #3
  40488e:	e75d      	b.n	40474c <_malloc_r+0x2f4>
  404890:	f859 3908 	ldr.w	r3, [r9], #-8
  404894:	4599      	cmp	r9, r3
  404896:	f040 8086 	bne.w	4049a6 <_malloc_r+0x54e>
  40489a:	f010 0f03 	tst.w	r0, #3
  40489e:	f100 30ff 	add.w	r0, r0, #4294967295
  4048a2:	d1f5      	bne.n	404890 <_malloc_r+0x438>
  4048a4:	687b      	ldr	r3, [r7, #4]
  4048a6:	ea23 0304 	bic.w	r3, r3, r4
  4048aa:	607b      	str	r3, [r7, #4]
  4048ac:	0064      	lsls	r4, r4, #1
  4048ae:	429c      	cmp	r4, r3
  4048b0:	f63f aec7 	bhi.w	404642 <_malloc_r+0x1ea>
  4048b4:	2c00      	cmp	r4, #0
  4048b6:	f43f aec4 	beq.w	404642 <_malloc_r+0x1ea>
  4048ba:	421c      	tst	r4, r3
  4048bc:	4640      	mov	r0, r8
  4048be:	f47f ae3e 	bne.w	40453e <_malloc_r+0xe6>
  4048c2:	0064      	lsls	r4, r4, #1
  4048c4:	421c      	tst	r4, r3
  4048c6:	f100 0004 	add.w	r0, r0, #4
  4048ca:	d0fa      	beq.n	4048c2 <_malloc_r+0x46a>
  4048cc:	e637      	b.n	40453e <_malloc_r+0xe6>
  4048ce:	468c      	mov	ip, r1
  4048d0:	e78c      	b.n	4047ec <_malloc_r+0x394>
  4048d2:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4048d6:	d815      	bhi.n	404904 <_malloc_r+0x4ac>
  4048d8:	0bf3      	lsrs	r3, r6, #15
  4048da:	f103 0078 	add.w	r0, r3, #120	; 0x78
  4048de:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  4048e2:	00c3      	lsls	r3, r0, #3
  4048e4:	e5da      	b.n	40449c <_malloc_r+0x44>
  4048e6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4048ea:	e6ed      	b.n	4046c8 <_malloc_r+0x270>
  4048ec:	687b      	ldr	r3, [r7, #4]
  4048ee:	1092      	asrs	r2, r2, #2
  4048f0:	2101      	movs	r1, #1
  4048f2:	fa01 f202 	lsl.w	r2, r1, r2
  4048f6:	4313      	orrs	r3, r2
  4048f8:	607b      	str	r3, [r7, #4]
  4048fa:	4662      	mov	r2, ip
  4048fc:	e779      	b.n	4047f2 <_malloc_r+0x39a>
  4048fe:	2301      	movs	r3, #1
  404900:	6053      	str	r3, [r2, #4]
  404902:	e729      	b.n	404758 <_malloc_r+0x300>
  404904:	f240 5254 	movw	r2, #1364	; 0x554
  404908:	4293      	cmp	r3, r2
  40490a:	d822      	bhi.n	404952 <_malloc_r+0x4fa>
  40490c:	0cb3      	lsrs	r3, r6, #18
  40490e:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404912:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404916:	00c3      	lsls	r3, r0, #3
  404918:	e5c0      	b.n	40449c <_malloc_r+0x44>
  40491a:	f103 0b10 	add.w	fp, r3, #16
  40491e:	e6ae      	b.n	40467e <_malloc_r+0x226>
  404920:	2a54      	cmp	r2, #84	; 0x54
  404922:	d829      	bhi.n	404978 <_malloc_r+0x520>
  404924:	0b1a      	lsrs	r2, r3, #12
  404926:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  40492a:	00c9      	lsls	r1, r1, #3
  40492c:	326e      	adds	r2, #110	; 0x6e
  40492e:	e74d      	b.n	4047cc <_malloc_r+0x374>
  404930:	4b20      	ldr	r3, [pc, #128]	; (4049b4 <_malloc_r+0x55c>)
  404932:	6819      	ldr	r1, [r3, #0]
  404934:	4459      	add	r1, fp
  404936:	6019      	str	r1, [r3, #0]
  404938:	e6b2      	b.n	4046a0 <_malloc_r+0x248>
  40493a:	f3ca 000b 	ubfx	r0, sl, #0, #12
  40493e:	2800      	cmp	r0, #0
  404940:	f47f aeae 	bne.w	4046a0 <_malloc_r+0x248>
  404944:	eb08 030b 	add.w	r3, r8, fp
  404948:	68ba      	ldr	r2, [r7, #8]
  40494a:	f043 0301 	orr.w	r3, r3, #1
  40494e:	6053      	str	r3, [r2, #4]
  404950:	e6ee      	b.n	404730 <_malloc_r+0x2d8>
  404952:	207f      	movs	r0, #127	; 0x7f
  404954:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404958:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  40495c:	e59e      	b.n	40449c <_malloc_r+0x44>
  40495e:	f104 0108 	add.w	r1, r4, #8
  404962:	4628      	mov	r0, r5
  404964:	9300      	str	r3, [sp, #0]
  404966:	f7ff fc7f 	bl	404268 <_free_r>
  40496a:	9b00      	ldr	r3, [sp, #0]
  40496c:	6819      	ldr	r1, [r3, #0]
  40496e:	e6df      	b.n	404730 <_malloc_r+0x2d8>
  404970:	2001      	movs	r0, #1
  404972:	f04f 0900 	mov.w	r9, #0
  404976:	e6bc      	b.n	4046f2 <_malloc_r+0x29a>
  404978:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40497c:	d805      	bhi.n	40498a <_malloc_r+0x532>
  40497e:	0bda      	lsrs	r2, r3, #15
  404980:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404984:	00c9      	lsls	r1, r1, #3
  404986:	3277      	adds	r2, #119	; 0x77
  404988:	e720      	b.n	4047cc <_malloc_r+0x374>
  40498a:	f240 5154 	movw	r1, #1364	; 0x554
  40498e:	428a      	cmp	r2, r1
  404990:	d805      	bhi.n	40499e <_malloc_r+0x546>
  404992:	0c9a      	lsrs	r2, r3, #18
  404994:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404998:	00c9      	lsls	r1, r1, #3
  40499a:	327c      	adds	r2, #124	; 0x7c
  40499c:	e716      	b.n	4047cc <_malloc_r+0x374>
  40499e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4049a2:	227e      	movs	r2, #126	; 0x7e
  4049a4:	e712      	b.n	4047cc <_malloc_r+0x374>
  4049a6:	687b      	ldr	r3, [r7, #4]
  4049a8:	e780      	b.n	4048ac <_malloc_r+0x454>
  4049aa:	08f0      	lsrs	r0, r6, #3
  4049ac:	f106 0308 	add.w	r3, r6, #8
  4049b0:	e600      	b.n	4045b4 <_malloc_r+0x15c>
  4049b2:	bf00      	nop
  4049b4:	20000e24 	.word	0x20000e24

004049b8 <__ascii_mbtowc>:
  4049b8:	b082      	sub	sp, #8
  4049ba:	b149      	cbz	r1, 4049d0 <__ascii_mbtowc+0x18>
  4049bc:	b15a      	cbz	r2, 4049d6 <__ascii_mbtowc+0x1e>
  4049be:	b16b      	cbz	r3, 4049dc <__ascii_mbtowc+0x24>
  4049c0:	7813      	ldrb	r3, [r2, #0]
  4049c2:	600b      	str	r3, [r1, #0]
  4049c4:	7812      	ldrb	r2, [r2, #0]
  4049c6:	1c10      	adds	r0, r2, #0
  4049c8:	bf18      	it	ne
  4049ca:	2001      	movne	r0, #1
  4049cc:	b002      	add	sp, #8
  4049ce:	4770      	bx	lr
  4049d0:	a901      	add	r1, sp, #4
  4049d2:	2a00      	cmp	r2, #0
  4049d4:	d1f3      	bne.n	4049be <__ascii_mbtowc+0x6>
  4049d6:	4610      	mov	r0, r2
  4049d8:	b002      	add	sp, #8
  4049da:	4770      	bx	lr
  4049dc:	f06f 0001 	mvn.w	r0, #1
  4049e0:	e7f4      	b.n	4049cc <__ascii_mbtowc+0x14>
  4049e2:	bf00      	nop
	...

004049f0 <memchr>:
  4049f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4049f4:	2a10      	cmp	r2, #16
  4049f6:	db2b      	blt.n	404a50 <memchr+0x60>
  4049f8:	f010 0f07 	tst.w	r0, #7
  4049fc:	d008      	beq.n	404a10 <memchr+0x20>
  4049fe:	f810 3b01 	ldrb.w	r3, [r0], #1
  404a02:	3a01      	subs	r2, #1
  404a04:	428b      	cmp	r3, r1
  404a06:	d02d      	beq.n	404a64 <memchr+0x74>
  404a08:	f010 0f07 	tst.w	r0, #7
  404a0c:	b342      	cbz	r2, 404a60 <memchr+0x70>
  404a0e:	d1f6      	bne.n	4049fe <memchr+0xe>
  404a10:	b4f0      	push	{r4, r5, r6, r7}
  404a12:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404a16:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  404a1a:	f022 0407 	bic.w	r4, r2, #7
  404a1e:	f07f 0700 	mvns.w	r7, #0
  404a22:	2300      	movs	r3, #0
  404a24:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404a28:	3c08      	subs	r4, #8
  404a2a:	ea85 0501 	eor.w	r5, r5, r1
  404a2e:	ea86 0601 	eor.w	r6, r6, r1
  404a32:	fa85 f547 	uadd8	r5, r5, r7
  404a36:	faa3 f587 	sel	r5, r3, r7
  404a3a:	fa86 f647 	uadd8	r6, r6, r7
  404a3e:	faa5 f687 	sel	r6, r5, r7
  404a42:	b98e      	cbnz	r6, 404a68 <memchr+0x78>
  404a44:	d1ee      	bne.n	404a24 <memchr+0x34>
  404a46:	bcf0      	pop	{r4, r5, r6, r7}
  404a48:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404a4c:	f002 0207 	and.w	r2, r2, #7
  404a50:	b132      	cbz	r2, 404a60 <memchr+0x70>
  404a52:	f810 3b01 	ldrb.w	r3, [r0], #1
  404a56:	3a01      	subs	r2, #1
  404a58:	ea83 0301 	eor.w	r3, r3, r1
  404a5c:	b113      	cbz	r3, 404a64 <memchr+0x74>
  404a5e:	d1f8      	bne.n	404a52 <memchr+0x62>
  404a60:	2000      	movs	r0, #0
  404a62:	4770      	bx	lr
  404a64:	3801      	subs	r0, #1
  404a66:	4770      	bx	lr
  404a68:	2d00      	cmp	r5, #0
  404a6a:	bf06      	itte	eq
  404a6c:	4635      	moveq	r5, r6
  404a6e:	3803      	subeq	r0, #3
  404a70:	3807      	subne	r0, #7
  404a72:	f015 0f01 	tst.w	r5, #1
  404a76:	d107      	bne.n	404a88 <memchr+0x98>
  404a78:	3001      	adds	r0, #1
  404a7a:	f415 7f80 	tst.w	r5, #256	; 0x100
  404a7e:	bf02      	ittt	eq
  404a80:	3001      	addeq	r0, #1
  404a82:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404a86:	3001      	addeq	r0, #1
  404a88:	bcf0      	pop	{r4, r5, r6, r7}
  404a8a:	3801      	subs	r0, #1
  404a8c:	4770      	bx	lr
  404a8e:	bf00      	nop

00404a90 <memcpy>:
  404a90:	4684      	mov	ip, r0
  404a92:	ea41 0300 	orr.w	r3, r1, r0
  404a96:	f013 0303 	ands.w	r3, r3, #3
  404a9a:	d16d      	bne.n	404b78 <memcpy+0xe8>
  404a9c:	3a40      	subs	r2, #64	; 0x40
  404a9e:	d341      	bcc.n	404b24 <memcpy+0x94>
  404aa0:	f851 3b04 	ldr.w	r3, [r1], #4
  404aa4:	f840 3b04 	str.w	r3, [r0], #4
  404aa8:	f851 3b04 	ldr.w	r3, [r1], #4
  404aac:	f840 3b04 	str.w	r3, [r0], #4
  404ab0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ab4:	f840 3b04 	str.w	r3, [r0], #4
  404ab8:	f851 3b04 	ldr.w	r3, [r1], #4
  404abc:	f840 3b04 	str.w	r3, [r0], #4
  404ac0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ac4:	f840 3b04 	str.w	r3, [r0], #4
  404ac8:	f851 3b04 	ldr.w	r3, [r1], #4
  404acc:	f840 3b04 	str.w	r3, [r0], #4
  404ad0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ad4:	f840 3b04 	str.w	r3, [r0], #4
  404ad8:	f851 3b04 	ldr.w	r3, [r1], #4
  404adc:	f840 3b04 	str.w	r3, [r0], #4
  404ae0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ae4:	f840 3b04 	str.w	r3, [r0], #4
  404ae8:	f851 3b04 	ldr.w	r3, [r1], #4
  404aec:	f840 3b04 	str.w	r3, [r0], #4
  404af0:	f851 3b04 	ldr.w	r3, [r1], #4
  404af4:	f840 3b04 	str.w	r3, [r0], #4
  404af8:	f851 3b04 	ldr.w	r3, [r1], #4
  404afc:	f840 3b04 	str.w	r3, [r0], #4
  404b00:	f851 3b04 	ldr.w	r3, [r1], #4
  404b04:	f840 3b04 	str.w	r3, [r0], #4
  404b08:	f851 3b04 	ldr.w	r3, [r1], #4
  404b0c:	f840 3b04 	str.w	r3, [r0], #4
  404b10:	f851 3b04 	ldr.w	r3, [r1], #4
  404b14:	f840 3b04 	str.w	r3, [r0], #4
  404b18:	f851 3b04 	ldr.w	r3, [r1], #4
  404b1c:	f840 3b04 	str.w	r3, [r0], #4
  404b20:	3a40      	subs	r2, #64	; 0x40
  404b22:	d2bd      	bcs.n	404aa0 <memcpy+0x10>
  404b24:	3230      	adds	r2, #48	; 0x30
  404b26:	d311      	bcc.n	404b4c <memcpy+0xbc>
  404b28:	f851 3b04 	ldr.w	r3, [r1], #4
  404b2c:	f840 3b04 	str.w	r3, [r0], #4
  404b30:	f851 3b04 	ldr.w	r3, [r1], #4
  404b34:	f840 3b04 	str.w	r3, [r0], #4
  404b38:	f851 3b04 	ldr.w	r3, [r1], #4
  404b3c:	f840 3b04 	str.w	r3, [r0], #4
  404b40:	f851 3b04 	ldr.w	r3, [r1], #4
  404b44:	f840 3b04 	str.w	r3, [r0], #4
  404b48:	3a10      	subs	r2, #16
  404b4a:	d2ed      	bcs.n	404b28 <memcpy+0x98>
  404b4c:	320c      	adds	r2, #12
  404b4e:	d305      	bcc.n	404b5c <memcpy+0xcc>
  404b50:	f851 3b04 	ldr.w	r3, [r1], #4
  404b54:	f840 3b04 	str.w	r3, [r0], #4
  404b58:	3a04      	subs	r2, #4
  404b5a:	d2f9      	bcs.n	404b50 <memcpy+0xc0>
  404b5c:	3204      	adds	r2, #4
  404b5e:	d008      	beq.n	404b72 <memcpy+0xe2>
  404b60:	07d2      	lsls	r2, r2, #31
  404b62:	bf1c      	itt	ne
  404b64:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404b68:	f800 3b01 	strbne.w	r3, [r0], #1
  404b6c:	d301      	bcc.n	404b72 <memcpy+0xe2>
  404b6e:	880b      	ldrh	r3, [r1, #0]
  404b70:	8003      	strh	r3, [r0, #0]
  404b72:	4660      	mov	r0, ip
  404b74:	4770      	bx	lr
  404b76:	bf00      	nop
  404b78:	2a08      	cmp	r2, #8
  404b7a:	d313      	bcc.n	404ba4 <memcpy+0x114>
  404b7c:	078b      	lsls	r3, r1, #30
  404b7e:	d08d      	beq.n	404a9c <memcpy+0xc>
  404b80:	f010 0303 	ands.w	r3, r0, #3
  404b84:	d08a      	beq.n	404a9c <memcpy+0xc>
  404b86:	f1c3 0304 	rsb	r3, r3, #4
  404b8a:	1ad2      	subs	r2, r2, r3
  404b8c:	07db      	lsls	r3, r3, #31
  404b8e:	bf1c      	itt	ne
  404b90:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404b94:	f800 3b01 	strbne.w	r3, [r0], #1
  404b98:	d380      	bcc.n	404a9c <memcpy+0xc>
  404b9a:	f831 3b02 	ldrh.w	r3, [r1], #2
  404b9e:	f820 3b02 	strh.w	r3, [r0], #2
  404ba2:	e77b      	b.n	404a9c <memcpy+0xc>
  404ba4:	3a04      	subs	r2, #4
  404ba6:	d3d9      	bcc.n	404b5c <memcpy+0xcc>
  404ba8:	3a01      	subs	r2, #1
  404baa:	f811 3b01 	ldrb.w	r3, [r1], #1
  404bae:	f800 3b01 	strb.w	r3, [r0], #1
  404bb2:	d2f9      	bcs.n	404ba8 <memcpy+0x118>
  404bb4:	780b      	ldrb	r3, [r1, #0]
  404bb6:	7003      	strb	r3, [r0, #0]
  404bb8:	784b      	ldrb	r3, [r1, #1]
  404bba:	7043      	strb	r3, [r0, #1]
  404bbc:	788b      	ldrb	r3, [r1, #2]
  404bbe:	7083      	strb	r3, [r0, #2]
  404bc0:	4660      	mov	r0, ip
  404bc2:	4770      	bx	lr

00404bc4 <memmove>:
  404bc4:	4288      	cmp	r0, r1
  404bc6:	b5f0      	push	{r4, r5, r6, r7, lr}
  404bc8:	d90d      	bls.n	404be6 <memmove+0x22>
  404bca:	188b      	adds	r3, r1, r2
  404bcc:	4298      	cmp	r0, r3
  404bce:	d20a      	bcs.n	404be6 <memmove+0x22>
  404bd0:	1884      	adds	r4, r0, r2
  404bd2:	2a00      	cmp	r2, #0
  404bd4:	d051      	beq.n	404c7a <memmove+0xb6>
  404bd6:	4622      	mov	r2, r4
  404bd8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  404bdc:	f802 4d01 	strb.w	r4, [r2, #-1]!
  404be0:	4299      	cmp	r1, r3
  404be2:	d1f9      	bne.n	404bd8 <memmove+0x14>
  404be4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404be6:	2a0f      	cmp	r2, #15
  404be8:	d948      	bls.n	404c7c <memmove+0xb8>
  404bea:	ea41 0300 	orr.w	r3, r1, r0
  404bee:	079b      	lsls	r3, r3, #30
  404bf0:	d146      	bne.n	404c80 <memmove+0xbc>
  404bf2:	f100 0410 	add.w	r4, r0, #16
  404bf6:	f101 0310 	add.w	r3, r1, #16
  404bfa:	4615      	mov	r5, r2
  404bfc:	f853 6c10 	ldr.w	r6, [r3, #-16]
  404c00:	f844 6c10 	str.w	r6, [r4, #-16]
  404c04:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  404c08:	f844 6c0c 	str.w	r6, [r4, #-12]
  404c0c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  404c10:	f844 6c08 	str.w	r6, [r4, #-8]
  404c14:	3d10      	subs	r5, #16
  404c16:	f853 6c04 	ldr.w	r6, [r3, #-4]
  404c1a:	f844 6c04 	str.w	r6, [r4, #-4]
  404c1e:	2d0f      	cmp	r5, #15
  404c20:	f103 0310 	add.w	r3, r3, #16
  404c24:	f104 0410 	add.w	r4, r4, #16
  404c28:	d8e8      	bhi.n	404bfc <memmove+0x38>
  404c2a:	f1a2 0310 	sub.w	r3, r2, #16
  404c2e:	f023 030f 	bic.w	r3, r3, #15
  404c32:	f002 0e0f 	and.w	lr, r2, #15
  404c36:	3310      	adds	r3, #16
  404c38:	f1be 0f03 	cmp.w	lr, #3
  404c3c:	4419      	add	r1, r3
  404c3e:	4403      	add	r3, r0
  404c40:	d921      	bls.n	404c86 <memmove+0xc2>
  404c42:	1f1e      	subs	r6, r3, #4
  404c44:	460d      	mov	r5, r1
  404c46:	4674      	mov	r4, lr
  404c48:	3c04      	subs	r4, #4
  404c4a:	f855 7b04 	ldr.w	r7, [r5], #4
  404c4e:	f846 7f04 	str.w	r7, [r6, #4]!
  404c52:	2c03      	cmp	r4, #3
  404c54:	d8f8      	bhi.n	404c48 <memmove+0x84>
  404c56:	f1ae 0404 	sub.w	r4, lr, #4
  404c5a:	f024 0403 	bic.w	r4, r4, #3
  404c5e:	3404      	adds	r4, #4
  404c60:	4421      	add	r1, r4
  404c62:	4423      	add	r3, r4
  404c64:	f002 0203 	and.w	r2, r2, #3
  404c68:	b162      	cbz	r2, 404c84 <memmove+0xc0>
  404c6a:	3b01      	subs	r3, #1
  404c6c:	440a      	add	r2, r1
  404c6e:	f811 4b01 	ldrb.w	r4, [r1], #1
  404c72:	f803 4f01 	strb.w	r4, [r3, #1]!
  404c76:	428a      	cmp	r2, r1
  404c78:	d1f9      	bne.n	404c6e <memmove+0xaa>
  404c7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404c7c:	4603      	mov	r3, r0
  404c7e:	e7f3      	b.n	404c68 <memmove+0xa4>
  404c80:	4603      	mov	r3, r0
  404c82:	e7f2      	b.n	404c6a <memmove+0xa6>
  404c84:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404c86:	4672      	mov	r2, lr
  404c88:	e7ee      	b.n	404c68 <memmove+0xa4>
  404c8a:	bf00      	nop

00404c8c <__malloc_lock>:
  404c8c:	4801      	ldr	r0, [pc, #4]	; (404c94 <__malloc_lock+0x8>)
  404c8e:	f7ff bbdf 	b.w	404450 <__retarget_lock_acquire_recursive>
  404c92:	bf00      	nop
  404c94:	20000e7c 	.word	0x20000e7c

00404c98 <__malloc_unlock>:
  404c98:	4801      	ldr	r0, [pc, #4]	; (404ca0 <__malloc_unlock+0x8>)
  404c9a:	f7ff bbdb 	b.w	404454 <__retarget_lock_release_recursive>
  404c9e:	bf00      	nop
  404ca0:	20000e7c 	.word	0x20000e7c

00404ca4 <_Balloc>:
  404ca4:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404ca6:	b570      	push	{r4, r5, r6, lr}
  404ca8:	4605      	mov	r5, r0
  404caa:	460c      	mov	r4, r1
  404cac:	b14b      	cbz	r3, 404cc2 <_Balloc+0x1e>
  404cae:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  404cb2:	b180      	cbz	r0, 404cd6 <_Balloc+0x32>
  404cb4:	6802      	ldr	r2, [r0, #0]
  404cb6:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404cba:	2300      	movs	r3, #0
  404cbc:	6103      	str	r3, [r0, #16]
  404cbe:	60c3      	str	r3, [r0, #12]
  404cc0:	bd70      	pop	{r4, r5, r6, pc}
  404cc2:	2221      	movs	r2, #33	; 0x21
  404cc4:	2104      	movs	r1, #4
  404cc6:	f000 fd8d 	bl	4057e4 <_calloc_r>
  404cca:	64e8      	str	r0, [r5, #76]	; 0x4c
  404ccc:	4603      	mov	r3, r0
  404cce:	2800      	cmp	r0, #0
  404cd0:	d1ed      	bne.n	404cae <_Balloc+0xa>
  404cd2:	2000      	movs	r0, #0
  404cd4:	bd70      	pop	{r4, r5, r6, pc}
  404cd6:	2101      	movs	r1, #1
  404cd8:	fa01 f604 	lsl.w	r6, r1, r4
  404cdc:	1d72      	adds	r2, r6, #5
  404cde:	4628      	mov	r0, r5
  404ce0:	0092      	lsls	r2, r2, #2
  404ce2:	f000 fd7f 	bl	4057e4 <_calloc_r>
  404ce6:	2800      	cmp	r0, #0
  404ce8:	d0f3      	beq.n	404cd2 <_Balloc+0x2e>
  404cea:	6044      	str	r4, [r0, #4]
  404cec:	6086      	str	r6, [r0, #8]
  404cee:	e7e4      	b.n	404cba <_Balloc+0x16>

00404cf0 <_Bfree>:
  404cf0:	b131      	cbz	r1, 404d00 <_Bfree+0x10>
  404cf2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404cf4:	684a      	ldr	r2, [r1, #4]
  404cf6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404cfa:	6008      	str	r0, [r1, #0]
  404cfc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404d00:	4770      	bx	lr
  404d02:	bf00      	nop

00404d04 <__multadd>:
  404d04:	b5f0      	push	{r4, r5, r6, r7, lr}
  404d06:	690c      	ldr	r4, [r1, #16]
  404d08:	b083      	sub	sp, #12
  404d0a:	460d      	mov	r5, r1
  404d0c:	4606      	mov	r6, r0
  404d0e:	f101 0e14 	add.w	lr, r1, #20
  404d12:	2700      	movs	r7, #0
  404d14:	f8de 0000 	ldr.w	r0, [lr]
  404d18:	b281      	uxth	r1, r0
  404d1a:	fb02 3301 	mla	r3, r2, r1, r3
  404d1e:	0c01      	lsrs	r1, r0, #16
  404d20:	0c18      	lsrs	r0, r3, #16
  404d22:	fb02 0101 	mla	r1, r2, r1, r0
  404d26:	b29b      	uxth	r3, r3
  404d28:	3701      	adds	r7, #1
  404d2a:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404d2e:	42bc      	cmp	r4, r7
  404d30:	f84e 3b04 	str.w	r3, [lr], #4
  404d34:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404d38:	dcec      	bgt.n	404d14 <__multadd+0x10>
  404d3a:	b13b      	cbz	r3, 404d4c <__multadd+0x48>
  404d3c:	68aa      	ldr	r2, [r5, #8]
  404d3e:	4294      	cmp	r4, r2
  404d40:	da07      	bge.n	404d52 <__multadd+0x4e>
  404d42:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  404d46:	3401      	adds	r4, #1
  404d48:	6153      	str	r3, [r2, #20]
  404d4a:	612c      	str	r4, [r5, #16]
  404d4c:	4628      	mov	r0, r5
  404d4e:	b003      	add	sp, #12
  404d50:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404d52:	6869      	ldr	r1, [r5, #4]
  404d54:	9301      	str	r3, [sp, #4]
  404d56:	3101      	adds	r1, #1
  404d58:	4630      	mov	r0, r6
  404d5a:	f7ff ffa3 	bl	404ca4 <_Balloc>
  404d5e:	692a      	ldr	r2, [r5, #16]
  404d60:	3202      	adds	r2, #2
  404d62:	f105 010c 	add.w	r1, r5, #12
  404d66:	4607      	mov	r7, r0
  404d68:	0092      	lsls	r2, r2, #2
  404d6a:	300c      	adds	r0, #12
  404d6c:	f7ff fe90 	bl	404a90 <memcpy>
  404d70:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  404d72:	6869      	ldr	r1, [r5, #4]
  404d74:	9b01      	ldr	r3, [sp, #4]
  404d76:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404d7a:	6028      	str	r0, [r5, #0]
  404d7c:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404d80:	463d      	mov	r5, r7
  404d82:	e7de      	b.n	404d42 <__multadd+0x3e>

00404d84 <__hi0bits>:
  404d84:	0c02      	lsrs	r2, r0, #16
  404d86:	0412      	lsls	r2, r2, #16
  404d88:	4603      	mov	r3, r0
  404d8a:	b9b2      	cbnz	r2, 404dba <__hi0bits+0x36>
  404d8c:	0403      	lsls	r3, r0, #16
  404d8e:	2010      	movs	r0, #16
  404d90:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  404d94:	bf04      	itt	eq
  404d96:	021b      	lsleq	r3, r3, #8
  404d98:	3008      	addeq	r0, #8
  404d9a:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404d9e:	bf04      	itt	eq
  404da0:	011b      	lsleq	r3, r3, #4
  404da2:	3004      	addeq	r0, #4
  404da4:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404da8:	bf04      	itt	eq
  404daa:	009b      	lsleq	r3, r3, #2
  404dac:	3002      	addeq	r0, #2
  404dae:	2b00      	cmp	r3, #0
  404db0:	db02      	blt.n	404db8 <__hi0bits+0x34>
  404db2:	005b      	lsls	r3, r3, #1
  404db4:	d403      	bmi.n	404dbe <__hi0bits+0x3a>
  404db6:	2020      	movs	r0, #32
  404db8:	4770      	bx	lr
  404dba:	2000      	movs	r0, #0
  404dbc:	e7e8      	b.n	404d90 <__hi0bits+0xc>
  404dbe:	3001      	adds	r0, #1
  404dc0:	4770      	bx	lr
  404dc2:	bf00      	nop

00404dc4 <__lo0bits>:
  404dc4:	6803      	ldr	r3, [r0, #0]
  404dc6:	f013 0207 	ands.w	r2, r3, #7
  404dca:	4601      	mov	r1, r0
  404dcc:	d007      	beq.n	404dde <__lo0bits+0x1a>
  404dce:	07da      	lsls	r2, r3, #31
  404dd0:	d421      	bmi.n	404e16 <__lo0bits+0x52>
  404dd2:	0798      	lsls	r0, r3, #30
  404dd4:	d421      	bmi.n	404e1a <__lo0bits+0x56>
  404dd6:	089b      	lsrs	r3, r3, #2
  404dd8:	600b      	str	r3, [r1, #0]
  404dda:	2002      	movs	r0, #2
  404ddc:	4770      	bx	lr
  404dde:	b298      	uxth	r0, r3
  404de0:	b198      	cbz	r0, 404e0a <__lo0bits+0x46>
  404de2:	4610      	mov	r0, r2
  404de4:	f013 0fff 	tst.w	r3, #255	; 0xff
  404de8:	bf04      	itt	eq
  404dea:	0a1b      	lsreq	r3, r3, #8
  404dec:	3008      	addeq	r0, #8
  404dee:	071a      	lsls	r2, r3, #28
  404df0:	bf04      	itt	eq
  404df2:	091b      	lsreq	r3, r3, #4
  404df4:	3004      	addeq	r0, #4
  404df6:	079a      	lsls	r2, r3, #30
  404df8:	bf04      	itt	eq
  404dfa:	089b      	lsreq	r3, r3, #2
  404dfc:	3002      	addeq	r0, #2
  404dfe:	07da      	lsls	r2, r3, #31
  404e00:	d407      	bmi.n	404e12 <__lo0bits+0x4e>
  404e02:	085b      	lsrs	r3, r3, #1
  404e04:	d104      	bne.n	404e10 <__lo0bits+0x4c>
  404e06:	2020      	movs	r0, #32
  404e08:	4770      	bx	lr
  404e0a:	0c1b      	lsrs	r3, r3, #16
  404e0c:	2010      	movs	r0, #16
  404e0e:	e7e9      	b.n	404de4 <__lo0bits+0x20>
  404e10:	3001      	adds	r0, #1
  404e12:	600b      	str	r3, [r1, #0]
  404e14:	4770      	bx	lr
  404e16:	2000      	movs	r0, #0
  404e18:	4770      	bx	lr
  404e1a:	085b      	lsrs	r3, r3, #1
  404e1c:	600b      	str	r3, [r1, #0]
  404e1e:	2001      	movs	r0, #1
  404e20:	4770      	bx	lr
  404e22:	bf00      	nop

00404e24 <__i2b>:
  404e24:	b510      	push	{r4, lr}
  404e26:	460c      	mov	r4, r1
  404e28:	2101      	movs	r1, #1
  404e2a:	f7ff ff3b 	bl	404ca4 <_Balloc>
  404e2e:	2201      	movs	r2, #1
  404e30:	6144      	str	r4, [r0, #20]
  404e32:	6102      	str	r2, [r0, #16]
  404e34:	bd10      	pop	{r4, pc}
  404e36:	bf00      	nop

00404e38 <__multiply>:
  404e38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404e3c:	690c      	ldr	r4, [r1, #16]
  404e3e:	6915      	ldr	r5, [r2, #16]
  404e40:	42ac      	cmp	r4, r5
  404e42:	b083      	sub	sp, #12
  404e44:	468b      	mov	fp, r1
  404e46:	4616      	mov	r6, r2
  404e48:	da04      	bge.n	404e54 <__multiply+0x1c>
  404e4a:	4622      	mov	r2, r4
  404e4c:	46b3      	mov	fp, r6
  404e4e:	462c      	mov	r4, r5
  404e50:	460e      	mov	r6, r1
  404e52:	4615      	mov	r5, r2
  404e54:	f8db 3008 	ldr.w	r3, [fp, #8]
  404e58:	f8db 1004 	ldr.w	r1, [fp, #4]
  404e5c:	eb04 0805 	add.w	r8, r4, r5
  404e60:	4598      	cmp	r8, r3
  404e62:	bfc8      	it	gt
  404e64:	3101      	addgt	r1, #1
  404e66:	f7ff ff1d 	bl	404ca4 <_Balloc>
  404e6a:	f100 0914 	add.w	r9, r0, #20
  404e6e:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  404e72:	45d1      	cmp	r9, sl
  404e74:	9000      	str	r0, [sp, #0]
  404e76:	d205      	bcs.n	404e84 <__multiply+0x4c>
  404e78:	464b      	mov	r3, r9
  404e7a:	2100      	movs	r1, #0
  404e7c:	f843 1b04 	str.w	r1, [r3], #4
  404e80:	459a      	cmp	sl, r3
  404e82:	d8fb      	bhi.n	404e7c <__multiply+0x44>
  404e84:	f106 0c14 	add.w	ip, r6, #20
  404e88:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404e8c:	f10b 0b14 	add.w	fp, fp, #20
  404e90:	459c      	cmp	ip, r3
  404e92:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  404e96:	d24c      	bcs.n	404f32 <__multiply+0xfa>
  404e98:	f8cd a004 	str.w	sl, [sp, #4]
  404e9c:	469a      	mov	sl, r3
  404e9e:	f8dc 5000 	ldr.w	r5, [ip]
  404ea2:	b2af      	uxth	r7, r5
  404ea4:	b1ef      	cbz	r7, 404ee2 <__multiply+0xaa>
  404ea6:	2100      	movs	r1, #0
  404ea8:	464d      	mov	r5, r9
  404eaa:	465e      	mov	r6, fp
  404eac:	460c      	mov	r4, r1
  404eae:	f856 2b04 	ldr.w	r2, [r6], #4
  404eb2:	6828      	ldr	r0, [r5, #0]
  404eb4:	b293      	uxth	r3, r2
  404eb6:	b281      	uxth	r1, r0
  404eb8:	fb07 1303 	mla	r3, r7, r3, r1
  404ebc:	0c12      	lsrs	r2, r2, #16
  404ebe:	0c01      	lsrs	r1, r0, #16
  404ec0:	4423      	add	r3, r4
  404ec2:	fb07 1102 	mla	r1, r7, r2, r1
  404ec6:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404eca:	b29b      	uxth	r3, r3
  404ecc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404ed0:	45b6      	cmp	lr, r6
  404ed2:	f845 3b04 	str.w	r3, [r5], #4
  404ed6:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404eda:	d8e8      	bhi.n	404eae <__multiply+0x76>
  404edc:	602c      	str	r4, [r5, #0]
  404ede:	f8dc 5000 	ldr.w	r5, [ip]
  404ee2:	0c2d      	lsrs	r5, r5, #16
  404ee4:	d01d      	beq.n	404f22 <__multiply+0xea>
  404ee6:	f8d9 3000 	ldr.w	r3, [r9]
  404eea:	4648      	mov	r0, r9
  404eec:	461c      	mov	r4, r3
  404eee:	4659      	mov	r1, fp
  404ef0:	2200      	movs	r2, #0
  404ef2:	880e      	ldrh	r6, [r1, #0]
  404ef4:	0c24      	lsrs	r4, r4, #16
  404ef6:	fb05 4406 	mla	r4, r5, r6, r4
  404efa:	4422      	add	r2, r4
  404efc:	b29b      	uxth	r3, r3
  404efe:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  404f02:	f840 3b04 	str.w	r3, [r0], #4
  404f06:	f851 3b04 	ldr.w	r3, [r1], #4
  404f0a:	6804      	ldr	r4, [r0, #0]
  404f0c:	0c1b      	lsrs	r3, r3, #16
  404f0e:	b2a6      	uxth	r6, r4
  404f10:	fb05 6303 	mla	r3, r5, r3, r6
  404f14:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404f18:	458e      	cmp	lr, r1
  404f1a:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404f1e:	d8e8      	bhi.n	404ef2 <__multiply+0xba>
  404f20:	6003      	str	r3, [r0, #0]
  404f22:	f10c 0c04 	add.w	ip, ip, #4
  404f26:	45e2      	cmp	sl, ip
  404f28:	f109 0904 	add.w	r9, r9, #4
  404f2c:	d8b7      	bhi.n	404e9e <__multiply+0x66>
  404f2e:	f8dd a004 	ldr.w	sl, [sp, #4]
  404f32:	f1b8 0f00 	cmp.w	r8, #0
  404f36:	dd0b      	ble.n	404f50 <__multiply+0x118>
  404f38:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  404f3c:	f1aa 0a04 	sub.w	sl, sl, #4
  404f40:	b11b      	cbz	r3, 404f4a <__multiply+0x112>
  404f42:	e005      	b.n	404f50 <__multiply+0x118>
  404f44:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  404f48:	b913      	cbnz	r3, 404f50 <__multiply+0x118>
  404f4a:	f1b8 0801 	subs.w	r8, r8, #1
  404f4e:	d1f9      	bne.n	404f44 <__multiply+0x10c>
  404f50:	9800      	ldr	r0, [sp, #0]
  404f52:	f8c0 8010 	str.w	r8, [r0, #16]
  404f56:	b003      	add	sp, #12
  404f58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404f5c <__pow5mult>:
  404f5c:	f012 0303 	ands.w	r3, r2, #3
  404f60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404f64:	4614      	mov	r4, r2
  404f66:	4607      	mov	r7, r0
  404f68:	d12e      	bne.n	404fc8 <__pow5mult+0x6c>
  404f6a:	460d      	mov	r5, r1
  404f6c:	10a4      	asrs	r4, r4, #2
  404f6e:	d01c      	beq.n	404faa <__pow5mult+0x4e>
  404f70:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  404f72:	b396      	cbz	r6, 404fda <__pow5mult+0x7e>
  404f74:	07e3      	lsls	r3, r4, #31
  404f76:	f04f 0800 	mov.w	r8, #0
  404f7a:	d406      	bmi.n	404f8a <__pow5mult+0x2e>
  404f7c:	1064      	asrs	r4, r4, #1
  404f7e:	d014      	beq.n	404faa <__pow5mult+0x4e>
  404f80:	6830      	ldr	r0, [r6, #0]
  404f82:	b1a8      	cbz	r0, 404fb0 <__pow5mult+0x54>
  404f84:	4606      	mov	r6, r0
  404f86:	07e3      	lsls	r3, r4, #31
  404f88:	d5f8      	bpl.n	404f7c <__pow5mult+0x20>
  404f8a:	4632      	mov	r2, r6
  404f8c:	4629      	mov	r1, r5
  404f8e:	4638      	mov	r0, r7
  404f90:	f7ff ff52 	bl	404e38 <__multiply>
  404f94:	b1b5      	cbz	r5, 404fc4 <__pow5mult+0x68>
  404f96:	686a      	ldr	r2, [r5, #4]
  404f98:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404f9a:	1064      	asrs	r4, r4, #1
  404f9c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404fa0:	6029      	str	r1, [r5, #0]
  404fa2:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  404fa6:	4605      	mov	r5, r0
  404fa8:	d1ea      	bne.n	404f80 <__pow5mult+0x24>
  404faa:	4628      	mov	r0, r5
  404fac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404fb0:	4632      	mov	r2, r6
  404fb2:	4631      	mov	r1, r6
  404fb4:	4638      	mov	r0, r7
  404fb6:	f7ff ff3f 	bl	404e38 <__multiply>
  404fba:	6030      	str	r0, [r6, #0]
  404fbc:	f8c0 8000 	str.w	r8, [r0]
  404fc0:	4606      	mov	r6, r0
  404fc2:	e7e0      	b.n	404f86 <__pow5mult+0x2a>
  404fc4:	4605      	mov	r5, r0
  404fc6:	e7d9      	b.n	404f7c <__pow5mult+0x20>
  404fc8:	1e5a      	subs	r2, r3, #1
  404fca:	4d0b      	ldr	r5, [pc, #44]	; (404ff8 <__pow5mult+0x9c>)
  404fcc:	2300      	movs	r3, #0
  404fce:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  404fd2:	f7ff fe97 	bl	404d04 <__multadd>
  404fd6:	4605      	mov	r5, r0
  404fd8:	e7c8      	b.n	404f6c <__pow5mult+0x10>
  404fda:	2101      	movs	r1, #1
  404fdc:	4638      	mov	r0, r7
  404fde:	f7ff fe61 	bl	404ca4 <_Balloc>
  404fe2:	f240 2171 	movw	r1, #625	; 0x271
  404fe6:	2201      	movs	r2, #1
  404fe8:	2300      	movs	r3, #0
  404fea:	6141      	str	r1, [r0, #20]
  404fec:	6102      	str	r2, [r0, #16]
  404fee:	4606      	mov	r6, r0
  404ff0:	64b8      	str	r0, [r7, #72]	; 0x48
  404ff2:	6003      	str	r3, [r0, #0]
  404ff4:	e7be      	b.n	404f74 <__pow5mult+0x18>
  404ff6:	bf00      	nop
  404ff8:	00406d88 	.word	0x00406d88

00404ffc <__lshift>:
  404ffc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405000:	4691      	mov	r9, r2
  405002:	690a      	ldr	r2, [r1, #16]
  405004:	688b      	ldr	r3, [r1, #8]
  405006:	ea4f 1469 	mov.w	r4, r9, asr #5
  40500a:	eb04 0802 	add.w	r8, r4, r2
  40500e:	f108 0501 	add.w	r5, r8, #1
  405012:	429d      	cmp	r5, r3
  405014:	460e      	mov	r6, r1
  405016:	4607      	mov	r7, r0
  405018:	6849      	ldr	r1, [r1, #4]
  40501a:	dd04      	ble.n	405026 <__lshift+0x2a>
  40501c:	005b      	lsls	r3, r3, #1
  40501e:	429d      	cmp	r5, r3
  405020:	f101 0101 	add.w	r1, r1, #1
  405024:	dcfa      	bgt.n	40501c <__lshift+0x20>
  405026:	4638      	mov	r0, r7
  405028:	f7ff fe3c 	bl	404ca4 <_Balloc>
  40502c:	2c00      	cmp	r4, #0
  40502e:	f100 0314 	add.w	r3, r0, #20
  405032:	dd06      	ble.n	405042 <__lshift+0x46>
  405034:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  405038:	2100      	movs	r1, #0
  40503a:	f843 1b04 	str.w	r1, [r3], #4
  40503e:	429a      	cmp	r2, r3
  405040:	d1fb      	bne.n	40503a <__lshift+0x3e>
  405042:	6934      	ldr	r4, [r6, #16]
  405044:	f106 0114 	add.w	r1, r6, #20
  405048:	f019 091f 	ands.w	r9, r9, #31
  40504c:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  405050:	d01d      	beq.n	40508e <__lshift+0x92>
  405052:	f1c9 0c20 	rsb	ip, r9, #32
  405056:	2200      	movs	r2, #0
  405058:	680c      	ldr	r4, [r1, #0]
  40505a:	fa04 f409 	lsl.w	r4, r4, r9
  40505e:	4314      	orrs	r4, r2
  405060:	f843 4b04 	str.w	r4, [r3], #4
  405064:	f851 2b04 	ldr.w	r2, [r1], #4
  405068:	458e      	cmp	lr, r1
  40506a:	fa22 f20c 	lsr.w	r2, r2, ip
  40506e:	d8f3      	bhi.n	405058 <__lshift+0x5c>
  405070:	601a      	str	r2, [r3, #0]
  405072:	b10a      	cbz	r2, 405078 <__lshift+0x7c>
  405074:	f108 0502 	add.w	r5, r8, #2
  405078:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  40507a:	6872      	ldr	r2, [r6, #4]
  40507c:	3d01      	subs	r5, #1
  40507e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405082:	6105      	str	r5, [r0, #16]
  405084:	6031      	str	r1, [r6, #0]
  405086:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  40508a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40508e:	3b04      	subs	r3, #4
  405090:	f851 2b04 	ldr.w	r2, [r1], #4
  405094:	f843 2f04 	str.w	r2, [r3, #4]!
  405098:	458e      	cmp	lr, r1
  40509a:	d8f9      	bhi.n	405090 <__lshift+0x94>
  40509c:	e7ec      	b.n	405078 <__lshift+0x7c>
  40509e:	bf00      	nop

004050a0 <__mcmp>:
  4050a0:	b430      	push	{r4, r5}
  4050a2:	690b      	ldr	r3, [r1, #16]
  4050a4:	4605      	mov	r5, r0
  4050a6:	6900      	ldr	r0, [r0, #16]
  4050a8:	1ac0      	subs	r0, r0, r3
  4050aa:	d10f      	bne.n	4050cc <__mcmp+0x2c>
  4050ac:	009b      	lsls	r3, r3, #2
  4050ae:	3514      	adds	r5, #20
  4050b0:	3114      	adds	r1, #20
  4050b2:	4419      	add	r1, r3
  4050b4:	442b      	add	r3, r5
  4050b6:	e001      	b.n	4050bc <__mcmp+0x1c>
  4050b8:	429d      	cmp	r5, r3
  4050ba:	d207      	bcs.n	4050cc <__mcmp+0x2c>
  4050bc:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  4050c0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  4050c4:	4294      	cmp	r4, r2
  4050c6:	d0f7      	beq.n	4050b8 <__mcmp+0x18>
  4050c8:	d302      	bcc.n	4050d0 <__mcmp+0x30>
  4050ca:	2001      	movs	r0, #1
  4050cc:	bc30      	pop	{r4, r5}
  4050ce:	4770      	bx	lr
  4050d0:	f04f 30ff 	mov.w	r0, #4294967295
  4050d4:	e7fa      	b.n	4050cc <__mcmp+0x2c>
  4050d6:	bf00      	nop

004050d8 <__mdiff>:
  4050d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4050dc:	690f      	ldr	r7, [r1, #16]
  4050de:	460e      	mov	r6, r1
  4050e0:	6911      	ldr	r1, [r2, #16]
  4050e2:	1a7f      	subs	r7, r7, r1
  4050e4:	2f00      	cmp	r7, #0
  4050e6:	4690      	mov	r8, r2
  4050e8:	d117      	bne.n	40511a <__mdiff+0x42>
  4050ea:	0089      	lsls	r1, r1, #2
  4050ec:	f106 0514 	add.w	r5, r6, #20
  4050f0:	f102 0e14 	add.w	lr, r2, #20
  4050f4:	186b      	adds	r3, r5, r1
  4050f6:	4471      	add	r1, lr
  4050f8:	e001      	b.n	4050fe <__mdiff+0x26>
  4050fa:	429d      	cmp	r5, r3
  4050fc:	d25c      	bcs.n	4051b8 <__mdiff+0xe0>
  4050fe:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  405102:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  405106:	42a2      	cmp	r2, r4
  405108:	d0f7      	beq.n	4050fa <__mdiff+0x22>
  40510a:	d25e      	bcs.n	4051ca <__mdiff+0xf2>
  40510c:	4633      	mov	r3, r6
  40510e:	462c      	mov	r4, r5
  405110:	4646      	mov	r6, r8
  405112:	4675      	mov	r5, lr
  405114:	4698      	mov	r8, r3
  405116:	2701      	movs	r7, #1
  405118:	e005      	b.n	405126 <__mdiff+0x4e>
  40511a:	db58      	blt.n	4051ce <__mdiff+0xf6>
  40511c:	f106 0514 	add.w	r5, r6, #20
  405120:	f108 0414 	add.w	r4, r8, #20
  405124:	2700      	movs	r7, #0
  405126:	6871      	ldr	r1, [r6, #4]
  405128:	f7ff fdbc 	bl	404ca4 <_Balloc>
  40512c:	f8d8 3010 	ldr.w	r3, [r8, #16]
  405130:	6936      	ldr	r6, [r6, #16]
  405132:	60c7      	str	r7, [r0, #12]
  405134:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  405138:	46a6      	mov	lr, r4
  40513a:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  40513e:	f100 0414 	add.w	r4, r0, #20
  405142:	2300      	movs	r3, #0
  405144:	f85e 1b04 	ldr.w	r1, [lr], #4
  405148:	f855 8b04 	ldr.w	r8, [r5], #4
  40514c:	b28a      	uxth	r2, r1
  40514e:	fa13 f388 	uxtah	r3, r3, r8
  405152:	0c09      	lsrs	r1, r1, #16
  405154:	1a9a      	subs	r2, r3, r2
  405156:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  40515a:	eb03 4322 	add.w	r3, r3, r2, asr #16
  40515e:	b292      	uxth	r2, r2
  405160:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  405164:	45f4      	cmp	ip, lr
  405166:	f844 2b04 	str.w	r2, [r4], #4
  40516a:	ea4f 4323 	mov.w	r3, r3, asr #16
  40516e:	d8e9      	bhi.n	405144 <__mdiff+0x6c>
  405170:	42af      	cmp	r7, r5
  405172:	d917      	bls.n	4051a4 <__mdiff+0xcc>
  405174:	46a4      	mov	ip, r4
  405176:	46ae      	mov	lr, r5
  405178:	f85e 2b04 	ldr.w	r2, [lr], #4
  40517c:	fa13 f382 	uxtah	r3, r3, r2
  405180:	1419      	asrs	r1, r3, #16
  405182:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  405186:	b29b      	uxth	r3, r3
  405188:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  40518c:	4577      	cmp	r7, lr
  40518e:	f84c 2b04 	str.w	r2, [ip], #4
  405192:	ea4f 4321 	mov.w	r3, r1, asr #16
  405196:	d8ef      	bhi.n	405178 <__mdiff+0xa0>
  405198:	43ed      	mvns	r5, r5
  40519a:	442f      	add	r7, r5
  40519c:	f027 0703 	bic.w	r7, r7, #3
  4051a0:	3704      	adds	r7, #4
  4051a2:	443c      	add	r4, r7
  4051a4:	3c04      	subs	r4, #4
  4051a6:	b922      	cbnz	r2, 4051b2 <__mdiff+0xda>
  4051a8:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  4051ac:	3e01      	subs	r6, #1
  4051ae:	2b00      	cmp	r3, #0
  4051b0:	d0fa      	beq.n	4051a8 <__mdiff+0xd0>
  4051b2:	6106      	str	r6, [r0, #16]
  4051b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4051b8:	2100      	movs	r1, #0
  4051ba:	f7ff fd73 	bl	404ca4 <_Balloc>
  4051be:	2201      	movs	r2, #1
  4051c0:	2300      	movs	r3, #0
  4051c2:	6102      	str	r2, [r0, #16]
  4051c4:	6143      	str	r3, [r0, #20]
  4051c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4051ca:	4674      	mov	r4, lr
  4051cc:	e7ab      	b.n	405126 <__mdiff+0x4e>
  4051ce:	4633      	mov	r3, r6
  4051d0:	f106 0414 	add.w	r4, r6, #20
  4051d4:	f102 0514 	add.w	r5, r2, #20
  4051d8:	4616      	mov	r6, r2
  4051da:	2701      	movs	r7, #1
  4051dc:	4698      	mov	r8, r3
  4051de:	e7a2      	b.n	405126 <__mdiff+0x4e>

004051e0 <__d2b>:
  4051e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4051e4:	b082      	sub	sp, #8
  4051e6:	2101      	movs	r1, #1
  4051e8:	461c      	mov	r4, r3
  4051ea:	f3c3 570a 	ubfx	r7, r3, #20, #11
  4051ee:	4615      	mov	r5, r2
  4051f0:	9e08      	ldr	r6, [sp, #32]
  4051f2:	f7ff fd57 	bl	404ca4 <_Balloc>
  4051f6:	f3c4 0413 	ubfx	r4, r4, #0, #20
  4051fa:	4680      	mov	r8, r0
  4051fc:	b10f      	cbz	r7, 405202 <__d2b+0x22>
  4051fe:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  405202:	9401      	str	r4, [sp, #4]
  405204:	b31d      	cbz	r5, 40524e <__d2b+0x6e>
  405206:	a802      	add	r0, sp, #8
  405208:	f840 5d08 	str.w	r5, [r0, #-8]!
  40520c:	f7ff fdda 	bl	404dc4 <__lo0bits>
  405210:	2800      	cmp	r0, #0
  405212:	d134      	bne.n	40527e <__d2b+0x9e>
  405214:	e89d 000c 	ldmia.w	sp, {r2, r3}
  405218:	f8c8 2014 	str.w	r2, [r8, #20]
  40521c:	2b00      	cmp	r3, #0
  40521e:	bf0c      	ite	eq
  405220:	2101      	moveq	r1, #1
  405222:	2102      	movne	r1, #2
  405224:	f8c8 3018 	str.w	r3, [r8, #24]
  405228:	f8c8 1010 	str.w	r1, [r8, #16]
  40522c:	b9df      	cbnz	r7, 405266 <__d2b+0x86>
  40522e:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  405232:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  405236:	6030      	str	r0, [r6, #0]
  405238:	6918      	ldr	r0, [r3, #16]
  40523a:	f7ff fda3 	bl	404d84 <__hi0bits>
  40523e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405240:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  405244:	6018      	str	r0, [r3, #0]
  405246:	4640      	mov	r0, r8
  405248:	b002      	add	sp, #8
  40524a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40524e:	a801      	add	r0, sp, #4
  405250:	f7ff fdb8 	bl	404dc4 <__lo0bits>
  405254:	9b01      	ldr	r3, [sp, #4]
  405256:	f8c8 3014 	str.w	r3, [r8, #20]
  40525a:	2101      	movs	r1, #1
  40525c:	3020      	adds	r0, #32
  40525e:	f8c8 1010 	str.w	r1, [r8, #16]
  405262:	2f00      	cmp	r7, #0
  405264:	d0e3      	beq.n	40522e <__d2b+0x4e>
  405266:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405268:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  40526c:	4407      	add	r7, r0
  40526e:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  405272:	6037      	str	r7, [r6, #0]
  405274:	6018      	str	r0, [r3, #0]
  405276:	4640      	mov	r0, r8
  405278:	b002      	add	sp, #8
  40527a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40527e:	e89d 000a 	ldmia.w	sp, {r1, r3}
  405282:	f1c0 0220 	rsb	r2, r0, #32
  405286:	fa03 f202 	lsl.w	r2, r3, r2
  40528a:	430a      	orrs	r2, r1
  40528c:	40c3      	lsrs	r3, r0
  40528e:	9301      	str	r3, [sp, #4]
  405290:	f8c8 2014 	str.w	r2, [r8, #20]
  405294:	e7c2      	b.n	40521c <__d2b+0x3c>
  405296:	bf00      	nop

00405298 <_realloc_r>:
  405298:	2900      	cmp	r1, #0
  40529a:	f000 8095 	beq.w	4053c8 <_realloc_r+0x130>
  40529e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4052a2:	460d      	mov	r5, r1
  4052a4:	4616      	mov	r6, r2
  4052a6:	b083      	sub	sp, #12
  4052a8:	4680      	mov	r8, r0
  4052aa:	f106 070b 	add.w	r7, r6, #11
  4052ae:	f7ff fced 	bl	404c8c <__malloc_lock>
  4052b2:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4052b6:	2f16      	cmp	r7, #22
  4052b8:	f02e 0403 	bic.w	r4, lr, #3
  4052bc:	f1a5 0908 	sub.w	r9, r5, #8
  4052c0:	d83c      	bhi.n	40533c <_realloc_r+0xa4>
  4052c2:	2210      	movs	r2, #16
  4052c4:	4617      	mov	r7, r2
  4052c6:	42be      	cmp	r6, r7
  4052c8:	d83d      	bhi.n	405346 <_realloc_r+0xae>
  4052ca:	4294      	cmp	r4, r2
  4052cc:	da43      	bge.n	405356 <_realloc_r+0xbe>
  4052ce:	4bc4      	ldr	r3, [pc, #784]	; (4055e0 <_realloc_r+0x348>)
  4052d0:	6899      	ldr	r1, [r3, #8]
  4052d2:	eb09 0004 	add.w	r0, r9, r4
  4052d6:	4288      	cmp	r0, r1
  4052d8:	f000 80b4 	beq.w	405444 <_realloc_r+0x1ac>
  4052dc:	6843      	ldr	r3, [r0, #4]
  4052de:	f023 0101 	bic.w	r1, r3, #1
  4052e2:	4401      	add	r1, r0
  4052e4:	6849      	ldr	r1, [r1, #4]
  4052e6:	07c9      	lsls	r1, r1, #31
  4052e8:	d54c      	bpl.n	405384 <_realloc_r+0xec>
  4052ea:	f01e 0f01 	tst.w	lr, #1
  4052ee:	f000 809b 	beq.w	405428 <_realloc_r+0x190>
  4052f2:	4631      	mov	r1, r6
  4052f4:	4640      	mov	r0, r8
  4052f6:	f7ff f8af 	bl	404458 <_malloc_r>
  4052fa:	4606      	mov	r6, r0
  4052fc:	2800      	cmp	r0, #0
  4052fe:	d03a      	beq.n	405376 <_realloc_r+0xde>
  405300:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405304:	f023 0301 	bic.w	r3, r3, #1
  405308:	444b      	add	r3, r9
  40530a:	f1a0 0208 	sub.w	r2, r0, #8
  40530e:	429a      	cmp	r2, r3
  405310:	f000 8121 	beq.w	405556 <_realloc_r+0x2be>
  405314:	1f22      	subs	r2, r4, #4
  405316:	2a24      	cmp	r2, #36	; 0x24
  405318:	f200 8107 	bhi.w	40552a <_realloc_r+0x292>
  40531c:	2a13      	cmp	r2, #19
  40531e:	f200 80db 	bhi.w	4054d8 <_realloc_r+0x240>
  405322:	4603      	mov	r3, r0
  405324:	462a      	mov	r2, r5
  405326:	6811      	ldr	r1, [r2, #0]
  405328:	6019      	str	r1, [r3, #0]
  40532a:	6851      	ldr	r1, [r2, #4]
  40532c:	6059      	str	r1, [r3, #4]
  40532e:	6892      	ldr	r2, [r2, #8]
  405330:	609a      	str	r2, [r3, #8]
  405332:	4629      	mov	r1, r5
  405334:	4640      	mov	r0, r8
  405336:	f7fe ff97 	bl	404268 <_free_r>
  40533a:	e01c      	b.n	405376 <_realloc_r+0xde>
  40533c:	f027 0707 	bic.w	r7, r7, #7
  405340:	2f00      	cmp	r7, #0
  405342:	463a      	mov	r2, r7
  405344:	dabf      	bge.n	4052c6 <_realloc_r+0x2e>
  405346:	2600      	movs	r6, #0
  405348:	230c      	movs	r3, #12
  40534a:	4630      	mov	r0, r6
  40534c:	f8c8 3000 	str.w	r3, [r8]
  405350:	b003      	add	sp, #12
  405352:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405356:	462e      	mov	r6, r5
  405358:	1be3      	subs	r3, r4, r7
  40535a:	2b0f      	cmp	r3, #15
  40535c:	d81e      	bhi.n	40539c <_realloc_r+0x104>
  40535e:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405362:	f003 0301 	and.w	r3, r3, #1
  405366:	4323      	orrs	r3, r4
  405368:	444c      	add	r4, r9
  40536a:	f8c9 3004 	str.w	r3, [r9, #4]
  40536e:	6863      	ldr	r3, [r4, #4]
  405370:	f043 0301 	orr.w	r3, r3, #1
  405374:	6063      	str	r3, [r4, #4]
  405376:	4640      	mov	r0, r8
  405378:	f7ff fc8e 	bl	404c98 <__malloc_unlock>
  40537c:	4630      	mov	r0, r6
  40537e:	b003      	add	sp, #12
  405380:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405384:	f023 0303 	bic.w	r3, r3, #3
  405388:	18e1      	adds	r1, r4, r3
  40538a:	4291      	cmp	r1, r2
  40538c:	db1f      	blt.n	4053ce <_realloc_r+0x136>
  40538e:	68c3      	ldr	r3, [r0, #12]
  405390:	6882      	ldr	r2, [r0, #8]
  405392:	462e      	mov	r6, r5
  405394:	60d3      	str	r3, [r2, #12]
  405396:	460c      	mov	r4, r1
  405398:	609a      	str	r2, [r3, #8]
  40539a:	e7dd      	b.n	405358 <_realloc_r+0xc0>
  40539c:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4053a0:	eb09 0107 	add.w	r1, r9, r7
  4053a4:	f002 0201 	and.w	r2, r2, #1
  4053a8:	444c      	add	r4, r9
  4053aa:	f043 0301 	orr.w	r3, r3, #1
  4053ae:	4317      	orrs	r7, r2
  4053b0:	f8c9 7004 	str.w	r7, [r9, #4]
  4053b4:	604b      	str	r3, [r1, #4]
  4053b6:	6863      	ldr	r3, [r4, #4]
  4053b8:	f043 0301 	orr.w	r3, r3, #1
  4053bc:	3108      	adds	r1, #8
  4053be:	6063      	str	r3, [r4, #4]
  4053c0:	4640      	mov	r0, r8
  4053c2:	f7fe ff51 	bl	404268 <_free_r>
  4053c6:	e7d6      	b.n	405376 <_realloc_r+0xde>
  4053c8:	4611      	mov	r1, r2
  4053ca:	f7ff b845 	b.w	404458 <_malloc_r>
  4053ce:	f01e 0f01 	tst.w	lr, #1
  4053d2:	d18e      	bne.n	4052f2 <_realloc_r+0x5a>
  4053d4:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4053d8:	eba9 0a01 	sub.w	sl, r9, r1
  4053dc:	f8da 1004 	ldr.w	r1, [sl, #4]
  4053e0:	f021 0103 	bic.w	r1, r1, #3
  4053e4:	440b      	add	r3, r1
  4053e6:	4423      	add	r3, r4
  4053e8:	4293      	cmp	r3, r2
  4053ea:	db25      	blt.n	405438 <_realloc_r+0x1a0>
  4053ec:	68c2      	ldr	r2, [r0, #12]
  4053ee:	6881      	ldr	r1, [r0, #8]
  4053f0:	4656      	mov	r6, sl
  4053f2:	60ca      	str	r2, [r1, #12]
  4053f4:	6091      	str	r1, [r2, #8]
  4053f6:	f8da 100c 	ldr.w	r1, [sl, #12]
  4053fa:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4053fe:	1f22      	subs	r2, r4, #4
  405400:	2a24      	cmp	r2, #36	; 0x24
  405402:	60c1      	str	r1, [r0, #12]
  405404:	6088      	str	r0, [r1, #8]
  405406:	f200 8094 	bhi.w	405532 <_realloc_r+0x29a>
  40540a:	2a13      	cmp	r2, #19
  40540c:	d96f      	bls.n	4054ee <_realloc_r+0x256>
  40540e:	6829      	ldr	r1, [r5, #0]
  405410:	f8ca 1008 	str.w	r1, [sl, #8]
  405414:	6869      	ldr	r1, [r5, #4]
  405416:	f8ca 100c 	str.w	r1, [sl, #12]
  40541a:	2a1b      	cmp	r2, #27
  40541c:	f200 80a2 	bhi.w	405564 <_realloc_r+0x2cc>
  405420:	3508      	adds	r5, #8
  405422:	f10a 0210 	add.w	r2, sl, #16
  405426:	e063      	b.n	4054f0 <_realloc_r+0x258>
  405428:	f855 3c08 	ldr.w	r3, [r5, #-8]
  40542c:	eba9 0a03 	sub.w	sl, r9, r3
  405430:	f8da 1004 	ldr.w	r1, [sl, #4]
  405434:	f021 0103 	bic.w	r1, r1, #3
  405438:	1863      	adds	r3, r4, r1
  40543a:	4293      	cmp	r3, r2
  40543c:	f6ff af59 	blt.w	4052f2 <_realloc_r+0x5a>
  405440:	4656      	mov	r6, sl
  405442:	e7d8      	b.n	4053f6 <_realloc_r+0x15e>
  405444:	6841      	ldr	r1, [r0, #4]
  405446:	f021 0b03 	bic.w	fp, r1, #3
  40544a:	44a3      	add	fp, r4
  40544c:	f107 0010 	add.w	r0, r7, #16
  405450:	4583      	cmp	fp, r0
  405452:	da56      	bge.n	405502 <_realloc_r+0x26a>
  405454:	f01e 0f01 	tst.w	lr, #1
  405458:	f47f af4b 	bne.w	4052f2 <_realloc_r+0x5a>
  40545c:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405460:	eba9 0a01 	sub.w	sl, r9, r1
  405464:	f8da 1004 	ldr.w	r1, [sl, #4]
  405468:	f021 0103 	bic.w	r1, r1, #3
  40546c:	448b      	add	fp, r1
  40546e:	4558      	cmp	r0, fp
  405470:	dce2      	bgt.n	405438 <_realloc_r+0x1a0>
  405472:	4656      	mov	r6, sl
  405474:	f8da 100c 	ldr.w	r1, [sl, #12]
  405478:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40547c:	1f22      	subs	r2, r4, #4
  40547e:	2a24      	cmp	r2, #36	; 0x24
  405480:	60c1      	str	r1, [r0, #12]
  405482:	6088      	str	r0, [r1, #8]
  405484:	f200 808f 	bhi.w	4055a6 <_realloc_r+0x30e>
  405488:	2a13      	cmp	r2, #19
  40548a:	f240 808a 	bls.w	4055a2 <_realloc_r+0x30a>
  40548e:	6829      	ldr	r1, [r5, #0]
  405490:	f8ca 1008 	str.w	r1, [sl, #8]
  405494:	6869      	ldr	r1, [r5, #4]
  405496:	f8ca 100c 	str.w	r1, [sl, #12]
  40549a:	2a1b      	cmp	r2, #27
  40549c:	f200 808a 	bhi.w	4055b4 <_realloc_r+0x31c>
  4054a0:	3508      	adds	r5, #8
  4054a2:	f10a 0210 	add.w	r2, sl, #16
  4054a6:	6829      	ldr	r1, [r5, #0]
  4054a8:	6011      	str	r1, [r2, #0]
  4054aa:	6869      	ldr	r1, [r5, #4]
  4054ac:	6051      	str	r1, [r2, #4]
  4054ae:	68a9      	ldr	r1, [r5, #8]
  4054b0:	6091      	str	r1, [r2, #8]
  4054b2:	eb0a 0107 	add.w	r1, sl, r7
  4054b6:	ebab 0207 	sub.w	r2, fp, r7
  4054ba:	f042 0201 	orr.w	r2, r2, #1
  4054be:	6099      	str	r1, [r3, #8]
  4054c0:	604a      	str	r2, [r1, #4]
  4054c2:	f8da 3004 	ldr.w	r3, [sl, #4]
  4054c6:	f003 0301 	and.w	r3, r3, #1
  4054ca:	431f      	orrs	r7, r3
  4054cc:	4640      	mov	r0, r8
  4054ce:	f8ca 7004 	str.w	r7, [sl, #4]
  4054d2:	f7ff fbe1 	bl	404c98 <__malloc_unlock>
  4054d6:	e751      	b.n	40537c <_realloc_r+0xe4>
  4054d8:	682b      	ldr	r3, [r5, #0]
  4054da:	6003      	str	r3, [r0, #0]
  4054dc:	686b      	ldr	r3, [r5, #4]
  4054de:	6043      	str	r3, [r0, #4]
  4054e0:	2a1b      	cmp	r2, #27
  4054e2:	d82d      	bhi.n	405540 <_realloc_r+0x2a8>
  4054e4:	f100 0308 	add.w	r3, r0, #8
  4054e8:	f105 0208 	add.w	r2, r5, #8
  4054ec:	e71b      	b.n	405326 <_realloc_r+0x8e>
  4054ee:	4632      	mov	r2, r6
  4054f0:	6829      	ldr	r1, [r5, #0]
  4054f2:	6011      	str	r1, [r2, #0]
  4054f4:	6869      	ldr	r1, [r5, #4]
  4054f6:	6051      	str	r1, [r2, #4]
  4054f8:	68a9      	ldr	r1, [r5, #8]
  4054fa:	6091      	str	r1, [r2, #8]
  4054fc:	461c      	mov	r4, r3
  4054fe:	46d1      	mov	r9, sl
  405500:	e72a      	b.n	405358 <_realloc_r+0xc0>
  405502:	eb09 0107 	add.w	r1, r9, r7
  405506:	ebab 0b07 	sub.w	fp, fp, r7
  40550a:	f04b 0201 	orr.w	r2, fp, #1
  40550e:	6099      	str	r1, [r3, #8]
  405510:	604a      	str	r2, [r1, #4]
  405512:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405516:	f003 0301 	and.w	r3, r3, #1
  40551a:	431f      	orrs	r7, r3
  40551c:	4640      	mov	r0, r8
  40551e:	f845 7c04 	str.w	r7, [r5, #-4]
  405522:	f7ff fbb9 	bl	404c98 <__malloc_unlock>
  405526:	462e      	mov	r6, r5
  405528:	e728      	b.n	40537c <_realloc_r+0xe4>
  40552a:	4629      	mov	r1, r5
  40552c:	f7ff fb4a 	bl	404bc4 <memmove>
  405530:	e6ff      	b.n	405332 <_realloc_r+0x9a>
  405532:	4629      	mov	r1, r5
  405534:	4630      	mov	r0, r6
  405536:	461c      	mov	r4, r3
  405538:	46d1      	mov	r9, sl
  40553a:	f7ff fb43 	bl	404bc4 <memmove>
  40553e:	e70b      	b.n	405358 <_realloc_r+0xc0>
  405540:	68ab      	ldr	r3, [r5, #8]
  405542:	6083      	str	r3, [r0, #8]
  405544:	68eb      	ldr	r3, [r5, #12]
  405546:	60c3      	str	r3, [r0, #12]
  405548:	2a24      	cmp	r2, #36	; 0x24
  40554a:	d017      	beq.n	40557c <_realloc_r+0x2e4>
  40554c:	f100 0310 	add.w	r3, r0, #16
  405550:	f105 0210 	add.w	r2, r5, #16
  405554:	e6e7      	b.n	405326 <_realloc_r+0x8e>
  405556:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40555a:	f023 0303 	bic.w	r3, r3, #3
  40555e:	441c      	add	r4, r3
  405560:	462e      	mov	r6, r5
  405562:	e6f9      	b.n	405358 <_realloc_r+0xc0>
  405564:	68a9      	ldr	r1, [r5, #8]
  405566:	f8ca 1010 	str.w	r1, [sl, #16]
  40556a:	68e9      	ldr	r1, [r5, #12]
  40556c:	f8ca 1014 	str.w	r1, [sl, #20]
  405570:	2a24      	cmp	r2, #36	; 0x24
  405572:	d00c      	beq.n	40558e <_realloc_r+0x2f6>
  405574:	3510      	adds	r5, #16
  405576:	f10a 0218 	add.w	r2, sl, #24
  40557a:	e7b9      	b.n	4054f0 <_realloc_r+0x258>
  40557c:	692b      	ldr	r3, [r5, #16]
  40557e:	6103      	str	r3, [r0, #16]
  405580:	696b      	ldr	r3, [r5, #20]
  405582:	6143      	str	r3, [r0, #20]
  405584:	f105 0218 	add.w	r2, r5, #24
  405588:	f100 0318 	add.w	r3, r0, #24
  40558c:	e6cb      	b.n	405326 <_realloc_r+0x8e>
  40558e:	692a      	ldr	r2, [r5, #16]
  405590:	f8ca 2018 	str.w	r2, [sl, #24]
  405594:	696a      	ldr	r2, [r5, #20]
  405596:	f8ca 201c 	str.w	r2, [sl, #28]
  40559a:	3518      	adds	r5, #24
  40559c:	f10a 0220 	add.w	r2, sl, #32
  4055a0:	e7a6      	b.n	4054f0 <_realloc_r+0x258>
  4055a2:	4632      	mov	r2, r6
  4055a4:	e77f      	b.n	4054a6 <_realloc_r+0x20e>
  4055a6:	4629      	mov	r1, r5
  4055a8:	4630      	mov	r0, r6
  4055aa:	9301      	str	r3, [sp, #4]
  4055ac:	f7ff fb0a 	bl	404bc4 <memmove>
  4055b0:	9b01      	ldr	r3, [sp, #4]
  4055b2:	e77e      	b.n	4054b2 <_realloc_r+0x21a>
  4055b4:	68a9      	ldr	r1, [r5, #8]
  4055b6:	f8ca 1010 	str.w	r1, [sl, #16]
  4055ba:	68e9      	ldr	r1, [r5, #12]
  4055bc:	f8ca 1014 	str.w	r1, [sl, #20]
  4055c0:	2a24      	cmp	r2, #36	; 0x24
  4055c2:	d003      	beq.n	4055cc <_realloc_r+0x334>
  4055c4:	3510      	adds	r5, #16
  4055c6:	f10a 0218 	add.w	r2, sl, #24
  4055ca:	e76c      	b.n	4054a6 <_realloc_r+0x20e>
  4055cc:	692a      	ldr	r2, [r5, #16]
  4055ce:	f8ca 2018 	str.w	r2, [sl, #24]
  4055d2:	696a      	ldr	r2, [r5, #20]
  4055d4:	f8ca 201c 	str.w	r2, [sl, #28]
  4055d8:	3518      	adds	r5, #24
  4055da:	f10a 0220 	add.w	r2, sl, #32
  4055de:	e762      	b.n	4054a6 <_realloc_r+0x20e>
  4055e0:	200005b0 	.word	0x200005b0

004055e4 <_sbrk_r>:
  4055e4:	b538      	push	{r3, r4, r5, lr}
  4055e6:	4c07      	ldr	r4, [pc, #28]	; (405604 <_sbrk_r+0x20>)
  4055e8:	2300      	movs	r3, #0
  4055ea:	4605      	mov	r5, r0
  4055ec:	4608      	mov	r0, r1
  4055ee:	6023      	str	r3, [r4, #0]
  4055f0:	f7fc f8e6 	bl	4017c0 <_sbrk>
  4055f4:	1c43      	adds	r3, r0, #1
  4055f6:	d000      	beq.n	4055fa <_sbrk_r+0x16>
  4055f8:	bd38      	pop	{r3, r4, r5, pc}
  4055fa:	6823      	ldr	r3, [r4, #0]
  4055fc:	2b00      	cmp	r3, #0
  4055fe:	d0fb      	beq.n	4055f8 <_sbrk_r+0x14>
  405600:	602b      	str	r3, [r5, #0]
  405602:	bd38      	pop	{r3, r4, r5, pc}
  405604:	20000e90 	.word	0x20000e90

00405608 <__ssprint_r>:
  405608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40560c:	6893      	ldr	r3, [r2, #8]
  40560e:	b083      	sub	sp, #12
  405610:	4690      	mov	r8, r2
  405612:	2b00      	cmp	r3, #0
  405614:	d070      	beq.n	4056f8 <__ssprint_r+0xf0>
  405616:	4682      	mov	sl, r0
  405618:	460c      	mov	r4, r1
  40561a:	6817      	ldr	r7, [r2, #0]
  40561c:	688d      	ldr	r5, [r1, #8]
  40561e:	6808      	ldr	r0, [r1, #0]
  405620:	e042      	b.n	4056a8 <__ssprint_r+0xa0>
  405622:	89a3      	ldrh	r3, [r4, #12]
  405624:	f413 6f90 	tst.w	r3, #1152	; 0x480
  405628:	d02e      	beq.n	405688 <__ssprint_r+0x80>
  40562a:	6965      	ldr	r5, [r4, #20]
  40562c:	6921      	ldr	r1, [r4, #16]
  40562e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405632:	eba0 0b01 	sub.w	fp, r0, r1
  405636:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40563a:	f10b 0001 	add.w	r0, fp, #1
  40563e:	106d      	asrs	r5, r5, #1
  405640:	4430      	add	r0, r6
  405642:	42a8      	cmp	r0, r5
  405644:	462a      	mov	r2, r5
  405646:	bf84      	itt	hi
  405648:	4605      	movhi	r5, r0
  40564a:	462a      	movhi	r2, r5
  40564c:	055b      	lsls	r3, r3, #21
  40564e:	d538      	bpl.n	4056c2 <__ssprint_r+0xba>
  405650:	4611      	mov	r1, r2
  405652:	4650      	mov	r0, sl
  405654:	f7fe ff00 	bl	404458 <_malloc_r>
  405658:	2800      	cmp	r0, #0
  40565a:	d03c      	beq.n	4056d6 <__ssprint_r+0xce>
  40565c:	465a      	mov	r2, fp
  40565e:	6921      	ldr	r1, [r4, #16]
  405660:	9001      	str	r0, [sp, #4]
  405662:	f7ff fa15 	bl	404a90 <memcpy>
  405666:	89a2      	ldrh	r2, [r4, #12]
  405668:	9b01      	ldr	r3, [sp, #4]
  40566a:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  40566e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  405672:	81a2      	strh	r2, [r4, #12]
  405674:	eba5 020b 	sub.w	r2, r5, fp
  405678:	eb03 000b 	add.w	r0, r3, fp
  40567c:	6165      	str	r5, [r4, #20]
  40567e:	6123      	str	r3, [r4, #16]
  405680:	6020      	str	r0, [r4, #0]
  405682:	60a2      	str	r2, [r4, #8]
  405684:	4635      	mov	r5, r6
  405686:	46b3      	mov	fp, r6
  405688:	465a      	mov	r2, fp
  40568a:	4649      	mov	r1, r9
  40568c:	f7ff fa9a 	bl	404bc4 <memmove>
  405690:	f8d8 3008 	ldr.w	r3, [r8, #8]
  405694:	68a2      	ldr	r2, [r4, #8]
  405696:	6820      	ldr	r0, [r4, #0]
  405698:	1b55      	subs	r5, r2, r5
  40569a:	4458      	add	r0, fp
  40569c:	1b9e      	subs	r6, r3, r6
  40569e:	60a5      	str	r5, [r4, #8]
  4056a0:	6020      	str	r0, [r4, #0]
  4056a2:	f8c8 6008 	str.w	r6, [r8, #8]
  4056a6:	b33e      	cbz	r6, 4056f8 <__ssprint_r+0xf0>
  4056a8:	687e      	ldr	r6, [r7, #4]
  4056aa:	463b      	mov	r3, r7
  4056ac:	3708      	adds	r7, #8
  4056ae:	2e00      	cmp	r6, #0
  4056b0:	d0fa      	beq.n	4056a8 <__ssprint_r+0xa0>
  4056b2:	42ae      	cmp	r6, r5
  4056b4:	f8d3 9000 	ldr.w	r9, [r3]
  4056b8:	46ab      	mov	fp, r5
  4056ba:	d2b2      	bcs.n	405622 <__ssprint_r+0x1a>
  4056bc:	4635      	mov	r5, r6
  4056be:	46b3      	mov	fp, r6
  4056c0:	e7e2      	b.n	405688 <__ssprint_r+0x80>
  4056c2:	4650      	mov	r0, sl
  4056c4:	f7ff fde8 	bl	405298 <_realloc_r>
  4056c8:	4603      	mov	r3, r0
  4056ca:	2800      	cmp	r0, #0
  4056cc:	d1d2      	bne.n	405674 <__ssprint_r+0x6c>
  4056ce:	6921      	ldr	r1, [r4, #16]
  4056d0:	4650      	mov	r0, sl
  4056d2:	f7fe fdc9 	bl	404268 <_free_r>
  4056d6:	230c      	movs	r3, #12
  4056d8:	f8ca 3000 	str.w	r3, [sl]
  4056dc:	89a3      	ldrh	r3, [r4, #12]
  4056de:	2200      	movs	r2, #0
  4056e0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4056e4:	f04f 30ff 	mov.w	r0, #4294967295
  4056e8:	81a3      	strh	r3, [r4, #12]
  4056ea:	f8c8 2008 	str.w	r2, [r8, #8]
  4056ee:	f8c8 2004 	str.w	r2, [r8, #4]
  4056f2:	b003      	add	sp, #12
  4056f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4056f8:	2000      	movs	r0, #0
  4056fa:	f8c8 0004 	str.w	r0, [r8, #4]
  4056fe:	b003      	add	sp, #12
  405700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405704 <__ascii_wctomb>:
  405704:	b121      	cbz	r1, 405710 <__ascii_wctomb+0xc>
  405706:	2aff      	cmp	r2, #255	; 0xff
  405708:	d804      	bhi.n	405714 <__ascii_wctomb+0x10>
  40570a:	700a      	strb	r2, [r1, #0]
  40570c:	2001      	movs	r0, #1
  40570e:	4770      	bx	lr
  405710:	4608      	mov	r0, r1
  405712:	4770      	bx	lr
  405714:	238a      	movs	r3, #138	; 0x8a
  405716:	6003      	str	r3, [r0, #0]
  405718:	f04f 30ff 	mov.w	r0, #4294967295
  40571c:	4770      	bx	lr
  40571e:	bf00      	nop

00405720 <__register_exitproc>:
  405720:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405724:	4d2c      	ldr	r5, [pc, #176]	; (4057d8 <__register_exitproc+0xb8>)
  405726:	4606      	mov	r6, r0
  405728:	6828      	ldr	r0, [r5, #0]
  40572a:	4698      	mov	r8, r3
  40572c:	460f      	mov	r7, r1
  40572e:	4691      	mov	r9, r2
  405730:	f7fe fe8e 	bl	404450 <__retarget_lock_acquire_recursive>
  405734:	4b29      	ldr	r3, [pc, #164]	; (4057dc <__register_exitproc+0xbc>)
  405736:	681c      	ldr	r4, [r3, #0]
  405738:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  40573c:	2b00      	cmp	r3, #0
  40573e:	d03e      	beq.n	4057be <__register_exitproc+0x9e>
  405740:	685a      	ldr	r2, [r3, #4]
  405742:	2a1f      	cmp	r2, #31
  405744:	dc1c      	bgt.n	405780 <__register_exitproc+0x60>
  405746:	f102 0e01 	add.w	lr, r2, #1
  40574a:	b176      	cbz	r6, 40576a <__register_exitproc+0x4a>
  40574c:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405750:	2401      	movs	r4, #1
  405752:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  405756:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  40575a:	4094      	lsls	r4, r2
  40575c:	4320      	orrs	r0, r4
  40575e:	2e02      	cmp	r6, #2
  405760:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  405764:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  405768:	d023      	beq.n	4057b2 <__register_exitproc+0x92>
  40576a:	3202      	adds	r2, #2
  40576c:	f8c3 e004 	str.w	lr, [r3, #4]
  405770:	6828      	ldr	r0, [r5, #0]
  405772:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  405776:	f7fe fe6d 	bl	404454 <__retarget_lock_release_recursive>
  40577a:	2000      	movs	r0, #0
  40577c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405780:	4b17      	ldr	r3, [pc, #92]	; (4057e0 <__register_exitproc+0xc0>)
  405782:	b30b      	cbz	r3, 4057c8 <__register_exitproc+0xa8>
  405784:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405788:	f3af 8000 	nop.w
  40578c:	4603      	mov	r3, r0
  40578e:	b1d8      	cbz	r0, 4057c8 <__register_exitproc+0xa8>
  405790:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  405794:	6002      	str	r2, [r0, #0]
  405796:	2100      	movs	r1, #0
  405798:	6041      	str	r1, [r0, #4]
  40579a:	460a      	mov	r2, r1
  40579c:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4057a0:	f04f 0e01 	mov.w	lr, #1
  4057a4:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4057a8:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4057ac:	2e00      	cmp	r6, #0
  4057ae:	d0dc      	beq.n	40576a <__register_exitproc+0x4a>
  4057b0:	e7cc      	b.n	40574c <__register_exitproc+0x2c>
  4057b2:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4057b6:	430c      	orrs	r4, r1
  4057b8:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4057bc:	e7d5      	b.n	40576a <__register_exitproc+0x4a>
  4057be:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4057c2:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4057c6:	e7bb      	b.n	405740 <__register_exitproc+0x20>
  4057c8:	6828      	ldr	r0, [r5, #0]
  4057ca:	f7fe fe43 	bl	404454 <__retarget_lock_release_recursive>
  4057ce:	f04f 30ff 	mov.w	r0, #4294967295
  4057d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4057d6:	bf00      	nop
  4057d8:	20000440 	.word	0x20000440
  4057dc:	00406c10 	.word	0x00406c10
  4057e0:	00000000 	.word	0x00000000

004057e4 <_calloc_r>:
  4057e4:	b510      	push	{r4, lr}
  4057e6:	fb02 f101 	mul.w	r1, r2, r1
  4057ea:	f7fe fe35 	bl	404458 <_malloc_r>
  4057ee:	4604      	mov	r4, r0
  4057f0:	b1d8      	cbz	r0, 40582a <_calloc_r+0x46>
  4057f2:	f850 2c04 	ldr.w	r2, [r0, #-4]
  4057f6:	f022 0203 	bic.w	r2, r2, #3
  4057fa:	3a04      	subs	r2, #4
  4057fc:	2a24      	cmp	r2, #36	; 0x24
  4057fe:	d818      	bhi.n	405832 <_calloc_r+0x4e>
  405800:	2a13      	cmp	r2, #19
  405802:	d914      	bls.n	40582e <_calloc_r+0x4a>
  405804:	2300      	movs	r3, #0
  405806:	2a1b      	cmp	r2, #27
  405808:	6003      	str	r3, [r0, #0]
  40580a:	6043      	str	r3, [r0, #4]
  40580c:	d916      	bls.n	40583c <_calloc_r+0x58>
  40580e:	2a24      	cmp	r2, #36	; 0x24
  405810:	6083      	str	r3, [r0, #8]
  405812:	60c3      	str	r3, [r0, #12]
  405814:	bf11      	iteee	ne
  405816:	f100 0210 	addne.w	r2, r0, #16
  40581a:	6103      	streq	r3, [r0, #16]
  40581c:	6143      	streq	r3, [r0, #20]
  40581e:	f100 0218 	addeq.w	r2, r0, #24
  405822:	2300      	movs	r3, #0
  405824:	6013      	str	r3, [r2, #0]
  405826:	6053      	str	r3, [r2, #4]
  405828:	6093      	str	r3, [r2, #8]
  40582a:	4620      	mov	r0, r4
  40582c:	bd10      	pop	{r4, pc}
  40582e:	4602      	mov	r2, r0
  405830:	e7f7      	b.n	405822 <_calloc_r+0x3e>
  405832:	2100      	movs	r1, #0
  405834:	f7fc f9c2 	bl	401bbc <memset>
  405838:	4620      	mov	r0, r4
  40583a:	bd10      	pop	{r4, pc}
  40583c:	f100 0208 	add.w	r2, r0, #8
  405840:	e7ef      	b.n	405822 <_calloc_r+0x3e>
  405842:	bf00      	nop

00405844 <__aeabi_drsub>:
  405844:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405848:	e002      	b.n	405850 <__adddf3>
  40584a:	bf00      	nop

0040584c <__aeabi_dsub>:
  40584c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405850 <__adddf3>:
  405850:	b530      	push	{r4, r5, lr}
  405852:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405856:	ea4f 0543 	mov.w	r5, r3, lsl #1
  40585a:	ea94 0f05 	teq	r4, r5
  40585e:	bf08      	it	eq
  405860:	ea90 0f02 	teqeq	r0, r2
  405864:	bf1f      	itttt	ne
  405866:	ea54 0c00 	orrsne.w	ip, r4, r0
  40586a:	ea55 0c02 	orrsne.w	ip, r5, r2
  40586e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  405872:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405876:	f000 80e2 	beq.w	405a3e <__adddf3+0x1ee>
  40587a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  40587e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405882:	bfb8      	it	lt
  405884:	426d      	neglt	r5, r5
  405886:	dd0c      	ble.n	4058a2 <__adddf3+0x52>
  405888:	442c      	add	r4, r5
  40588a:	ea80 0202 	eor.w	r2, r0, r2
  40588e:	ea81 0303 	eor.w	r3, r1, r3
  405892:	ea82 0000 	eor.w	r0, r2, r0
  405896:	ea83 0101 	eor.w	r1, r3, r1
  40589a:	ea80 0202 	eor.w	r2, r0, r2
  40589e:	ea81 0303 	eor.w	r3, r1, r3
  4058a2:	2d36      	cmp	r5, #54	; 0x36
  4058a4:	bf88      	it	hi
  4058a6:	bd30      	pophi	{r4, r5, pc}
  4058a8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4058ac:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4058b0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  4058b4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  4058b8:	d002      	beq.n	4058c0 <__adddf3+0x70>
  4058ba:	4240      	negs	r0, r0
  4058bc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4058c0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  4058c4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4058c8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  4058cc:	d002      	beq.n	4058d4 <__adddf3+0x84>
  4058ce:	4252      	negs	r2, r2
  4058d0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  4058d4:	ea94 0f05 	teq	r4, r5
  4058d8:	f000 80a7 	beq.w	405a2a <__adddf3+0x1da>
  4058dc:	f1a4 0401 	sub.w	r4, r4, #1
  4058e0:	f1d5 0e20 	rsbs	lr, r5, #32
  4058e4:	db0d      	blt.n	405902 <__adddf3+0xb2>
  4058e6:	fa02 fc0e 	lsl.w	ip, r2, lr
  4058ea:	fa22 f205 	lsr.w	r2, r2, r5
  4058ee:	1880      	adds	r0, r0, r2
  4058f0:	f141 0100 	adc.w	r1, r1, #0
  4058f4:	fa03 f20e 	lsl.w	r2, r3, lr
  4058f8:	1880      	adds	r0, r0, r2
  4058fa:	fa43 f305 	asr.w	r3, r3, r5
  4058fe:	4159      	adcs	r1, r3
  405900:	e00e      	b.n	405920 <__adddf3+0xd0>
  405902:	f1a5 0520 	sub.w	r5, r5, #32
  405906:	f10e 0e20 	add.w	lr, lr, #32
  40590a:	2a01      	cmp	r2, #1
  40590c:	fa03 fc0e 	lsl.w	ip, r3, lr
  405910:	bf28      	it	cs
  405912:	f04c 0c02 	orrcs.w	ip, ip, #2
  405916:	fa43 f305 	asr.w	r3, r3, r5
  40591a:	18c0      	adds	r0, r0, r3
  40591c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  405920:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405924:	d507      	bpl.n	405936 <__adddf3+0xe6>
  405926:	f04f 0e00 	mov.w	lr, #0
  40592a:	f1dc 0c00 	rsbs	ip, ip, #0
  40592e:	eb7e 0000 	sbcs.w	r0, lr, r0
  405932:	eb6e 0101 	sbc.w	r1, lr, r1
  405936:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  40593a:	d31b      	bcc.n	405974 <__adddf3+0x124>
  40593c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405940:	d30c      	bcc.n	40595c <__adddf3+0x10c>
  405942:	0849      	lsrs	r1, r1, #1
  405944:	ea5f 0030 	movs.w	r0, r0, rrx
  405948:	ea4f 0c3c 	mov.w	ip, ip, rrx
  40594c:	f104 0401 	add.w	r4, r4, #1
  405950:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405954:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405958:	f080 809a 	bcs.w	405a90 <__adddf3+0x240>
  40595c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  405960:	bf08      	it	eq
  405962:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405966:	f150 0000 	adcs.w	r0, r0, #0
  40596a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40596e:	ea41 0105 	orr.w	r1, r1, r5
  405972:	bd30      	pop	{r4, r5, pc}
  405974:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  405978:	4140      	adcs	r0, r0
  40597a:	eb41 0101 	adc.w	r1, r1, r1
  40597e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405982:	f1a4 0401 	sub.w	r4, r4, #1
  405986:	d1e9      	bne.n	40595c <__adddf3+0x10c>
  405988:	f091 0f00 	teq	r1, #0
  40598c:	bf04      	itt	eq
  40598e:	4601      	moveq	r1, r0
  405990:	2000      	moveq	r0, #0
  405992:	fab1 f381 	clz	r3, r1
  405996:	bf08      	it	eq
  405998:	3320      	addeq	r3, #32
  40599a:	f1a3 030b 	sub.w	r3, r3, #11
  40599e:	f1b3 0220 	subs.w	r2, r3, #32
  4059a2:	da0c      	bge.n	4059be <__adddf3+0x16e>
  4059a4:	320c      	adds	r2, #12
  4059a6:	dd08      	ble.n	4059ba <__adddf3+0x16a>
  4059a8:	f102 0c14 	add.w	ip, r2, #20
  4059ac:	f1c2 020c 	rsb	r2, r2, #12
  4059b0:	fa01 f00c 	lsl.w	r0, r1, ip
  4059b4:	fa21 f102 	lsr.w	r1, r1, r2
  4059b8:	e00c      	b.n	4059d4 <__adddf3+0x184>
  4059ba:	f102 0214 	add.w	r2, r2, #20
  4059be:	bfd8      	it	le
  4059c0:	f1c2 0c20 	rsble	ip, r2, #32
  4059c4:	fa01 f102 	lsl.w	r1, r1, r2
  4059c8:	fa20 fc0c 	lsr.w	ip, r0, ip
  4059cc:	bfdc      	itt	le
  4059ce:	ea41 010c 	orrle.w	r1, r1, ip
  4059d2:	4090      	lslle	r0, r2
  4059d4:	1ae4      	subs	r4, r4, r3
  4059d6:	bfa2      	ittt	ge
  4059d8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  4059dc:	4329      	orrge	r1, r5
  4059de:	bd30      	popge	{r4, r5, pc}
  4059e0:	ea6f 0404 	mvn.w	r4, r4
  4059e4:	3c1f      	subs	r4, #31
  4059e6:	da1c      	bge.n	405a22 <__adddf3+0x1d2>
  4059e8:	340c      	adds	r4, #12
  4059ea:	dc0e      	bgt.n	405a0a <__adddf3+0x1ba>
  4059ec:	f104 0414 	add.w	r4, r4, #20
  4059f0:	f1c4 0220 	rsb	r2, r4, #32
  4059f4:	fa20 f004 	lsr.w	r0, r0, r4
  4059f8:	fa01 f302 	lsl.w	r3, r1, r2
  4059fc:	ea40 0003 	orr.w	r0, r0, r3
  405a00:	fa21 f304 	lsr.w	r3, r1, r4
  405a04:	ea45 0103 	orr.w	r1, r5, r3
  405a08:	bd30      	pop	{r4, r5, pc}
  405a0a:	f1c4 040c 	rsb	r4, r4, #12
  405a0e:	f1c4 0220 	rsb	r2, r4, #32
  405a12:	fa20 f002 	lsr.w	r0, r0, r2
  405a16:	fa01 f304 	lsl.w	r3, r1, r4
  405a1a:	ea40 0003 	orr.w	r0, r0, r3
  405a1e:	4629      	mov	r1, r5
  405a20:	bd30      	pop	{r4, r5, pc}
  405a22:	fa21 f004 	lsr.w	r0, r1, r4
  405a26:	4629      	mov	r1, r5
  405a28:	bd30      	pop	{r4, r5, pc}
  405a2a:	f094 0f00 	teq	r4, #0
  405a2e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  405a32:	bf06      	itte	eq
  405a34:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  405a38:	3401      	addeq	r4, #1
  405a3a:	3d01      	subne	r5, #1
  405a3c:	e74e      	b.n	4058dc <__adddf3+0x8c>
  405a3e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405a42:	bf18      	it	ne
  405a44:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405a48:	d029      	beq.n	405a9e <__adddf3+0x24e>
  405a4a:	ea94 0f05 	teq	r4, r5
  405a4e:	bf08      	it	eq
  405a50:	ea90 0f02 	teqeq	r0, r2
  405a54:	d005      	beq.n	405a62 <__adddf3+0x212>
  405a56:	ea54 0c00 	orrs.w	ip, r4, r0
  405a5a:	bf04      	itt	eq
  405a5c:	4619      	moveq	r1, r3
  405a5e:	4610      	moveq	r0, r2
  405a60:	bd30      	pop	{r4, r5, pc}
  405a62:	ea91 0f03 	teq	r1, r3
  405a66:	bf1e      	ittt	ne
  405a68:	2100      	movne	r1, #0
  405a6a:	2000      	movne	r0, #0
  405a6c:	bd30      	popne	{r4, r5, pc}
  405a6e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  405a72:	d105      	bne.n	405a80 <__adddf3+0x230>
  405a74:	0040      	lsls	r0, r0, #1
  405a76:	4149      	adcs	r1, r1
  405a78:	bf28      	it	cs
  405a7a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  405a7e:	bd30      	pop	{r4, r5, pc}
  405a80:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405a84:	bf3c      	itt	cc
  405a86:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  405a8a:	bd30      	popcc	{r4, r5, pc}
  405a8c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405a90:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405a94:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405a98:	f04f 0000 	mov.w	r0, #0
  405a9c:	bd30      	pop	{r4, r5, pc}
  405a9e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405aa2:	bf1a      	itte	ne
  405aa4:	4619      	movne	r1, r3
  405aa6:	4610      	movne	r0, r2
  405aa8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  405aac:	bf1c      	itt	ne
  405aae:	460b      	movne	r3, r1
  405ab0:	4602      	movne	r2, r0
  405ab2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405ab6:	bf06      	itte	eq
  405ab8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  405abc:	ea91 0f03 	teqeq	r1, r3
  405ac0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405ac4:	bd30      	pop	{r4, r5, pc}
  405ac6:	bf00      	nop

00405ac8 <__aeabi_ui2d>:
  405ac8:	f090 0f00 	teq	r0, #0
  405acc:	bf04      	itt	eq
  405ace:	2100      	moveq	r1, #0
  405ad0:	4770      	bxeq	lr
  405ad2:	b530      	push	{r4, r5, lr}
  405ad4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405ad8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405adc:	f04f 0500 	mov.w	r5, #0
  405ae0:	f04f 0100 	mov.w	r1, #0
  405ae4:	e750      	b.n	405988 <__adddf3+0x138>
  405ae6:	bf00      	nop

00405ae8 <__aeabi_i2d>:
  405ae8:	f090 0f00 	teq	r0, #0
  405aec:	bf04      	itt	eq
  405aee:	2100      	moveq	r1, #0
  405af0:	4770      	bxeq	lr
  405af2:	b530      	push	{r4, r5, lr}
  405af4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405af8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405afc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405b00:	bf48      	it	mi
  405b02:	4240      	negmi	r0, r0
  405b04:	f04f 0100 	mov.w	r1, #0
  405b08:	e73e      	b.n	405988 <__adddf3+0x138>
  405b0a:	bf00      	nop

00405b0c <__aeabi_f2d>:
  405b0c:	0042      	lsls	r2, r0, #1
  405b0e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405b12:	ea4f 0131 	mov.w	r1, r1, rrx
  405b16:	ea4f 7002 	mov.w	r0, r2, lsl #28
  405b1a:	bf1f      	itttt	ne
  405b1c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405b20:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405b24:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405b28:	4770      	bxne	lr
  405b2a:	f092 0f00 	teq	r2, #0
  405b2e:	bf14      	ite	ne
  405b30:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405b34:	4770      	bxeq	lr
  405b36:	b530      	push	{r4, r5, lr}
  405b38:	f44f 7460 	mov.w	r4, #896	; 0x380
  405b3c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405b40:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405b44:	e720      	b.n	405988 <__adddf3+0x138>
  405b46:	bf00      	nop

00405b48 <__aeabi_ul2d>:
  405b48:	ea50 0201 	orrs.w	r2, r0, r1
  405b4c:	bf08      	it	eq
  405b4e:	4770      	bxeq	lr
  405b50:	b530      	push	{r4, r5, lr}
  405b52:	f04f 0500 	mov.w	r5, #0
  405b56:	e00a      	b.n	405b6e <__aeabi_l2d+0x16>

00405b58 <__aeabi_l2d>:
  405b58:	ea50 0201 	orrs.w	r2, r0, r1
  405b5c:	bf08      	it	eq
  405b5e:	4770      	bxeq	lr
  405b60:	b530      	push	{r4, r5, lr}
  405b62:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405b66:	d502      	bpl.n	405b6e <__aeabi_l2d+0x16>
  405b68:	4240      	negs	r0, r0
  405b6a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405b6e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405b72:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405b76:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  405b7a:	f43f aedc 	beq.w	405936 <__adddf3+0xe6>
  405b7e:	f04f 0203 	mov.w	r2, #3
  405b82:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405b86:	bf18      	it	ne
  405b88:	3203      	addne	r2, #3
  405b8a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405b8e:	bf18      	it	ne
  405b90:	3203      	addne	r2, #3
  405b92:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405b96:	f1c2 0320 	rsb	r3, r2, #32
  405b9a:	fa00 fc03 	lsl.w	ip, r0, r3
  405b9e:	fa20 f002 	lsr.w	r0, r0, r2
  405ba2:	fa01 fe03 	lsl.w	lr, r1, r3
  405ba6:	ea40 000e 	orr.w	r0, r0, lr
  405baa:	fa21 f102 	lsr.w	r1, r1, r2
  405bae:	4414      	add	r4, r2
  405bb0:	e6c1      	b.n	405936 <__adddf3+0xe6>
  405bb2:	bf00      	nop

00405bb4 <__aeabi_dmul>:
  405bb4:	b570      	push	{r4, r5, r6, lr}
  405bb6:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405bba:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405bbe:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405bc2:	bf1d      	ittte	ne
  405bc4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405bc8:	ea94 0f0c 	teqne	r4, ip
  405bcc:	ea95 0f0c 	teqne	r5, ip
  405bd0:	f000 f8de 	bleq	405d90 <__aeabi_dmul+0x1dc>
  405bd4:	442c      	add	r4, r5
  405bd6:	ea81 0603 	eor.w	r6, r1, r3
  405bda:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  405bde:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405be2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405be6:	bf18      	it	ne
  405be8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  405bec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405bf0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405bf4:	d038      	beq.n	405c68 <__aeabi_dmul+0xb4>
  405bf6:	fba0 ce02 	umull	ip, lr, r0, r2
  405bfa:	f04f 0500 	mov.w	r5, #0
  405bfe:	fbe1 e502 	umlal	lr, r5, r1, r2
  405c02:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405c06:	fbe0 e503 	umlal	lr, r5, r0, r3
  405c0a:	f04f 0600 	mov.w	r6, #0
  405c0e:	fbe1 5603 	umlal	r5, r6, r1, r3
  405c12:	f09c 0f00 	teq	ip, #0
  405c16:	bf18      	it	ne
  405c18:	f04e 0e01 	orrne.w	lr, lr, #1
  405c1c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405c20:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405c24:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405c28:	d204      	bcs.n	405c34 <__aeabi_dmul+0x80>
  405c2a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  405c2e:	416d      	adcs	r5, r5
  405c30:	eb46 0606 	adc.w	r6, r6, r6
  405c34:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405c38:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  405c3c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  405c40:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  405c44:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  405c48:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405c4c:	bf88      	it	hi
  405c4e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405c52:	d81e      	bhi.n	405c92 <__aeabi_dmul+0xde>
  405c54:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  405c58:	bf08      	it	eq
  405c5a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  405c5e:	f150 0000 	adcs.w	r0, r0, #0
  405c62:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405c66:	bd70      	pop	{r4, r5, r6, pc}
  405c68:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  405c6c:	ea46 0101 	orr.w	r1, r6, r1
  405c70:	ea40 0002 	orr.w	r0, r0, r2
  405c74:	ea81 0103 	eor.w	r1, r1, r3
  405c78:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  405c7c:	bfc2      	ittt	gt
  405c7e:	ebd4 050c 	rsbsgt	r5, r4, ip
  405c82:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405c86:	bd70      	popgt	{r4, r5, r6, pc}
  405c88:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405c8c:	f04f 0e00 	mov.w	lr, #0
  405c90:	3c01      	subs	r4, #1
  405c92:	f300 80ab 	bgt.w	405dec <__aeabi_dmul+0x238>
  405c96:	f114 0f36 	cmn.w	r4, #54	; 0x36
  405c9a:	bfde      	ittt	le
  405c9c:	2000      	movle	r0, #0
  405c9e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  405ca2:	bd70      	pople	{r4, r5, r6, pc}
  405ca4:	f1c4 0400 	rsb	r4, r4, #0
  405ca8:	3c20      	subs	r4, #32
  405caa:	da35      	bge.n	405d18 <__aeabi_dmul+0x164>
  405cac:	340c      	adds	r4, #12
  405cae:	dc1b      	bgt.n	405ce8 <__aeabi_dmul+0x134>
  405cb0:	f104 0414 	add.w	r4, r4, #20
  405cb4:	f1c4 0520 	rsb	r5, r4, #32
  405cb8:	fa00 f305 	lsl.w	r3, r0, r5
  405cbc:	fa20 f004 	lsr.w	r0, r0, r4
  405cc0:	fa01 f205 	lsl.w	r2, r1, r5
  405cc4:	ea40 0002 	orr.w	r0, r0, r2
  405cc8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  405ccc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405cd0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405cd4:	fa21 f604 	lsr.w	r6, r1, r4
  405cd8:	eb42 0106 	adc.w	r1, r2, r6
  405cdc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405ce0:	bf08      	it	eq
  405ce2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405ce6:	bd70      	pop	{r4, r5, r6, pc}
  405ce8:	f1c4 040c 	rsb	r4, r4, #12
  405cec:	f1c4 0520 	rsb	r5, r4, #32
  405cf0:	fa00 f304 	lsl.w	r3, r0, r4
  405cf4:	fa20 f005 	lsr.w	r0, r0, r5
  405cf8:	fa01 f204 	lsl.w	r2, r1, r4
  405cfc:	ea40 0002 	orr.w	r0, r0, r2
  405d00:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405d04:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405d08:	f141 0100 	adc.w	r1, r1, #0
  405d0c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405d10:	bf08      	it	eq
  405d12:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405d16:	bd70      	pop	{r4, r5, r6, pc}
  405d18:	f1c4 0520 	rsb	r5, r4, #32
  405d1c:	fa00 f205 	lsl.w	r2, r0, r5
  405d20:	ea4e 0e02 	orr.w	lr, lr, r2
  405d24:	fa20 f304 	lsr.w	r3, r0, r4
  405d28:	fa01 f205 	lsl.w	r2, r1, r5
  405d2c:	ea43 0302 	orr.w	r3, r3, r2
  405d30:	fa21 f004 	lsr.w	r0, r1, r4
  405d34:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405d38:	fa21 f204 	lsr.w	r2, r1, r4
  405d3c:	ea20 0002 	bic.w	r0, r0, r2
  405d40:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  405d44:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405d48:	bf08      	it	eq
  405d4a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405d4e:	bd70      	pop	{r4, r5, r6, pc}
  405d50:	f094 0f00 	teq	r4, #0
  405d54:	d10f      	bne.n	405d76 <__aeabi_dmul+0x1c2>
  405d56:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  405d5a:	0040      	lsls	r0, r0, #1
  405d5c:	eb41 0101 	adc.w	r1, r1, r1
  405d60:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405d64:	bf08      	it	eq
  405d66:	3c01      	subeq	r4, #1
  405d68:	d0f7      	beq.n	405d5a <__aeabi_dmul+0x1a6>
  405d6a:	ea41 0106 	orr.w	r1, r1, r6
  405d6e:	f095 0f00 	teq	r5, #0
  405d72:	bf18      	it	ne
  405d74:	4770      	bxne	lr
  405d76:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  405d7a:	0052      	lsls	r2, r2, #1
  405d7c:	eb43 0303 	adc.w	r3, r3, r3
  405d80:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  405d84:	bf08      	it	eq
  405d86:	3d01      	subeq	r5, #1
  405d88:	d0f7      	beq.n	405d7a <__aeabi_dmul+0x1c6>
  405d8a:	ea43 0306 	orr.w	r3, r3, r6
  405d8e:	4770      	bx	lr
  405d90:	ea94 0f0c 	teq	r4, ip
  405d94:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405d98:	bf18      	it	ne
  405d9a:	ea95 0f0c 	teqne	r5, ip
  405d9e:	d00c      	beq.n	405dba <__aeabi_dmul+0x206>
  405da0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405da4:	bf18      	it	ne
  405da6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405daa:	d1d1      	bne.n	405d50 <__aeabi_dmul+0x19c>
  405dac:	ea81 0103 	eor.w	r1, r1, r3
  405db0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405db4:	f04f 0000 	mov.w	r0, #0
  405db8:	bd70      	pop	{r4, r5, r6, pc}
  405dba:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405dbe:	bf06      	itte	eq
  405dc0:	4610      	moveq	r0, r2
  405dc2:	4619      	moveq	r1, r3
  405dc4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405dc8:	d019      	beq.n	405dfe <__aeabi_dmul+0x24a>
  405dca:	ea94 0f0c 	teq	r4, ip
  405dce:	d102      	bne.n	405dd6 <__aeabi_dmul+0x222>
  405dd0:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  405dd4:	d113      	bne.n	405dfe <__aeabi_dmul+0x24a>
  405dd6:	ea95 0f0c 	teq	r5, ip
  405dda:	d105      	bne.n	405de8 <__aeabi_dmul+0x234>
  405ddc:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  405de0:	bf1c      	itt	ne
  405de2:	4610      	movne	r0, r2
  405de4:	4619      	movne	r1, r3
  405de6:	d10a      	bne.n	405dfe <__aeabi_dmul+0x24a>
  405de8:	ea81 0103 	eor.w	r1, r1, r3
  405dec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405df0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405df4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405df8:	f04f 0000 	mov.w	r0, #0
  405dfc:	bd70      	pop	{r4, r5, r6, pc}
  405dfe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405e02:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  405e06:	bd70      	pop	{r4, r5, r6, pc}

00405e08 <__aeabi_ddiv>:
  405e08:	b570      	push	{r4, r5, r6, lr}
  405e0a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405e0e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405e12:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405e16:	bf1d      	ittte	ne
  405e18:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405e1c:	ea94 0f0c 	teqne	r4, ip
  405e20:	ea95 0f0c 	teqne	r5, ip
  405e24:	f000 f8a7 	bleq	405f76 <__aeabi_ddiv+0x16e>
  405e28:	eba4 0405 	sub.w	r4, r4, r5
  405e2c:	ea81 0e03 	eor.w	lr, r1, r3
  405e30:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405e34:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405e38:	f000 8088 	beq.w	405f4c <__aeabi_ddiv+0x144>
  405e3c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405e40:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  405e44:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  405e48:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  405e4c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  405e50:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  405e54:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  405e58:	ea4f 2600 	mov.w	r6, r0, lsl #8
  405e5c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  405e60:	429d      	cmp	r5, r3
  405e62:	bf08      	it	eq
  405e64:	4296      	cmpeq	r6, r2
  405e66:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  405e6a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  405e6e:	d202      	bcs.n	405e76 <__aeabi_ddiv+0x6e>
  405e70:	085b      	lsrs	r3, r3, #1
  405e72:	ea4f 0232 	mov.w	r2, r2, rrx
  405e76:	1ab6      	subs	r6, r6, r2
  405e78:	eb65 0503 	sbc.w	r5, r5, r3
  405e7c:	085b      	lsrs	r3, r3, #1
  405e7e:	ea4f 0232 	mov.w	r2, r2, rrx
  405e82:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  405e86:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  405e8a:	ebb6 0e02 	subs.w	lr, r6, r2
  405e8e:	eb75 0e03 	sbcs.w	lr, r5, r3
  405e92:	bf22      	ittt	cs
  405e94:	1ab6      	subcs	r6, r6, r2
  405e96:	4675      	movcs	r5, lr
  405e98:	ea40 000c 	orrcs.w	r0, r0, ip
  405e9c:	085b      	lsrs	r3, r3, #1
  405e9e:	ea4f 0232 	mov.w	r2, r2, rrx
  405ea2:	ebb6 0e02 	subs.w	lr, r6, r2
  405ea6:	eb75 0e03 	sbcs.w	lr, r5, r3
  405eaa:	bf22      	ittt	cs
  405eac:	1ab6      	subcs	r6, r6, r2
  405eae:	4675      	movcs	r5, lr
  405eb0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  405eb4:	085b      	lsrs	r3, r3, #1
  405eb6:	ea4f 0232 	mov.w	r2, r2, rrx
  405eba:	ebb6 0e02 	subs.w	lr, r6, r2
  405ebe:	eb75 0e03 	sbcs.w	lr, r5, r3
  405ec2:	bf22      	ittt	cs
  405ec4:	1ab6      	subcs	r6, r6, r2
  405ec6:	4675      	movcs	r5, lr
  405ec8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  405ecc:	085b      	lsrs	r3, r3, #1
  405ece:	ea4f 0232 	mov.w	r2, r2, rrx
  405ed2:	ebb6 0e02 	subs.w	lr, r6, r2
  405ed6:	eb75 0e03 	sbcs.w	lr, r5, r3
  405eda:	bf22      	ittt	cs
  405edc:	1ab6      	subcs	r6, r6, r2
  405ede:	4675      	movcs	r5, lr
  405ee0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  405ee4:	ea55 0e06 	orrs.w	lr, r5, r6
  405ee8:	d018      	beq.n	405f1c <__aeabi_ddiv+0x114>
  405eea:	ea4f 1505 	mov.w	r5, r5, lsl #4
  405eee:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  405ef2:	ea4f 1606 	mov.w	r6, r6, lsl #4
  405ef6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  405efa:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  405efe:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  405f02:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  405f06:	d1c0      	bne.n	405e8a <__aeabi_ddiv+0x82>
  405f08:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405f0c:	d10b      	bne.n	405f26 <__aeabi_ddiv+0x11e>
  405f0e:	ea41 0100 	orr.w	r1, r1, r0
  405f12:	f04f 0000 	mov.w	r0, #0
  405f16:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  405f1a:	e7b6      	b.n	405e8a <__aeabi_ddiv+0x82>
  405f1c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405f20:	bf04      	itt	eq
  405f22:	4301      	orreq	r1, r0
  405f24:	2000      	moveq	r0, #0
  405f26:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405f2a:	bf88      	it	hi
  405f2c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405f30:	f63f aeaf 	bhi.w	405c92 <__aeabi_dmul+0xde>
  405f34:	ebb5 0c03 	subs.w	ip, r5, r3
  405f38:	bf04      	itt	eq
  405f3a:	ebb6 0c02 	subseq.w	ip, r6, r2
  405f3e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405f42:	f150 0000 	adcs.w	r0, r0, #0
  405f46:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405f4a:	bd70      	pop	{r4, r5, r6, pc}
  405f4c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  405f50:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  405f54:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  405f58:	bfc2      	ittt	gt
  405f5a:	ebd4 050c 	rsbsgt	r5, r4, ip
  405f5e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405f62:	bd70      	popgt	{r4, r5, r6, pc}
  405f64:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405f68:	f04f 0e00 	mov.w	lr, #0
  405f6c:	3c01      	subs	r4, #1
  405f6e:	e690      	b.n	405c92 <__aeabi_dmul+0xde>
  405f70:	ea45 0e06 	orr.w	lr, r5, r6
  405f74:	e68d      	b.n	405c92 <__aeabi_dmul+0xde>
  405f76:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405f7a:	ea94 0f0c 	teq	r4, ip
  405f7e:	bf08      	it	eq
  405f80:	ea95 0f0c 	teqeq	r5, ip
  405f84:	f43f af3b 	beq.w	405dfe <__aeabi_dmul+0x24a>
  405f88:	ea94 0f0c 	teq	r4, ip
  405f8c:	d10a      	bne.n	405fa4 <__aeabi_ddiv+0x19c>
  405f8e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405f92:	f47f af34 	bne.w	405dfe <__aeabi_dmul+0x24a>
  405f96:	ea95 0f0c 	teq	r5, ip
  405f9a:	f47f af25 	bne.w	405de8 <__aeabi_dmul+0x234>
  405f9e:	4610      	mov	r0, r2
  405fa0:	4619      	mov	r1, r3
  405fa2:	e72c      	b.n	405dfe <__aeabi_dmul+0x24a>
  405fa4:	ea95 0f0c 	teq	r5, ip
  405fa8:	d106      	bne.n	405fb8 <__aeabi_ddiv+0x1b0>
  405faa:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405fae:	f43f aefd 	beq.w	405dac <__aeabi_dmul+0x1f8>
  405fb2:	4610      	mov	r0, r2
  405fb4:	4619      	mov	r1, r3
  405fb6:	e722      	b.n	405dfe <__aeabi_dmul+0x24a>
  405fb8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405fbc:	bf18      	it	ne
  405fbe:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405fc2:	f47f aec5 	bne.w	405d50 <__aeabi_dmul+0x19c>
  405fc6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  405fca:	f47f af0d 	bne.w	405de8 <__aeabi_dmul+0x234>
  405fce:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  405fd2:	f47f aeeb 	bne.w	405dac <__aeabi_dmul+0x1f8>
  405fd6:	e712      	b.n	405dfe <__aeabi_dmul+0x24a>

00405fd8 <__gedf2>:
  405fd8:	f04f 3cff 	mov.w	ip, #4294967295
  405fdc:	e006      	b.n	405fec <__cmpdf2+0x4>
  405fde:	bf00      	nop

00405fe0 <__ledf2>:
  405fe0:	f04f 0c01 	mov.w	ip, #1
  405fe4:	e002      	b.n	405fec <__cmpdf2+0x4>
  405fe6:	bf00      	nop

00405fe8 <__cmpdf2>:
  405fe8:	f04f 0c01 	mov.w	ip, #1
  405fec:	f84d cd04 	str.w	ip, [sp, #-4]!
  405ff0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405ff4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405ff8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405ffc:	bf18      	it	ne
  405ffe:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  406002:	d01b      	beq.n	40603c <__cmpdf2+0x54>
  406004:	b001      	add	sp, #4
  406006:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  40600a:	bf0c      	ite	eq
  40600c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  406010:	ea91 0f03 	teqne	r1, r3
  406014:	bf02      	ittt	eq
  406016:	ea90 0f02 	teqeq	r0, r2
  40601a:	2000      	moveq	r0, #0
  40601c:	4770      	bxeq	lr
  40601e:	f110 0f00 	cmn.w	r0, #0
  406022:	ea91 0f03 	teq	r1, r3
  406026:	bf58      	it	pl
  406028:	4299      	cmppl	r1, r3
  40602a:	bf08      	it	eq
  40602c:	4290      	cmpeq	r0, r2
  40602e:	bf2c      	ite	cs
  406030:	17d8      	asrcs	r0, r3, #31
  406032:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  406036:	f040 0001 	orr.w	r0, r0, #1
  40603a:	4770      	bx	lr
  40603c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406040:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406044:	d102      	bne.n	40604c <__cmpdf2+0x64>
  406046:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  40604a:	d107      	bne.n	40605c <__cmpdf2+0x74>
  40604c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406050:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406054:	d1d6      	bne.n	406004 <__cmpdf2+0x1c>
  406056:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  40605a:	d0d3      	beq.n	406004 <__cmpdf2+0x1c>
  40605c:	f85d 0b04 	ldr.w	r0, [sp], #4
  406060:	4770      	bx	lr
  406062:	bf00      	nop

00406064 <__aeabi_cdrcmple>:
  406064:	4684      	mov	ip, r0
  406066:	4610      	mov	r0, r2
  406068:	4662      	mov	r2, ip
  40606a:	468c      	mov	ip, r1
  40606c:	4619      	mov	r1, r3
  40606e:	4663      	mov	r3, ip
  406070:	e000      	b.n	406074 <__aeabi_cdcmpeq>
  406072:	bf00      	nop

00406074 <__aeabi_cdcmpeq>:
  406074:	b501      	push	{r0, lr}
  406076:	f7ff ffb7 	bl	405fe8 <__cmpdf2>
  40607a:	2800      	cmp	r0, #0
  40607c:	bf48      	it	mi
  40607e:	f110 0f00 	cmnmi.w	r0, #0
  406082:	bd01      	pop	{r0, pc}

00406084 <__aeabi_dcmpeq>:
  406084:	f84d ed08 	str.w	lr, [sp, #-8]!
  406088:	f7ff fff4 	bl	406074 <__aeabi_cdcmpeq>
  40608c:	bf0c      	ite	eq
  40608e:	2001      	moveq	r0, #1
  406090:	2000      	movne	r0, #0
  406092:	f85d fb08 	ldr.w	pc, [sp], #8
  406096:	bf00      	nop

00406098 <__aeabi_dcmplt>:
  406098:	f84d ed08 	str.w	lr, [sp, #-8]!
  40609c:	f7ff ffea 	bl	406074 <__aeabi_cdcmpeq>
  4060a0:	bf34      	ite	cc
  4060a2:	2001      	movcc	r0, #1
  4060a4:	2000      	movcs	r0, #0
  4060a6:	f85d fb08 	ldr.w	pc, [sp], #8
  4060aa:	bf00      	nop

004060ac <__aeabi_dcmple>:
  4060ac:	f84d ed08 	str.w	lr, [sp, #-8]!
  4060b0:	f7ff ffe0 	bl	406074 <__aeabi_cdcmpeq>
  4060b4:	bf94      	ite	ls
  4060b6:	2001      	movls	r0, #1
  4060b8:	2000      	movhi	r0, #0
  4060ba:	f85d fb08 	ldr.w	pc, [sp], #8
  4060be:	bf00      	nop

004060c0 <__aeabi_dcmpge>:
  4060c0:	f84d ed08 	str.w	lr, [sp, #-8]!
  4060c4:	f7ff ffce 	bl	406064 <__aeabi_cdrcmple>
  4060c8:	bf94      	ite	ls
  4060ca:	2001      	movls	r0, #1
  4060cc:	2000      	movhi	r0, #0
  4060ce:	f85d fb08 	ldr.w	pc, [sp], #8
  4060d2:	bf00      	nop

004060d4 <__aeabi_dcmpgt>:
  4060d4:	f84d ed08 	str.w	lr, [sp, #-8]!
  4060d8:	f7ff ffc4 	bl	406064 <__aeabi_cdrcmple>
  4060dc:	bf34      	ite	cc
  4060de:	2001      	movcc	r0, #1
  4060e0:	2000      	movcs	r0, #0
  4060e2:	f85d fb08 	ldr.w	pc, [sp], #8
  4060e6:	bf00      	nop

004060e8 <__aeabi_dcmpun>:
  4060e8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4060ec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4060f0:	d102      	bne.n	4060f8 <__aeabi_dcmpun+0x10>
  4060f2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4060f6:	d10a      	bne.n	40610e <__aeabi_dcmpun+0x26>
  4060f8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4060fc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406100:	d102      	bne.n	406108 <__aeabi_dcmpun+0x20>
  406102:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406106:	d102      	bne.n	40610e <__aeabi_dcmpun+0x26>
  406108:	f04f 0000 	mov.w	r0, #0
  40610c:	4770      	bx	lr
  40610e:	f04f 0001 	mov.w	r0, #1
  406112:	4770      	bx	lr

00406114 <__aeabi_d2iz>:
  406114:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406118:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  40611c:	d215      	bcs.n	40614a <__aeabi_d2iz+0x36>
  40611e:	d511      	bpl.n	406144 <__aeabi_d2iz+0x30>
  406120:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  406124:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  406128:	d912      	bls.n	406150 <__aeabi_d2iz+0x3c>
  40612a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40612e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  406132:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  406136:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40613a:	fa23 f002 	lsr.w	r0, r3, r2
  40613e:	bf18      	it	ne
  406140:	4240      	negne	r0, r0
  406142:	4770      	bx	lr
  406144:	f04f 0000 	mov.w	r0, #0
  406148:	4770      	bx	lr
  40614a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40614e:	d105      	bne.n	40615c <__aeabi_d2iz+0x48>
  406150:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  406154:	bf08      	it	eq
  406156:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40615a:	4770      	bx	lr
  40615c:	f04f 0000 	mov.w	r0, #0
  406160:	4770      	bx	lr
  406162:	bf00      	nop

00406164 <__aeabi_uldivmod>:
  406164:	b953      	cbnz	r3, 40617c <__aeabi_uldivmod+0x18>
  406166:	b94a      	cbnz	r2, 40617c <__aeabi_uldivmod+0x18>
  406168:	2900      	cmp	r1, #0
  40616a:	bf08      	it	eq
  40616c:	2800      	cmpeq	r0, #0
  40616e:	bf1c      	itt	ne
  406170:	f04f 31ff 	movne.w	r1, #4294967295
  406174:	f04f 30ff 	movne.w	r0, #4294967295
  406178:	f000 b97a 	b.w	406470 <__aeabi_idiv0>
  40617c:	f1ad 0c08 	sub.w	ip, sp, #8
  406180:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406184:	f000 f806 	bl	406194 <__udivmoddi4>
  406188:	f8dd e004 	ldr.w	lr, [sp, #4]
  40618c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  406190:	b004      	add	sp, #16
  406192:	4770      	bx	lr

00406194 <__udivmoddi4>:
  406194:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406198:	468c      	mov	ip, r1
  40619a:	460d      	mov	r5, r1
  40619c:	4604      	mov	r4, r0
  40619e:	9e08      	ldr	r6, [sp, #32]
  4061a0:	2b00      	cmp	r3, #0
  4061a2:	d151      	bne.n	406248 <__udivmoddi4+0xb4>
  4061a4:	428a      	cmp	r2, r1
  4061a6:	4617      	mov	r7, r2
  4061a8:	d96d      	bls.n	406286 <__udivmoddi4+0xf2>
  4061aa:	fab2 fe82 	clz	lr, r2
  4061ae:	f1be 0f00 	cmp.w	lr, #0
  4061b2:	d00b      	beq.n	4061cc <__udivmoddi4+0x38>
  4061b4:	f1ce 0c20 	rsb	ip, lr, #32
  4061b8:	fa01 f50e 	lsl.w	r5, r1, lr
  4061bc:	fa20 fc0c 	lsr.w	ip, r0, ip
  4061c0:	fa02 f70e 	lsl.w	r7, r2, lr
  4061c4:	ea4c 0c05 	orr.w	ip, ip, r5
  4061c8:	fa00 f40e 	lsl.w	r4, r0, lr
  4061cc:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  4061d0:	0c25      	lsrs	r5, r4, #16
  4061d2:	fbbc f8fa 	udiv	r8, ip, sl
  4061d6:	fa1f f987 	uxth.w	r9, r7
  4061da:	fb0a cc18 	mls	ip, sl, r8, ip
  4061de:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  4061e2:	fb08 f309 	mul.w	r3, r8, r9
  4061e6:	42ab      	cmp	r3, r5
  4061e8:	d90a      	bls.n	406200 <__udivmoddi4+0x6c>
  4061ea:	19ed      	adds	r5, r5, r7
  4061ec:	f108 32ff 	add.w	r2, r8, #4294967295
  4061f0:	f080 8123 	bcs.w	40643a <__udivmoddi4+0x2a6>
  4061f4:	42ab      	cmp	r3, r5
  4061f6:	f240 8120 	bls.w	40643a <__udivmoddi4+0x2a6>
  4061fa:	f1a8 0802 	sub.w	r8, r8, #2
  4061fe:	443d      	add	r5, r7
  406200:	1aed      	subs	r5, r5, r3
  406202:	b2a4      	uxth	r4, r4
  406204:	fbb5 f0fa 	udiv	r0, r5, sl
  406208:	fb0a 5510 	mls	r5, sl, r0, r5
  40620c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  406210:	fb00 f909 	mul.w	r9, r0, r9
  406214:	45a1      	cmp	r9, r4
  406216:	d909      	bls.n	40622c <__udivmoddi4+0x98>
  406218:	19e4      	adds	r4, r4, r7
  40621a:	f100 33ff 	add.w	r3, r0, #4294967295
  40621e:	f080 810a 	bcs.w	406436 <__udivmoddi4+0x2a2>
  406222:	45a1      	cmp	r9, r4
  406224:	f240 8107 	bls.w	406436 <__udivmoddi4+0x2a2>
  406228:	3802      	subs	r0, #2
  40622a:	443c      	add	r4, r7
  40622c:	eba4 0409 	sub.w	r4, r4, r9
  406230:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406234:	2100      	movs	r1, #0
  406236:	2e00      	cmp	r6, #0
  406238:	d061      	beq.n	4062fe <__udivmoddi4+0x16a>
  40623a:	fa24 f40e 	lsr.w	r4, r4, lr
  40623e:	2300      	movs	r3, #0
  406240:	6034      	str	r4, [r6, #0]
  406242:	6073      	str	r3, [r6, #4]
  406244:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406248:	428b      	cmp	r3, r1
  40624a:	d907      	bls.n	40625c <__udivmoddi4+0xc8>
  40624c:	2e00      	cmp	r6, #0
  40624e:	d054      	beq.n	4062fa <__udivmoddi4+0x166>
  406250:	2100      	movs	r1, #0
  406252:	e886 0021 	stmia.w	r6, {r0, r5}
  406256:	4608      	mov	r0, r1
  406258:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40625c:	fab3 f183 	clz	r1, r3
  406260:	2900      	cmp	r1, #0
  406262:	f040 808e 	bne.w	406382 <__udivmoddi4+0x1ee>
  406266:	42ab      	cmp	r3, r5
  406268:	d302      	bcc.n	406270 <__udivmoddi4+0xdc>
  40626a:	4282      	cmp	r2, r0
  40626c:	f200 80fa 	bhi.w	406464 <__udivmoddi4+0x2d0>
  406270:	1a84      	subs	r4, r0, r2
  406272:	eb65 0503 	sbc.w	r5, r5, r3
  406276:	2001      	movs	r0, #1
  406278:	46ac      	mov	ip, r5
  40627a:	2e00      	cmp	r6, #0
  40627c:	d03f      	beq.n	4062fe <__udivmoddi4+0x16a>
  40627e:	e886 1010 	stmia.w	r6, {r4, ip}
  406282:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406286:	b912      	cbnz	r2, 40628e <__udivmoddi4+0xfa>
  406288:	2701      	movs	r7, #1
  40628a:	fbb7 f7f2 	udiv	r7, r7, r2
  40628e:	fab7 fe87 	clz	lr, r7
  406292:	f1be 0f00 	cmp.w	lr, #0
  406296:	d134      	bne.n	406302 <__udivmoddi4+0x16e>
  406298:	1beb      	subs	r3, r5, r7
  40629a:	0c3a      	lsrs	r2, r7, #16
  40629c:	fa1f fc87 	uxth.w	ip, r7
  4062a0:	2101      	movs	r1, #1
  4062a2:	fbb3 f8f2 	udiv	r8, r3, r2
  4062a6:	0c25      	lsrs	r5, r4, #16
  4062a8:	fb02 3318 	mls	r3, r2, r8, r3
  4062ac:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4062b0:	fb0c f308 	mul.w	r3, ip, r8
  4062b4:	42ab      	cmp	r3, r5
  4062b6:	d907      	bls.n	4062c8 <__udivmoddi4+0x134>
  4062b8:	19ed      	adds	r5, r5, r7
  4062ba:	f108 30ff 	add.w	r0, r8, #4294967295
  4062be:	d202      	bcs.n	4062c6 <__udivmoddi4+0x132>
  4062c0:	42ab      	cmp	r3, r5
  4062c2:	f200 80d1 	bhi.w	406468 <__udivmoddi4+0x2d4>
  4062c6:	4680      	mov	r8, r0
  4062c8:	1aed      	subs	r5, r5, r3
  4062ca:	b2a3      	uxth	r3, r4
  4062cc:	fbb5 f0f2 	udiv	r0, r5, r2
  4062d0:	fb02 5510 	mls	r5, r2, r0, r5
  4062d4:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  4062d8:	fb0c fc00 	mul.w	ip, ip, r0
  4062dc:	45a4      	cmp	ip, r4
  4062de:	d907      	bls.n	4062f0 <__udivmoddi4+0x15c>
  4062e0:	19e4      	adds	r4, r4, r7
  4062e2:	f100 33ff 	add.w	r3, r0, #4294967295
  4062e6:	d202      	bcs.n	4062ee <__udivmoddi4+0x15a>
  4062e8:	45a4      	cmp	ip, r4
  4062ea:	f200 80b8 	bhi.w	40645e <__udivmoddi4+0x2ca>
  4062ee:	4618      	mov	r0, r3
  4062f0:	eba4 040c 	sub.w	r4, r4, ip
  4062f4:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4062f8:	e79d      	b.n	406236 <__udivmoddi4+0xa2>
  4062fa:	4631      	mov	r1, r6
  4062fc:	4630      	mov	r0, r6
  4062fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406302:	f1ce 0420 	rsb	r4, lr, #32
  406306:	fa05 f30e 	lsl.w	r3, r5, lr
  40630a:	fa07 f70e 	lsl.w	r7, r7, lr
  40630e:	fa20 f804 	lsr.w	r8, r0, r4
  406312:	0c3a      	lsrs	r2, r7, #16
  406314:	fa25 f404 	lsr.w	r4, r5, r4
  406318:	ea48 0803 	orr.w	r8, r8, r3
  40631c:	fbb4 f1f2 	udiv	r1, r4, r2
  406320:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406324:	fb02 4411 	mls	r4, r2, r1, r4
  406328:	fa1f fc87 	uxth.w	ip, r7
  40632c:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  406330:	fb01 f30c 	mul.w	r3, r1, ip
  406334:	42ab      	cmp	r3, r5
  406336:	fa00 f40e 	lsl.w	r4, r0, lr
  40633a:	d909      	bls.n	406350 <__udivmoddi4+0x1bc>
  40633c:	19ed      	adds	r5, r5, r7
  40633e:	f101 30ff 	add.w	r0, r1, #4294967295
  406342:	f080 808a 	bcs.w	40645a <__udivmoddi4+0x2c6>
  406346:	42ab      	cmp	r3, r5
  406348:	f240 8087 	bls.w	40645a <__udivmoddi4+0x2c6>
  40634c:	3902      	subs	r1, #2
  40634e:	443d      	add	r5, r7
  406350:	1aeb      	subs	r3, r5, r3
  406352:	fa1f f588 	uxth.w	r5, r8
  406356:	fbb3 f0f2 	udiv	r0, r3, r2
  40635a:	fb02 3310 	mls	r3, r2, r0, r3
  40635e:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406362:	fb00 f30c 	mul.w	r3, r0, ip
  406366:	42ab      	cmp	r3, r5
  406368:	d907      	bls.n	40637a <__udivmoddi4+0x1e6>
  40636a:	19ed      	adds	r5, r5, r7
  40636c:	f100 38ff 	add.w	r8, r0, #4294967295
  406370:	d26f      	bcs.n	406452 <__udivmoddi4+0x2be>
  406372:	42ab      	cmp	r3, r5
  406374:	d96d      	bls.n	406452 <__udivmoddi4+0x2be>
  406376:	3802      	subs	r0, #2
  406378:	443d      	add	r5, r7
  40637a:	1aeb      	subs	r3, r5, r3
  40637c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406380:	e78f      	b.n	4062a2 <__udivmoddi4+0x10e>
  406382:	f1c1 0720 	rsb	r7, r1, #32
  406386:	fa22 f807 	lsr.w	r8, r2, r7
  40638a:	408b      	lsls	r3, r1
  40638c:	fa05 f401 	lsl.w	r4, r5, r1
  406390:	ea48 0303 	orr.w	r3, r8, r3
  406394:	fa20 fe07 	lsr.w	lr, r0, r7
  406398:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40639c:	40fd      	lsrs	r5, r7
  40639e:	ea4e 0e04 	orr.w	lr, lr, r4
  4063a2:	fbb5 f9fc 	udiv	r9, r5, ip
  4063a6:	ea4f 441e 	mov.w	r4, lr, lsr #16
  4063aa:	fb0c 5519 	mls	r5, ip, r9, r5
  4063ae:	fa1f f883 	uxth.w	r8, r3
  4063b2:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  4063b6:	fb09 f408 	mul.w	r4, r9, r8
  4063ba:	42ac      	cmp	r4, r5
  4063bc:	fa02 f201 	lsl.w	r2, r2, r1
  4063c0:	fa00 fa01 	lsl.w	sl, r0, r1
  4063c4:	d908      	bls.n	4063d8 <__udivmoddi4+0x244>
  4063c6:	18ed      	adds	r5, r5, r3
  4063c8:	f109 30ff 	add.w	r0, r9, #4294967295
  4063cc:	d243      	bcs.n	406456 <__udivmoddi4+0x2c2>
  4063ce:	42ac      	cmp	r4, r5
  4063d0:	d941      	bls.n	406456 <__udivmoddi4+0x2c2>
  4063d2:	f1a9 0902 	sub.w	r9, r9, #2
  4063d6:	441d      	add	r5, r3
  4063d8:	1b2d      	subs	r5, r5, r4
  4063da:	fa1f fe8e 	uxth.w	lr, lr
  4063de:	fbb5 f0fc 	udiv	r0, r5, ip
  4063e2:	fb0c 5510 	mls	r5, ip, r0, r5
  4063e6:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  4063ea:	fb00 f808 	mul.w	r8, r0, r8
  4063ee:	45a0      	cmp	r8, r4
  4063f0:	d907      	bls.n	406402 <__udivmoddi4+0x26e>
  4063f2:	18e4      	adds	r4, r4, r3
  4063f4:	f100 35ff 	add.w	r5, r0, #4294967295
  4063f8:	d229      	bcs.n	40644e <__udivmoddi4+0x2ba>
  4063fa:	45a0      	cmp	r8, r4
  4063fc:	d927      	bls.n	40644e <__udivmoddi4+0x2ba>
  4063fe:	3802      	subs	r0, #2
  406400:	441c      	add	r4, r3
  406402:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406406:	eba4 0408 	sub.w	r4, r4, r8
  40640a:	fba0 8902 	umull	r8, r9, r0, r2
  40640e:	454c      	cmp	r4, r9
  406410:	46c6      	mov	lr, r8
  406412:	464d      	mov	r5, r9
  406414:	d315      	bcc.n	406442 <__udivmoddi4+0x2ae>
  406416:	d012      	beq.n	40643e <__udivmoddi4+0x2aa>
  406418:	b156      	cbz	r6, 406430 <__udivmoddi4+0x29c>
  40641a:	ebba 030e 	subs.w	r3, sl, lr
  40641e:	eb64 0405 	sbc.w	r4, r4, r5
  406422:	fa04 f707 	lsl.w	r7, r4, r7
  406426:	40cb      	lsrs	r3, r1
  406428:	431f      	orrs	r7, r3
  40642a:	40cc      	lsrs	r4, r1
  40642c:	6037      	str	r7, [r6, #0]
  40642e:	6074      	str	r4, [r6, #4]
  406430:	2100      	movs	r1, #0
  406432:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406436:	4618      	mov	r0, r3
  406438:	e6f8      	b.n	40622c <__udivmoddi4+0x98>
  40643a:	4690      	mov	r8, r2
  40643c:	e6e0      	b.n	406200 <__udivmoddi4+0x6c>
  40643e:	45c2      	cmp	sl, r8
  406440:	d2ea      	bcs.n	406418 <__udivmoddi4+0x284>
  406442:	ebb8 0e02 	subs.w	lr, r8, r2
  406446:	eb69 0503 	sbc.w	r5, r9, r3
  40644a:	3801      	subs	r0, #1
  40644c:	e7e4      	b.n	406418 <__udivmoddi4+0x284>
  40644e:	4628      	mov	r0, r5
  406450:	e7d7      	b.n	406402 <__udivmoddi4+0x26e>
  406452:	4640      	mov	r0, r8
  406454:	e791      	b.n	40637a <__udivmoddi4+0x1e6>
  406456:	4681      	mov	r9, r0
  406458:	e7be      	b.n	4063d8 <__udivmoddi4+0x244>
  40645a:	4601      	mov	r1, r0
  40645c:	e778      	b.n	406350 <__udivmoddi4+0x1bc>
  40645e:	3802      	subs	r0, #2
  406460:	443c      	add	r4, r7
  406462:	e745      	b.n	4062f0 <__udivmoddi4+0x15c>
  406464:	4608      	mov	r0, r1
  406466:	e708      	b.n	40627a <__udivmoddi4+0xe6>
  406468:	f1a8 0802 	sub.w	r8, r8, #2
  40646c:	443d      	add	r5, r7
  40646e:	e72b      	b.n	4062c8 <__udivmoddi4+0x134>

00406470 <__aeabi_idiv0>:
  406470:	4770      	bx	lr
  406472:	bf00      	nop

00406474 <p_uc_charset10x14>:
	...
  406490:	ccff ccff 0000 0000 0000 0000 0000 0000     ................
  4064a0:	00f0 00f0 0000 0000 00f0 00f0 0000 0000     ................
  4064b0:	c00c c00c fcff fcff c00c c00c fcff fcff     ................
  4064c0:	c00c c00c 600c 701e 303f 3033 fcff fcff     .....`.p?030....
  4064d0:	3033 f033 e039 c018 0060 0cf0 3cf0 f060     303.9...`....<`.
  4064e0:	c003 000f 183c 3cf0 3cc0 1800 f03c f87f     ....<..<.<..<...
  4064f0:	1cc3 8cc7 cccf ecdc 7878 3030 fc00 cc00     ........xx00....
  406500:	0000 0000 0000 0044 00ec 00f8 0070 0000     ......D.....p...
	...
  406518:	c00f f03f 7878 1860 0cc0 0cc0 0000 0000     ..?.xx`.........
  406528:	0000 0000 0cc0 0cc0 1860 7878 f03f c00f     ........`.xx?...
  406538:	0000 0000 600c e00e c007 8003 f83f f83f     .....`......?.?.
  406548:	8003 c007 e00e 600c 0003 0003 0003 0003     .......`........
  406558:	f03f f03f 0003 0003 0003 0003 4400 ec00     ?.?..........D..
  406568:	f800 7000 0000 0000 0000 0000 0000 0000     ...p............
  406578:	0003 0003 0003 0003 0003 0003 0003 0003     ................
  406588:	0003 0003 1800 3c00 3c00 1800 0000 0000     .......<.<......
	...
  4065a0:	0000 0c00 3c00 f000 c003 000f 003c 00f0     .....<......<...
  4065b0:	00c0 0000 f03f f87f fce0 ccc1 8cc3 0cc7     ....?...........
  4065c0:	0cce 1cfc f87f f03f 0000 0000 0c30 0c70     ......?.....0.p.
  4065d0:	fcff fcff 0c00 0c00 0000 0000 0c30 1c70     ............0.p.
  4065e0:	3ce0 7cc0 ecc0 ccc1 8cc3 0ce7 0c7e 0c3c     .<.|........~.<.
  4065f0:	3030 3870 1ce0 0cc0 0cc0 0cc3 0cc3 1ce3     00p8............
  406600:	f87f f03c c003 c007 c00e c01c c038 c070     ..<.........8.p.
  406610:	fcff fcff c000 c000 30fc 38fc 1ccc 0ccc     .........0.8....
  406620:	0ccc 0ccc 0ccc 1cce f8c7 f0c3 f03f f87f     ............?...
  406630:	1ce3 0cc3 0cc3 0cc3 0cc3 9ce3 f871 f030     ............q.0.
  406640:	00c0 00c0 00c0 00c0 fcc3 fcc7 00ce 00dc     ................
  406650:	00f8 00f0 f03c f87f 9ce7 0cc3 0cc3 0cc3     ....<...........
  406660:	0cc3 9ce7 f87f f03c 003c 007e 0ce7 0cc3     ......<.<.~.....
  406670:	1cc3 38c3 70c3 e0e7 c07f 803f 0000 0000     ...8.p....?.....
  406680:	0000 6018 f03c f03c 6018 0000 0000 0000     ...`<.<..`......
  406690:	0000 0000 0000 4418 ec3c f83c 7018 0000     .......D<.<..p..
  4066a0:	0000 0000 0000 0003 8007 c00f e01c 7038     ..............8p
  4066b0:	3870 1ce0 0cc0 0000 c00c c00c c00c c00c     p8..............
  4066c0:	c00c c00c c00c c00c c00c c00c 0000 0cc0     ................
  4066d0:	1ce0 3870 7038 e01c c00f 8007 0003 0000     ..p88p..........
  4066e0:	0030 0070 00e0 00c0 ecc1 ecc3 00c3 00e6     0.p.............
  4066f0:	007e 003c f030 f871 9ce3 0cc3 fcc3 fcc3     ~.<.0.q.........
  406700:	0cc0 1ce0 f87f f03f fc3f fc7f c0e0 c0c0     ......?.?.......
  406710:	c0c0 c0c0 c0c0 c0e0 fc7f fc3f fcff fcff     ..........?.....
  406720:	0cc3 0cc3 0cc3 0cc3 0cc3 9ce7 f87f f03c     ..............<.
  406730:	f03f f87f 1ce0 0cc0 0cc0 0cc0 0cc0 1ce0     ?...............
  406740:	3870 3030 fcff fcff 0cc0 0cc0 0cc0 0cc0     p800............
  406750:	0cc0 1ce0 f87f f03f fcff fcff 0cc3 0cc3     ......?.........
  406760:	0cc3 0cc3 0cc3 0cc3 0cc0 0cc0 fcff fcff     ................
  406770:	00c3 00c3 00c3 00c3 00c3 00c3 00c0 00c0     ................
  406780:	f03f f87f 1ce0 0cc0 0cc0 0cc3 0cc3 1ce3     ?...............
  406790:	f873 f033 fcff fcff 0003 0003 0003 0003     s.3.............
  4067a0:	0003 0003 fcff fcff 0000 0000 0cc0 0cc0     ................
  4067b0:	fcff fcff 0cc0 0cc0 0000 0000 3000 3800     .............0.8
  4067c0:	1cc0 0cc0 0cc0 1cc0 f8ff f0ff 00c0 00c0     ................
  4067d0:	fcff fcff 8007 8007 c00f e01c 7038 3870     ............8pp8
  4067e0:	1ce0 0cc0 fcff fcff 0c00 0c00 0c00 0c00     ................
  4067f0:	0c00 0c00 0c00 0c00 fcff fcff 0070 0038     ............p.8.
  406800:	001f 001f 0038 0070 fcff fcff fcff fcff     ....8.p.........
  406810:	001c 000e 0007 8003 c001 e000 fcff fcff     ................
  406820:	f03f f87f 1ce0 0cc0 0cc0 0cc0 0cc0 1ce0     ?...............
  406830:	f87f f03f fcff fcff 00c3 00c3 00c3 00c3     ..?.............
  406840:	00c3 00e7 007e 003c f03f f87f 1ce0 0cc0     ....~.<.?.......
  406850:	ccc0 ecc0 7cc0 38e0 fc7f ec3f fcff fcff     .....|.8..?.....
  406860:	00c3 80c3 80c3 c0c3 c0c3 70e7 3c7e 1c3c     ...........p~<<.
  406870:	183c 1c7e 0ce7 0cc3 0cc3 0cc3 0cc3 9cc3     <.~.............
  406880:	f8e1 f060 00c0 00c0 00c0 00c0 fcff fcff     ..`.............
  406890:	00c0 00c0 00c0 00c0 f0ff f8ff 1c00 0c00     ................
  4068a0:	0c00 0c00 0c00 1c00 f8ff f0ff c0ff e0ff     ................
  4068b0:	7000 3800 1c00 1c00 3800 7000 e0ff c0ff     .p.8.....8.p....
  4068c0:	f0ff f8ff 1c00 3c00 f800 f800 3c00 1c00     .......<.....<..
  4068d0:	f8ff f0ff 3cf0 7cf8 e01c c00f 8007 8007     .....<.|........
  4068e0:	c00f e01c 7cf8 3cf0 00fc 00fe 0007 8003     .....|.<........
  4068f0:	fc01 fc01 8003 0007 00fe 00fc 3cc0 7cc0     .............<.|
  406900:	ecc0 ccc1 8cc3 0cc7 0cce 0cdc 0cf8 0cf0     ................
  406910:	0000 0000 fcff fcff 0cc0 0cc0 0cc0 0000     ................
  406920:	0000 0000 0030 0030 000c 000c 0003 0003     ....0.0.........
  406930:	c000 c000 3000 3000 0000 0000 0cc0 0cc0     .....0.0........
  406940:	0cc0 fcff fcff 0000 0000 0000 000c 001c     ................
  406950:	0038 0070 00e0 00e0 0070 0038 001c 000c     8.p.....p.8.....
  406960:	0c00 0c00 0c00 0c00 0c00 0c00 0c00 0c00     ................
  406970:	0c00 0c00 0000 0000 00c0 00e0 0070 0038     ............p.8.
  406980:	0018 0000 0000 0000 3000 7806 fc0e cc0c     .........0.x....
  406990:	cc0c cc0c cc0c cc0e fc07 f803 fcff fcff     ................
  4069a0:	0c03 0c03 0c03 0c03 0c03 9c03 f801 f000     ................
  4069b0:	f003 f807 1c0e 0c0c 0c0c 0c0c 0c0c 1c0e     ................
  4069c0:	3807 3003 f000 f801 9c03 0c03 0c03 0c03     .8.0............
  4069d0:	0c03 0c03 fcff fcff f003 f807 dc0e cc0c     ................
  4069e0:	cc0c cc0c cc0c dc0e d807 9003 0000 0003     ................
  4069f0:	fc3f fc7f 00e3 00e3 0070 0030 0000 0000     ?.......p.0.....
  406a00:	1803 9c07 cc0f cc0c cc0c cc0c cc0c dc0c     ................
  406a10:	f80f f007 fcff fcff 0003 0003 0003 0003     ................
  406a20:	8003 fc01 fc00 0000 0000 0000 0000 0000     ................
  406a30:	fc1b fc1b 0000 0000 0000 0000 0000 3000     ...............0
  406a40:	3800 1c00 0c00 0c00 1c00 f8cf f0cf 0000     .8..............
  406a50:	0000 fcff fcff e000 e001 f003 3807 1c0e     .............8..
  406a60:	0c0c 0000 0000 0000 0cc0 0cc0 fcff fcff     ................
  406a70:	0c00 0c00 0000 0000 fc0f fc0f 000e 0007     ................
  406a80:	c003 c003 0007 000e fc0f fc0f fc0f fc0f     ................
  406a90:	0003 0007 000e 000c 000c 000e fc07 fc03     ................
  406aa0:	f003 f807 1c0e 0c0c 0c0c 0c0c 0c0c 1c0e     ................
  406ab0:	f807 f003 fc0f fc0f c00c c00c c00c c00c     ................
  406ac0:	c00c c00f 8007 0003 0003 8007 c00f c00c     ................
  406ad0:	c00c c00c c00c c00c fc0f fc0f fc0f fc0f     ................
  406ae0:	8003 0007 000e 000c 000c 000e 0007 0003     ................
  406af0:	1803 9c07 cc0f cc0c cc0c cc0c cc0c fc0c     ................
  406b00:	780e 3006 0000 000c 000c f0ff f8ff 1c0c     .x.0............
  406b10:	1c0c 380c 300c 0000 f00f f80f 1c00 0c00     ...8.0..........
  406b20:	0c00 0c00 0c00 1c00 f80f f00f c00f e00f     ................
  406b30:	7000 3800 1c00 1c00 3800 7000 e00f c00f     .p.8.....8.p....
  406b40:	f00f f80f 1c00 1c00 f800 f800 1c00 1c00     ................
  406b50:	f80f f00f 0c0c 1c0e 3807 f003 e001 e001     .........8......
  406b60:	f003 3807 1c0e 0c0c 000c 000e 0c07 9c03     ...8............
  406b70:	f801 f001 8003 0007 000e 000c 0c0c 1c0c     ................
  406b80:	3c0c 7c0c ec0c cc0d 8c0f 0c0f 0c0e 0c0c     .<.|............
  406b90:	0000 0003 8007 f03f f87c 1ce0 0cc0 0cc0     ......?.|.......
  406ba0:	0cc0 0000 0c03 0c03 fc3f fc7f 0ce3 0cc3     ........?.......
  406bb0:	0cc0 0ce0 0c70 0c30 0000 0cc0 0cc0 0cc0     ....p.0.........
  406bc0:	1ce0 f87c f03f 8007 0003 0000 00c0 00c0     ..|.?...........
  406bd0:	00c0 00c0 00c0 00c0 00c0 00c0 00c0 00c0     ................
  406be0:	fcff fcff fcff fcff fcff fcff fcff fcff     ................
  406bf0:	fcff fcff 6f50 3a74 2520 0064 6d55 3a69     ....Pot: %d.Umi:
  406c00:	2520 0064 7541 616c 2d20 4120 4344 0000      %d.Aula - ADC..

00406c10 <_global_impure_ptr>:
  406c10:	0018 2000 4e49 0046 6e69 0066 414e 004e     ... INF.inf.NAN.
  406c20:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406c30:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406c40:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406c50:	296c 0000 0030 0000                         l)..0...

00406c58 <blanks.7223>:
  406c58:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406c68 <zeroes.7224>:
  406c68:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406c78:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  406c88:	0043 0000 4f50 4953 0058 0000 002e 0000     C...POSIX.......

00406c98 <__mprec_bigtens>:
  406c98:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406ca8:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406cb8:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406cc0 <__mprec_tens>:
  406cc0:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406cd0:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406ce0:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406cf0:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406d00:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406d10:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406d20:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406d30:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406d40:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406d50:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406d60:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406d70:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406d80:	9db4 79d9 7843 44ea                         ...yCx.D

00406d88 <p05.6055>:
  406d88:	0005 0000 0019 0000 007d 0000               ........}...

00406d94 <_ctype_>:
  406d94:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  406da4:	2020 2020 2020 2020 2020 2020 2020 2020                     
  406db4:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  406dc4:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  406dd4:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  406de4:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  406df4:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  406e04:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  406e14:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00406e98 <_init>:
  406e98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406e9a:	bf00      	nop
  406e9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406e9e:	bc08      	pop	{r3}
  406ea0:	469e      	mov	lr, r3
  406ea2:	4770      	bx	lr

00406ea4 <__init_array_start>:
  406ea4:	004031f9 	.word	0x004031f9

00406ea8 <__frame_dummy_init_array_entry>:
  406ea8:	004000f1                                ..@.

00406eac <_fini>:
  406eac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406eae:	bf00      	nop
  406eb0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406eb2:	bc08      	pop	{r3}
  406eb4:	469e      	mov	lr, r3
  406eb6:	4770      	bx	lr

00406eb8 <__fini_array_start>:
  406eb8:	004000cd 	.word	0x004000cd
